%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: AiFiMatch-OnlinePosition-Black.pdf
%%Creator: Adobe Acrobat 18.11.0
%%For: wenping
%%CreationDate: 2018/7/27, 16:14:21
%%BoundingBox: 0 0 376 539
%%HiResBoundingBox: 0 0 375.8400 538.5600
%%CropBox: 0 0 375.8400 538.5600
%%LanguageLevel: 2
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%Pages: (atend)
%%DocumentProcessColors:  Black
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$None SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 571 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c015 84.159810, 2016/09/10-02:41:30        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
    xmlns:dc="http://purl.org/dc/elements/1.1/"
   xmp:CreateDate="2018-07-27T16:13:32+08:00"
   xmp:CreatorTool="matplotlib 2.1.0, http://matplotlib.org"
   pdf:Producer="matplotlib pdf backend 2.1.0"
   dc:format="application/pdf"/>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[/Document 1 dict begin /Metadata {Doc_Metadata} def currentdict end /BDC pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Core/capture_mysetup gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%%EndPageSetup
1 -1 scale 0 -538.56 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 538.56 li
375.84 538.56 li
375.84 0 li
cp
clp
gsave
0 538.56 mo
376 538.56 li
376 -.440062 li
0 -.440062 li
0 538.56 li
clp
0 538.56 mo
375.84 538.56 li
375.84 0 li
0 0 li
0 538.56 li
false sop
/0 
<<
/Name (Black)
/0 
[/DeviceCMYK] /CSA add_res
/CSA /0 get_csa_by_name
/MappedCSA /0 /CSA get_res
/TintMethod /Subtractive
/TintProc null
/NComponents 4 
/Components [ 0 0 0 1 ] 
>>
/CSD add_res
1 /0 /CSD get_res sepcs
0 sep
f
64.4297 127.834 mo
357.048 127.834 li
357.048 19.2344 li
64.4297 19.2344 li
64.4297 127.834 li
f
gsave
64.4297 127.834 mo
357.048 127.834 li
357.048 19.2342 li
64.4297 19.2342 li
64.4297 127.834 li
clp
.8 lw
2 lc
1 lj
10 ml
[] 0 dsh
true sadj
64.4297 127.834 mo
64.4297 19.2343 li
1 /0 /CSD get_res sepcs
.309804 sep
@
grestore
64.4297 127.834 mo
64.4297 131.334 li
1 /0 /CSD get_res sepcs
1 sep
f
.8 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
64.4297 127.834 mo
64.4297 131.334 li
@
60.5777 141.448 mo
60.5777 140.098 60.7757 138.928 61.1897 137.938 cv
61.5857 136.966 62.1437 136.228 62.8277 135.742 cv
63.3497 135.364 63.8897 135.166 64.4657 135.166 cv
65.3657 135.166 66.1937 135.634 66.9317 136.57 cv
67.8317 137.722 68.2817 139.288 68.2817 141.268 cv
68.2817 142.654 68.0837 143.824 67.6877 144.796 cv
67.2917 145.768 66.7697 146.452 66.1577 146.884 cv
65.5457 147.316 64.9517 147.532 64.3757 147.532 cv
63.2237 147.532 62.2877 146.866 61.5317 145.534 cv
60.8837 144.418 60.5777 143.05 60.5777 141.448 cv
62.3057 141.664 mo
62.3057 143.32 62.5037 144.652 62.9177 145.678 cv
63.2417 146.56 63.7277 146.992 64.4117 146.992 cv
64.7177 146.992 65.0417 146.866 65.3837 146.578 cv
65.7257 146.29 65.9777 145.822 66.1577 145.138 cv
66.4277 144.13 66.5717 142.708 66.5717 140.872 cv
66.5717 139.522 66.4277 138.388 66.1397 137.47 cv
65.9237 136.804 65.6537 136.336 65.3297 136.048 cv
65.0777 135.85 64.7897 135.742 64.4477 135.742 cv
64.0517 135.742 63.6917 135.922 63.3857 136.282 cv
62.9537 136.786 62.6657 137.542 62.5217 138.586 cv
62.3777 139.63 62.3057 140.656 62.3057 141.664 cv
f
gsave
64.4297 127.834 mo
357.048 127.834 li
357.048 19.2342 li
64.4297 19.2342 li
64.4297 127.834 li
clp
2 lc
122.953 127.834 mo
122.953 19.2343 li
1 /0 /CSD get_res sepcs
.309804 sep
@
grestore
122.953 127.834 mo
122.953 131.334 li
f
122.953 127.834 mo
122.953 131.334 li
@
121.765 135.418 mo
121.081 136.912 li
117.499 136.912 li
116.707 138.514 li
118.255 138.748 119.497 139.324 120.397 140.242 cv
121.171 141.034 121.567 141.97 121.567 143.05 cv
121.567 143.68 121.441 144.256 121.189 144.796 cv
120.937 145.336 120.613 145.786 120.217 146.164 cv
119.821 146.542 119.407 146.848 118.939 147.064 cv
118.255 147.37 117.571 147.532 116.869 147.532 cv
116.149 147.532 115.627 147.406 115.303 147.172 cv
114.979 146.938 114.817 146.668 114.817 146.38 cv
114.817 146.218 114.871 146.074 115.015 145.948 cv
115.141 145.822 115.303 145.75 115.519 145.75 cv
115.663 145.75 115.807 145.786 115.915 145.822 cv
116.023 145.876 116.221 146.002 116.509 146.182 cv
116.941 146.488 117.391 146.632 117.841 146.632 cv
118.525 146.632 119.119 146.38 119.641 145.858 cv
120.163 145.354 120.433 144.724 120.433 143.968 cv
120.433 143.248 120.199 142.582 119.731 141.952 cv
119.263 141.34 118.633 140.854 117.823 140.512 cv
117.175 140.26 116.311 140.098 115.213 140.044 cv
117.499 135.418 li
121.765 135.418 li
f
123.601 141.448 mo
123.601 140.098 123.799 138.928 124.213 137.938 cv
124.609 136.966 125.167 136.228 125.851 135.742 cv
126.373 135.364 126.913 135.166 127.489 135.166 cv
128.389 135.166 129.217 135.634 129.955 136.57 cv
130.855 137.722 131.305 139.288 131.305 141.268 cv
131.305 142.654 131.107 143.824 130.711 144.796 cv
130.315 145.768 129.793 146.452 129.181 146.884 cv
128.569 147.316 127.975 147.532 127.399 147.532 cv
126.247 147.532 125.311 146.866 124.555 145.534 cv
123.907 144.418 123.601 143.05 123.601 141.448 cv
125.329 141.664 mo
125.329 143.32 125.527 144.652 125.941 145.678 cv
126.265 146.56 126.751 146.992 127.435 146.992 cv
127.741 146.992 128.065 146.866 128.407 146.578 cv
128.749 146.29 129.001 145.822 129.181 145.138 cv
129.451 144.13 129.595 142.708 129.595 140.872 cv
129.595 139.522 129.451 138.388 129.163 137.47 cv
128.947 136.804 128.677 136.336 128.353 136.048 cv
128.101 135.85 127.813 135.742 127.471 135.742 cv
127.075 135.742 126.715 135.922 126.409 136.282 cv
125.977 136.786 125.689 137.542 125.545 138.586 cv
125.401 139.63 125.329 140.656 125.329 141.664 cv
f
gsave
64.4297 127.834 mo
357.048 127.834 li
357.048 19.2342 li
64.4297 19.2342 li
64.4297 127.834 li
clp
2 lc
181.477 127.834 mo
181.477 19.2343 li
1 /0 /CSD get_res sepcs
.309804 sep
@
grestore
181.477 127.834 mo
181.477 131.334 li
f
181.477 127.834 mo
181.477 131.334 li
@
170.083 136.588 mo
172.981 135.166 li
173.269 135.166 li
173.269 145.228 li
173.269 145.912 173.287 146.326 173.359 146.488 cv
173.413 146.65 173.521 146.776 173.701 146.866 cv
173.881 146.956 174.241 147.01 174.781 147.01 cv
174.781 147.334 li
170.299 147.334 li
170.299 147.01 li
170.857 147.01 171.217 146.956 171.379 146.866 cv
171.541 146.794 171.649 146.668 171.721 146.524 cv
171.793 146.38 171.829 145.948 171.829 145.228 cv
171.829 138.802 li
171.829 137.938 171.793 137.38 171.739 137.128 cv
171.703 136.948 171.631 136.804 171.523 136.714 cv
171.415 136.642 171.271 136.588 171.127 136.588 cv
170.911 136.588 170.605 136.678 170.227 136.858 cv
170.083 136.588 li
f
177.625 141.448 mo
177.625 140.098 177.823 138.928 178.237 137.938 cv
178.633 136.966 179.191 136.228 179.875 135.742 cv
180.397 135.364 180.937 135.166 181.513 135.166 cv
182.413 135.166 183.241 135.634 183.979 136.57 cv
184.879 137.722 185.329 139.288 185.329 141.268 cv
185.329 142.654 185.131 143.824 184.735 144.796 cv
184.339 145.768 183.817 146.452 183.205 146.884 cv
182.593 147.316 181.999 147.532 181.423 147.532 cv
180.271 147.532 179.335 146.866 178.579 145.534 cv
177.931 144.418 177.625 143.05 177.625 141.448 cv
179.353 141.664 mo
179.353 143.32 179.551 144.652 179.965 145.678 cv
180.289 146.56 180.775 146.992 181.459 146.992 cv
181.765 146.992 182.089 146.866 182.431 146.578 cv
182.773 146.29 183.025 145.822 183.205 145.138 cv
183.475 144.13 183.619 142.708 183.619 140.872 cv
183.619 139.522 183.475 138.388 183.187 137.47 cv
182.971 136.804 182.701 136.336 182.377 136.048 cv
182.125 135.85 181.837 135.742 181.495 135.742 cv
181.099 135.742 180.739 135.922 180.433 136.282 cv
180.001 136.786 179.713 137.542 179.569 138.586 cv
179.425 139.63 179.353 140.656 179.353 141.664 cv
f
186.625 141.448 mo
186.625 140.098 186.823 138.928 187.237 137.938 cv
187.633 136.966 188.191 136.228 188.875 135.742 cv
189.397 135.364 189.937 135.166 190.513 135.166 cv
191.413 135.166 192.241 135.634 192.979 136.57 cv
193.879 137.722 194.329 139.288 194.329 141.268 cv
194.329 142.654 194.131 143.824 193.735 144.796 cv
193.339 145.768 192.817 146.452 192.205 146.884 cv
191.593 147.316 190.999 147.532 190.423 147.532 cv
189.271 147.532 188.335 146.866 187.579 145.534 cv
186.931 144.418 186.625 143.05 186.625 141.448 cv
188.353 141.664 mo
188.353 143.32 188.551 144.652 188.965 145.678 cv
189.289 146.56 189.775 146.992 190.459 146.992 cv
190.765 146.992 191.089 146.866 191.431 146.578 cv
191.773 146.29 192.025 145.822 192.205 145.138 cv
192.475 144.13 192.619 142.708 192.619 140.872 cv
192.619 139.522 192.475 138.388 192.187 137.47 cv
191.971 136.804 191.701 136.336 191.377 136.048 cv
191.125 135.85 190.837 135.742 190.495 135.742 cv
190.099 135.742 189.739 135.922 189.433 136.282 cv
189.001 136.786 188.713 137.542 188.569 138.586 cv
188.425 139.63 188.353 140.656 188.353 141.664 cv
f
gsave
64.4297 127.834 mo
357.048 127.834 li
357.048 19.2342 li
64.4297 19.2342 li
64.4297 127.834 li
clp
239.601 128.234 mo
239.601 18.8344 li
240.401 18.8344 li
240.401 128.234 li
239.601 128.234 li
1 /0 /CSD get_res sepcs
.309804 sep
f
grestore
240.001 127.834 mo
240.001 131.334 li
f
240.001 127.834 mo
240.001 131.334 li
@
228.607 136.588 mo
231.505 135.166 li
231.793 135.166 li
231.793 145.228 li
231.793 145.912 231.811 146.326 231.883 146.488 cv
231.937 146.65 232.045 146.776 232.225 146.866 cv
232.405 146.956 232.765 147.01 233.305 147.01 cv
233.305 147.334 li
228.823 147.334 li
228.823 147.01 li
229.381 147.01 229.741 146.956 229.903 146.866 cv
230.065 146.794 230.173 146.668 230.245 146.524 cv
230.317 146.38 230.353 145.948 230.353 145.228 cv
230.353 138.802 li
230.353 137.938 230.317 137.38 230.263 137.128 cv
230.227 136.948 230.155 136.804 230.047 136.714 cv
229.939 136.642 229.795 136.588 229.651 136.588 cv
229.435 136.588 229.129 136.678 228.751 136.858 cv
228.607 136.588 li
f
243.313 135.418 mo
242.629 136.912 li
239.047 136.912 li
238.255 138.514 li
239.803 138.748 241.045 139.324 241.945 140.242 cv
242.719 141.034 243.115 141.97 243.115 143.05 cv
243.115 143.68 242.989 144.256 242.737 144.796 cv
242.485 145.336 242.161 145.786 241.765 146.164 cv
241.369 146.542 240.955 146.848 240.487 147.064 cv
239.803 147.37 239.119 147.532 238.417 147.532 cv
237.697 147.532 237.175 147.406 236.851 147.172 cv
236.527 146.938 236.365 146.668 236.365 146.38 cv
236.365 146.218 236.419 146.074 236.563 145.948 cv
236.689 145.822 236.851 145.75 237.067 145.75 cv
237.211 145.75 237.355 145.786 237.463 145.822 cv
237.571 145.876 237.769 146.002 238.057 146.182 cv
238.489 146.488 238.939 146.632 239.389 146.632 cv
240.073 146.632 240.667 146.38 241.189 145.858 cv
241.711 145.354 241.981 144.724 241.981 143.968 cv
241.981 143.248 241.747 142.582 241.279 141.952 cv
240.811 141.34 240.181 140.854 239.371 140.512 cv
238.723 140.26 237.859 140.098 236.761 140.044 cv
239.047 135.418 li
243.313 135.418 li
f
245.149 141.448 mo
245.149 140.098 245.347 138.928 245.761 137.938 cv
246.157 136.966 246.715 136.228 247.399 135.742 cv
247.921 135.364 248.461 135.166 249.037 135.166 cv
249.937 135.166 250.765 135.634 251.503 136.57 cv
252.403 137.722 252.853 139.288 252.853 141.268 cv
252.853 142.654 252.655 143.824 252.259 144.796 cv
251.863 145.768 251.341 146.452 250.729 146.884 cv
250.117 147.316 249.523 147.532 248.947 147.532 cv
247.795 147.532 246.859 146.866 246.103 145.534 cv
245.455 144.418 245.149 143.05 245.149 141.448 cv
246.877 141.664 mo
246.877 143.32 247.075 144.652 247.489 145.678 cv
247.813 146.56 248.299 146.992 248.983 146.992 cv
249.289 146.992 249.613 146.866 249.955 146.578 cv
250.297 146.29 250.549 145.822 250.729 145.138 cv
250.999 144.13 251.143 142.708 251.143 140.872 cv
251.143 139.522 250.999 138.388 250.711 137.47 cv
250.495 136.804 250.225 136.336 249.901 136.048 cv
249.649 135.85 249.361 135.742 249.019 135.742 cv
248.623 135.742 248.263 135.922 247.957 136.282 cv
247.525 136.786 247.237 137.542 247.093 138.586 cv
246.949 139.63 246.877 140.656 246.877 141.664 cv
f
gsave
64.4297 127.834 mo
357.048 127.834 li
357.048 19.2342 li
64.4297 19.2342 li
64.4297 127.834 li
clp
298.124 128.234 mo
298.124 18.8344 li
298.924 18.8344 li
298.924 128.234 li
298.124 128.234 li
1 /0 /CSD get_res sepcs
.309804 sep
f
grestore
298.524 127.834 mo
298.524 131.334 li
f
298.524 127.834 mo
298.524 131.334 li
@
293.268 145.048 mo
292.44 147.334 li
285.402 147.334 li
285.402 147.01 li
287.472 145.138 288.93 143.59 289.776 142.384 cv
290.604 141.196 291.036 140.098 291.036 139.108 cv
291.036 138.352 290.802 137.74 290.334 137.254 cv
289.866 136.768 289.326 136.516 288.696 136.516 cv
288.102 136.516 287.58 136.696 287.112 137.038 cv
286.644 137.38 286.302 137.884 286.086 138.532 cv
285.762 138.532 li
285.906 137.452 286.266 136.624 286.878 136.048 cv
287.49 135.472 288.246 135.166 289.146 135.166 cv
290.118 135.166 290.928 135.49 291.576 136.102 cv
292.224 136.732 292.548 137.47 292.548 138.298 cv
292.548 138.91 292.404 139.504 292.134 140.116 cv
291.684 141.07 290.982 142.078 290.01 143.122 cv
288.552 144.724 287.634 145.678 287.274 146.002 cv
290.388 146.002 li
291.018 146.002 291.468 145.984 291.72 145.93 cv
291.972 145.894 292.206 145.804 292.422 145.66 cv
292.62 145.516 292.8 145.318 292.944 145.048 cv
293.268 145.048 li
f
294.672 141.448 mo
294.672 140.098 294.87 138.928 295.284 137.938 cv
295.68 136.966 296.238 136.228 296.922 135.742 cv
297.444 135.364 297.984 135.166 298.56 135.166 cv
299.46 135.166 300.288 135.634 301.026 136.57 cv
301.926 137.722 302.376 139.288 302.376 141.268 cv
302.376 142.654 302.178 143.824 301.782 144.796 cv
301.386 145.768 300.864 146.452 300.252 146.884 cv
299.64 147.316 299.046 147.532 298.47 147.532 cv
297.318 147.532 296.382 146.866 295.626 145.534 cv
294.978 144.418 294.672 143.05 294.672 141.448 cv
296.4 141.664 mo
296.4 143.32 296.598 144.652 297.012 145.678 cv
297.336 146.56 297.822 146.992 298.506 146.992 cv
298.812 146.992 299.136 146.866 299.478 146.578 cv
299.82 146.29 300.072 145.822 300.252 145.138 cv
300.522 144.13 300.666 142.708 300.666 140.872 cv
300.666 139.522 300.522 138.388 300.234 137.47 cv
300.018 136.804 299.748 136.336 299.424 136.048 cv
299.172 135.85 298.884 135.742 298.542 135.742 cv
298.146 135.742 297.786 135.922 297.48 136.282 cv
297.048 136.786 296.76 137.542 296.616 138.586 cv
296.472 139.63 296.4 140.656 296.4 141.664 cv
f
303.672 141.448 mo
303.672 140.098 303.87 138.928 304.284 137.938 cv
304.68 136.966 305.238 136.228 305.922 135.742 cv
306.444 135.364 306.984 135.166 307.56 135.166 cv
308.46 135.166 309.288 135.634 310.026 136.57 cv
310.926 137.722 311.376 139.288 311.376 141.268 cv
311.376 142.654 311.178 143.824 310.782 144.796 cv
310.386 145.768 309.864 146.452 309.252 146.884 cv
308.64 147.316 308.046 147.532 307.47 147.532 cv
306.318 147.532 305.382 146.866 304.626 145.534 cv
303.978 144.418 303.672 143.05 303.672 141.448 cv
305.4 141.664 mo
305.4 143.32 305.598 144.652 306.012 145.678 cv
306.336 146.56 306.822 146.992 307.506 146.992 cv
307.812 146.992 308.136 146.866 308.478 146.578 cv
308.82 146.29 309.072 145.822 309.252 145.138 cv
309.522 144.13 309.666 142.708 309.666 140.872 cv
309.666 139.522 309.522 138.388 309.234 137.47 cv
309.018 136.804 308.748 136.336 308.424 136.048 cv
308.172 135.85 307.884 135.742 307.542 135.742 cv
307.146 135.742 306.786 135.922 306.48 136.282 cv
306.048 136.786 305.76 137.542 305.616 138.586 cv
305.472 139.63 305.4 140.656 305.4 141.664 cv
f
gsave
64.4297 127.834 mo
357.048 127.834 li
357.048 19.2342 li
64.4297 19.2342 li
64.4297 127.834 li
clp
2 lc
357.048 127.834 mo
357.048 19.2343 li
1 /0 /CSD get_res sepcs
.309804 sep
@
grestore
357.048 127.834 mo
357.048 131.334 li
f
357.048 127.834 mo
357.048 131.334 li
@
351.792 145.048 mo
350.964 147.334 li
343.926 147.334 li
343.926 147.01 li
345.996 145.138 347.454 143.59 348.3 142.384 cv
349.128 141.196 349.56 140.098 349.56 139.108 cv
349.56 138.352 349.326 137.74 348.858 137.254 cv
348.39 136.768 347.85 136.516 347.22 136.516 cv
346.626 136.516 346.104 136.696 345.636 137.038 cv
345.168 137.38 344.826 137.884 344.61 138.532 cv
344.286 138.532 li
344.43 137.452 344.79 136.624 345.402 136.048 cv
346.014 135.472 346.77 135.166 347.67 135.166 cv
348.642 135.166 349.452 135.49 350.1 136.102 cv
350.748 136.732 351.072 137.47 351.072 138.298 cv
351.072 138.91 350.928 139.504 350.658 140.116 cv
350.208 141.07 349.506 142.078 348.534 143.122 cv
347.076 144.724 346.158 145.678 345.798 146.002 cv
348.912 146.002 li
349.542 146.002 349.992 145.984 350.244 145.93 cv
350.496 145.894 350.73 145.804 350.946 145.66 cv
351.144 145.516 351.324 145.318 351.468 145.048 cv
351.792 145.048 li
f
360.36 135.418 mo
359.676 136.912 li
356.094 136.912 li
355.302 138.514 li
356.85 138.748 358.092 139.324 358.992 140.242 cv
359.766 141.034 360.162 141.97 360.162 143.05 cv
360.162 143.68 360.036 144.256 359.784 144.796 cv
359.532 145.336 359.208 145.786 358.812 146.164 cv
358.416 146.542 358.002 146.848 357.534 147.064 cv
356.85 147.37 356.166 147.532 355.464 147.532 cv
354.744 147.532 354.222 147.406 353.898 147.172 cv
353.574 146.938 353.412 146.668 353.412 146.38 cv
353.412 146.218 353.466 146.074 353.61 145.948 cv
353.736 145.822 353.898 145.75 354.114 145.75 cv
354.258 145.75 354.402 145.786 354.51 145.822 cv
354.618 145.876 354.816 146.002 355.104 146.182 cv
355.536 146.488 355.986 146.632 356.436 146.632 cv
357.12 146.632 357.714 146.38 358.236 145.858 cv
358.758 145.354 359.028 144.724 359.028 143.968 cv
359.028 143.248 358.794 142.582 358.326 141.952 cv
357.858 141.34 357.228 140.854 356.418 140.512 cv
355.77 140.26 354.906 140.098 353.808 140.044 cv
356.094 135.418 li
360.36 135.418 li
f
362.196 141.448 mo
362.196 140.098 362.394 138.928 362.808 137.938 cv
363.204 136.966 363.762 136.228 364.446 135.742 cv
364.968 135.364 365.508 135.166 366.084 135.166 cv
366.984 135.166 367.812 135.634 368.55 136.57 cv
369.45 137.722 369.9 139.288 369.9 141.268 cv
369.9 142.654 369.702 143.824 369.306 144.796 cv
368.91 145.768 368.388 146.452 367.776 146.884 cv
367.164 147.316 366.57 147.532 365.994 147.532 cv
364.842 147.532 363.906 146.866 363.15 145.534 cv
362.502 144.418 362.196 143.05 362.196 141.448 cv
363.924 141.664 mo
363.924 143.32 364.122 144.652 364.536 145.678 cv
364.86 146.56 365.346 146.992 366.03 146.992 cv
366.336 146.992 366.66 146.866 367.002 146.578 cv
367.344 146.29 367.596 145.822 367.776 145.138 cv
368.046 144.13 368.19 142.708 368.19 140.872 cv
368.19 139.522 368.046 138.388 367.758 137.47 cv
367.542 136.804 367.272 136.336 366.948 136.048 cv
366.696 135.85 366.408 135.742 366.066 135.742 cv
365.67 135.742 365.31 135.922 365.004 136.282 cv
364.572 136.786 364.284 137.542 364.14 138.586 cv
363.996 139.63 363.924 140.656 363.924 141.664 cv
f
64.4297 127.834 mo
64.4297 129.834 li
f
.6 lw
64.4297 127.834 mo
64.4297 129.834 li
@
93.6915 127.834 mo
93.6915 129.834 li
f
93.6915 127.834 mo
93.6915 129.834 li
@
122.953 127.834 mo
122.953 129.834 li
f
122.953 127.834 mo
122.953 129.834 li
@
152.215 127.834 mo
152.215 129.834 li
f
152.215 127.834 mo
152.215 129.834 li
@
181.477 127.834 mo
181.477 129.834 li
f
181.477 127.834 mo
181.477 129.834 li
@
210.739 127.834 mo
210.739 129.834 li
f
210.739 127.834 mo
210.739 129.834 li
@
240.001 127.834 mo
240.001 129.834 li
f
240.001 127.834 mo
240.001 129.834 li
@
269.263 127.834 mo
269.263 129.834 li
f
269.263 127.834 mo
269.263 129.834 li
@
298.524 127.834 mo
298.524 129.834 li
f
298.524 127.834 mo
298.524 129.834 li
@
327.786 127.834 mo
327.786 129.834 li
f
327.786 127.834 mo
327.786 129.834 li
@
357.048 127.834 mo
357.048 129.834 li
f
357.048 127.834 mo
357.048 129.834 li
@
171.241 155.492 mo
171.241 159.614 li
170.917 159.614 li
170.809 158.822 170.629 158.192 170.359 157.724 cv
170.071 157.256 169.693 156.896 169.189 156.608 cv
168.685 156.338 168.163 156.194 167.623 156.194 cv
167.011 156.194 166.507 156.392 166.111 156.752 cv
165.715 157.13 165.517 157.544 165.517 158.012 cv
165.517 158.39 165.643 158.732 165.895 159.02 cv
166.255 159.452 167.119 160.046 168.487 160.766 cv
169.603 161.378 170.359 161.828 170.773 162.152 cv
171.169 162.476 171.493 162.854 171.709 163.286 cv
171.925 163.718 172.033 164.168 172.033 164.636 cv
172.033 165.536 171.673 166.31 170.989 166.958 cv
170.287 167.606 169.387 167.93 168.289 167.93 cv
167.929 167.93 167.605 167.894 167.317 167.858 cv
167.137 167.822 166.759 167.714 166.183 167.552 cv
165.607 167.372 165.247 167.282 165.103 167.282 cv
164.941 167.282 164.815 167.336 164.743 167.408 cv
164.653 167.498 164.599 167.678 164.563 167.93 cv
164.239 167.93 li
164.239 163.862 li
164.563 163.862 li
164.707 164.726 164.923 165.356 165.175 165.788 cv
165.427 166.22 165.823 166.562 166.363 166.85 cv
166.885 167.138 167.461 167.264 168.109 167.264 cv
168.829 167.264 169.405 167.084 169.837 166.688 cv
170.269 166.31 170.485 165.86 170.485 165.32 cv
170.485 165.032 170.395 164.726 170.233 164.42 cv
170.071 164.132 169.819 163.844 169.477 163.592 cv
169.243 163.412 168.613 163.052 167.605 162.476 cv
166.579 161.9 165.859 161.45 165.427 161.108 cv
164.995 160.766 164.671 160.388 164.455 159.974 cv
164.239 159.578 164.131 159.128 164.131 158.624 cv
164.131 157.778 164.455 157.04 165.103 156.428 cv
165.751 155.816 166.597 155.492 167.605 155.492 cv
168.235 155.492 168.901 155.654 169.621 155.96 cv
169.945 156.104 170.179 156.176 170.323 156.176 cv
170.467 156.176 170.575 156.14 170.683 156.05 cv
170.791 155.96 170.863 155.78 170.917 155.492 cv
171.241 155.492 li
f
175.903 156.986 mo
175.903 159.632 li
177.793 159.632 li
177.793 160.244 li
175.903 160.244 li
175.903 165.464 li
175.903 165.986 175.975 166.346 176.119 166.526 cv
176.263 166.706 176.461 166.796 176.713 166.796 cv
176.893 166.796 177.091 166.742 177.271 166.616 cv
177.451 166.508 177.577 166.328 177.685 166.076 cv
178.027 166.076 li
177.811 166.652 177.523 167.084 177.163 167.372 cv
176.785 167.66 176.407 167.786 176.011 167.786 cv
175.723 167.786 175.453 167.714 175.201 167.57 cv
174.949 167.426 174.751 167.228 174.643 166.94 cv
174.517 166.67 174.463 166.238 174.463 165.662 cv
174.463 160.244 li
173.185 160.244 li
173.185 159.956 li
173.509 159.83 173.833 159.614 174.175 159.308 cv
174.499 159.002 174.805 158.642 175.075 158.21 cv
175.201 157.994 175.381 157.58 175.633 156.986 cv
175.903 156.986 li
f
179.917 162.656 mo
179.917 163.862 180.205 164.798 180.799 165.464 cv
181.375 166.148 182.077 166.49 182.869 166.49 cv
183.373 166.49 183.823 166.346 184.219 166.058 cv
184.615 165.77 184.939 165.284 185.209 164.564 cv
185.497 164.744 li
185.353 165.554 184.993 166.292 184.417 166.94 cv
183.823 167.588 183.085 167.912 182.185 167.912 cv
181.213 167.912 180.385 167.552 179.701 166.796 cv
179.017 166.04 178.675 165.032 178.675 163.754 cv
178.675 162.386 179.017 161.306 179.737 160.532 cv
180.439 159.776 181.321 159.38 182.401 159.38 cv
183.301 159.38 184.039 159.686 184.615 160.28 cv
185.191 160.874 185.497 161.666 185.497 162.656 cv
179.917 162.656 li
179.917 162.152 mo
183.643 162.152 li
183.607 161.648 183.553 161.27 183.463 161.054 cv
183.319 160.73 183.103 160.478 182.815 160.298 cv
182.527 160.118 182.221 160.01 181.897 160.01 cv
181.411 160.01 180.979 160.208 180.601 160.586 cv
180.205 160.964 179.989 161.486 179.917 162.152 cv
f
186.001 160.424 mo
188.467 159.434 li
188.791 159.434 li
188.791 161.306 li
189.205 160.604 189.619 160.118 190.051 159.83 cv
190.465 159.542 190.897 159.398 191.365 159.398 cv
192.175 159.398 192.859 159.722 193.399 160.334 cv
194.047 161.126 194.389 162.134 194.389 163.358 cv
194.389 164.762 193.975 165.914 193.183 166.814 cv
192.535 167.552 191.707 167.912 190.717 167.912 cv
190.285 167.912 189.907 167.84 189.583 167.714 cv
189.349 167.642 189.079 167.48 188.791 167.21 cv
188.791 169.64 li
188.791 170.18 188.827 170.54 188.899 170.684 cv
188.971 170.828 189.079 170.954 189.241 171.044 cv
189.403 171.134 189.709 171.188 190.159 171.188 cv
190.159 171.512 li
185.965 171.512 li
185.965 171.188 li
186.163 171.188 li
186.487 171.188 186.757 171.116 186.991 171.008 cv
187.099 170.936 187.171 170.828 187.243 170.684 cv
187.297 170.54 187.333 170.162 187.333 169.586 cv
187.333 162.008 li
187.333 161.486 187.297 161.162 187.261 161.018 cv
187.207 160.874 187.135 160.766 187.027 160.694 cv
186.919 160.622 186.793 160.586 186.631 160.586 cv
186.487 160.586 186.307 160.64 186.091 160.712 cv
186.001 160.424 li
188.791 161.828 mo
188.791 164.834 li
188.791 165.482 188.809 165.914 188.881 166.112 cv
188.953 166.454 189.151 166.76 189.475 167.012 cv
189.799 167.264 190.195 167.39 190.681 167.39 cv
191.257 167.39 191.743 167.174 192.103 166.706 cv
192.571 166.112 192.823 165.266 192.823 164.186 cv
192.823 162.962 192.553 162.026 192.013 161.342 cv
191.635 160.892 191.185 160.658 190.681 160.658 cv
190.393 160.658 190.105 160.73 189.835 160.874 cv
189.619 160.982 189.277 161.306 188.791 161.828 cv
f
199.285 155.762 mo
202.507 155.762 li
209.779 164.69 li
209.779 157.832 li
209.779 157.112 209.689 156.644 209.545 156.446 cv
209.329 156.212 208.969 156.086 208.501 156.086 cv
208.105 156.086 li
208.105 155.762 li
212.245 155.762 li
212.245 156.086 li
211.831 156.086 li
211.327 156.086 210.967 156.248 210.751 156.536 cv
210.607 156.734 210.553 157.166 210.553 157.832 cv
210.553 167.858 li
210.247 167.858 li
202.381 158.282 li
202.381 165.608 li
202.381 166.346 202.453 166.796 202.615 166.976 cv
202.831 167.228 203.173 167.354 203.641 167.354 cv
204.073 167.354 li
204.073 167.678 li
199.915 167.678 li
199.915 167.354 li
200.329 167.354 li
200.833 167.354 201.193 167.21 201.409 166.904 cv
201.535 166.724 201.607 166.292 201.607 165.608 cv
201.607 157.328 li
201.247 156.932 200.995 156.662 200.815 156.536 cv
200.635 156.41 200.383 156.284 200.041 156.158 cv
199.861 156.122 199.609 156.086 199.285 156.086 cv
199.285 155.762 li
f
220.111 159.632 mo
220.111 164.51 li
220.111 165.446 220.129 166.004 220.183 166.22 cv
220.219 166.436 220.291 166.58 220.399 166.652 cv
220.489 166.742 220.597 166.778 220.741 166.778 cv
220.921 166.778 221.119 166.724 221.353 166.616 cv
221.479 166.922 li
219.067 167.912 li
218.671 167.912 li
218.671 166.22 li
217.969 166.976 217.447 167.444 217.087 167.624 cv
216.727 167.804 216.331 167.912 215.935 167.912 cv
215.467 167.912 215.071 167.786 214.747 167.534 cv
214.423 167.282 214.189 166.94 214.063 166.526 cv
213.937 166.13 213.883 165.536 213.883 164.78 cv
213.883 161.198 li
213.883 160.82 213.829 160.55 213.757 160.406 cv
213.667 160.262 213.541 160.136 213.379 160.064 cv
213.217 159.992 212.929 159.956 212.515 159.956 cv
212.515 159.632 li
215.341 159.632 li
215.341 165.014 li
215.341 165.77 215.467 166.274 215.719 166.508 cv
215.971 166.742 216.295 166.85 216.673 166.85 cv
216.925 166.85 217.195 166.778 217.519 166.616 cv
217.843 166.454 218.221 166.148 218.671 165.698 cv
218.671 161.144 li
218.671 160.694 218.581 160.388 218.419 160.226 cv
218.239 160.064 217.897 159.974 217.375 159.956 cv
217.375 159.632 li
220.111 159.632 li
f
224.449 161.108 mo
225.025 160.532 225.385 160.19 225.493 160.1 cv
225.745 159.884 226.033 159.704 226.339 159.578 cv
226.627 159.47 226.933 159.398 227.239 159.398 cv
227.743 159.398 228.175 159.542 228.535 159.83 cv
228.895 160.118 229.147 160.55 229.273 161.108 cv
229.867 160.406 230.371 159.938 230.803 159.722 cv
231.217 159.506 231.649 159.398 232.081 159.398 cv
232.513 159.398 232.891 159.506 233.215 159.722 cv
233.539 159.938 233.809 160.298 234.007 160.802 cv
234.133 161.144 234.205 161.684 234.205 162.404 cv
234.205 165.86 li
234.205 166.364 234.241 166.724 234.313 166.904 cv
234.367 167.03 234.475 167.138 234.637 167.228 cv
234.799 167.318 235.051 167.354 235.411 167.354 cv
235.411 167.678 li
231.451 167.678 li
231.451 167.354 li
231.613 167.354 li
231.955 167.354 232.225 167.3 232.423 167.156 cv
232.549 167.066 232.639 166.922 232.711 166.706 cv
232.729 166.616 232.747 166.328 232.747 165.86 cv
232.747 162.404 li
232.747 161.756 232.657 161.288 232.513 161 cv
232.279 160.64 231.919 160.442 231.415 160.442 cv
231.091 160.442 230.785 160.532 230.479 160.676 cv
230.155 160.838 229.777 161.126 229.345 161.54 cv
229.327 161.648 li
229.345 162.026 li
229.345 165.86 li
229.345 166.418 229.363 166.76 229.435 166.886 cv
229.489 167.03 229.597 167.138 229.777 167.228 cv
229.939 167.318 230.227 167.354 230.641 167.354 cv
230.641 167.678 li
226.573 167.678 li
226.573 167.354 li
227.005 167.354 227.311 167.318 227.491 167.21 cv
227.653 167.102 227.779 166.94 227.851 166.724 cv
227.869 166.634 227.887 166.346 227.887 165.86 cv
227.887 162.404 li
227.887 161.756 227.779 161.27 227.599 160.982 cv
227.329 160.622 226.969 160.424 226.519 160.424 cv
226.195 160.424 225.871 160.514 225.583 160.676 cv
225.079 160.928 224.701 161.216 224.449 161.54 cv
224.449 165.86 li
224.449 166.4 224.485 166.742 224.557 166.886 cv
224.629 167.048 224.737 167.174 224.881 167.246 cv
225.025 167.318 225.313 167.354 225.763 167.354 cv
225.763 167.678 li
221.785 167.678 li
221.785 167.354 li
222.145 167.354 222.397 167.318 222.541 167.246 cv
222.685 167.174 222.811 167.048 222.883 166.868 cv
222.955 166.688 222.991 166.364 222.991 165.86 cv
222.991 162.782 li
222.991 161.9 222.955 161.324 222.919 161.072 cv
222.883 160.892 222.811 160.748 222.721 160.676 cv
222.631 160.604 222.505 160.55 222.361 160.55 cv
222.199 160.55 222.001 160.604 221.785 160.694 cv
221.641 160.37 li
224.071 159.398 li
224.449 159.398 li
224.449 161.108 li
f
238.273 161.018 mo
239.047 159.938 239.893 159.398 240.793 159.398 cv
241.621 159.398 242.341 159.758 242.953 160.46 cv
243.565 161.162 243.871 162.116 243.871 163.34 cv
243.871 164.78 243.385 165.932 242.449 166.796 cv
241.621 167.552 240.721 167.912 239.731 167.912 cv
239.263 167.912 238.777 167.822 238.291 167.66 cv
237.805 167.498 237.319 167.246 236.815 166.904 cv
236.815 158.57 li
236.815 157.652 236.779 157.094 236.743 156.878 cv
236.707 156.662 236.635 156.518 236.545 156.446 cv
236.437 156.374 236.329 156.338 236.203 156.338 cv
236.023 156.338 235.825 156.392 235.573 156.464 cv
235.483 156.158 li
237.877 155.186 li
238.273 155.186 li
238.273 161.018 li
238.273 161.576 mo
238.273 166.4 li
238.561 166.688 238.867 166.922 239.191 167.066 cv
239.515 167.21 239.839 167.282 240.181 167.282 cv
240.703 167.282 241.189 166.994 241.657 166.4 cv
242.125 165.824 242.359 164.96 242.359 163.844 cv
242.359 162.818 242.125 162.026 241.657 161.468 cv
241.189 160.928 240.667 160.64 240.091 160.64 cv
239.767 160.64 239.461 160.73 239.173 160.874 cv
238.921 161 238.633 161.234 238.273 161.576 cv
f
246.409 162.656 mo
246.409 163.862 246.697 164.798 247.291 165.464 cv
247.867 166.148 248.569 166.49 249.361 166.49 cv
249.865 166.49 250.315 166.346 250.711 166.058 cv
251.107 165.77 251.431 165.284 251.701 164.564 cv
251.989 164.744 li
251.845 165.554 251.485 166.292 250.909 166.94 cv
250.315 167.588 249.577 167.912 248.677 167.912 cv
247.705 167.912 246.877 167.552 246.193 166.796 cv
245.509 166.04 245.167 165.032 245.167 163.754 cv
245.167 162.386 245.509 161.306 246.229 160.532 cv
246.931 159.776 247.813 159.38 248.893 159.38 cv
249.793 159.38 250.531 159.686 251.107 160.28 cv
251.683 160.874 251.989 161.666 251.989 162.656 cv
246.409 162.656 li
246.409 162.152 mo
250.135 162.152 li
250.099 161.648 250.045 161.27 249.955 161.054 cv
249.811 160.73 249.595 160.478 249.307 160.298 cv
249.019 160.118 248.713 160.01 248.389 160.01 cv
247.903 160.01 247.471 160.208 247.093 160.586 cv
246.697 160.964 246.481 161.486 246.409 162.152 cv
f
255.409 159.398 mo
255.409 161.198 li
256.075 160.01 256.759 159.398 257.479 159.398 cv
257.803 159.398 258.055 159.506 258.271 159.686 cv
258.487 159.884 258.595 160.118 258.595 160.37 cv
258.595 160.604 258.505 160.802 258.361 160.946 cv
258.217 161.108 258.037 161.18 257.821 161.18 cv
257.605 161.18 257.389 161.09 257.137 160.874 cv
256.885 160.676 256.687 160.568 256.579 160.568 cv
256.471 160.568 256.345 160.64 256.237 160.748 cv
255.967 161 255.697 161.396 255.409 161.936 cv
255.409 165.806 li
255.409 166.256 255.463 166.598 255.571 166.814 cv
255.643 166.976 255.787 167.102 255.985 167.21 cv
256.165 167.318 256.453 167.354 256.813 167.354 cv
256.813 167.678 li
252.691 167.678 li
252.691 167.354 li
253.087 167.354 253.393 167.3 253.609 167.174 cv
253.753 167.084 253.843 166.94 253.915 166.724 cv
253.951 166.616 253.969 166.328 253.969 165.86 cv
253.969 162.746 li
253.969 161.81 253.933 161.252 253.897 161.072 cv
253.861 160.892 253.789 160.766 253.681 160.676 cv
253.573 160.604 253.447 160.55 253.303 160.55 cv
253.123 160.55 252.907 160.604 252.691 160.694 cv
252.601 160.37 li
255.049 159.398 li
255.409 159.398 li
f
gsave
64.4297 127.834 mo
357.048 127.834 li
357.048 19.2342 li
64.4297 19.2342 li
64.4297 127.834 li
clp
.8 lw
2 lc
64.4297 127.834 mo
357.048 127.834 li
1 /0 /CSD get_res sepcs
.309804 sep
@
grestore
64.4297 127.834 mo
60.9297 127.834 li
f
.8 lw
64.4297 127.834 mo
60.9297 127.834 li
@
35.5777 128.198 mo
35.5777 126.848 35.7757 125.678 36.1897 124.688 cv
36.5857 123.716 37.1437 122.978 37.8277 122.492 cv
38.3497 122.114 38.8897 121.916 39.4657 121.916 cv
40.3657 121.916 41.1937 122.384 41.9317 123.32 cv
42.8317 124.472 43.2817 126.038 43.2817 128.018 cv
43.2817 129.404 43.0837 130.574 42.6877 131.546 cv
42.2917 132.518 41.7697 133.202 41.1577 133.634 cv
40.5457 134.066 39.9517 134.282 39.3757 134.282 cv
38.2237 134.282 37.2877 133.616 36.5317 132.284 cv
35.8837 131.168 35.5777 129.8 35.5777 128.198 cv
37.3057 128.414 mo
37.3057 130.07 37.5037 131.402 37.9177 132.428 cv
38.2417 133.31 38.7277 133.742 39.4117 133.742 cv
39.7177 133.742 40.0417 133.616 40.3837 133.328 cv
40.7257 133.04 40.9777 132.572 41.1577 131.888 cv
41.4277 130.88 41.5717 129.458 41.5717 127.622 cv
41.5717 126.272 41.4277 125.138 41.1397 124.22 cv
40.9237 123.554 40.6537 123.086 40.3297 122.798 cv
40.0777 122.6 39.7897 122.492 39.4477 122.492 cv
39.0517 122.492 38.6917 122.672 38.3857 123.032 cv
37.9537 123.536 37.6657 124.292 37.5217 125.336 cv
37.3777 126.38 37.3057 127.406 37.3057 128.414 cv
f
46.1797 132.374 mo
46.4497 132.374 46.6837 132.482 46.8637 132.662 cv
47.0437 132.86 47.1517 133.094 47.1517 133.346 cv
47.1517 133.634 47.0437 133.868 46.8637 134.048 cv
46.6657 134.228 46.4317 134.318 46.1797 134.318 cv
45.9097 134.318 45.6757 134.228 45.4957 134.048 cv
45.2977 133.868 45.2077 133.634 45.2077 133.346 cv
45.2077 133.094 45.2977 132.86 45.4957 132.662 cv
45.6757 132.482 45.9097 132.374 46.1797 132.374 cv
f
49.0777 128.198 mo
49.0777 126.848 49.2757 125.678 49.6897 124.688 cv
50.0857 123.716 50.6437 122.978 51.3277 122.492 cv
51.8497 122.114 52.3897 121.916 52.9657 121.916 cv
53.8657 121.916 54.6937 122.384 55.4317 123.32 cv
56.3317 124.472 56.7817 126.038 56.7817 128.018 cv
56.7817 129.404 56.5837 130.574 56.1877 131.546 cv
55.7917 132.518 55.2697 133.202 54.6577 133.634 cv
54.0457 134.066 53.4517 134.282 52.8757 134.282 cv
51.7237 134.282 50.7877 133.616 50.0317 132.284 cv
49.3837 131.168 49.0777 129.8 49.0777 128.198 cv
50.8057 128.414 mo
50.8057 130.07 51.0037 131.402 51.4177 132.428 cv
51.7417 133.31 52.2277 133.742 52.9117 133.742 cv
53.2177 133.742 53.5417 133.616 53.8837 133.328 cv
54.2257 133.04 54.4777 132.572 54.6577 131.888 cv
54.9277 130.88 55.0717 129.458 55.0717 127.622 cv
55.0717 126.272 54.9277 125.138 54.6397 124.22 cv
54.4237 123.554 54.1537 123.086 53.8297 122.798 cv
53.5777 122.6 53.2897 122.492 52.9477 122.492 cv
52.5517 122.492 52.1917 122.672 51.8857 123.032 cv
51.4537 123.536 51.1657 124.292 51.0217 125.336 cv
50.8777 126.38 50.8057 127.406 50.8057 128.414 cv
f
gsave
64.4297 127.834 mo
357.048 127.834 li
357.048 19.2342 li
64.4297 19.2342 li
64.4297 127.834 li
clp
2 lc
64.4297 100.684 mo
357.048 100.684 li
1 /0 /CSD get_res sepcs
.309804 sep
@
grestore
64.4297 100.684 mo
60.9297 100.684 li
f
64.4297 100.684 mo
60.9297 100.684 li
@
28.0357 96.1881 mo
30.9337 94.7661 li
31.2217 94.7661 li
31.2217 104.828 li
31.2217 105.512 31.2397 105.926 31.3117 106.088 cv
31.3657 106.25 31.4737 106.376 31.6537 106.466 cv
31.8337 106.556 32.1937 106.61 32.7337 106.61 cv
32.7337 106.934 li
28.2517 106.934 li
28.2517 106.61 li
28.8097 106.61 29.1697 106.556 29.3317 106.466 cv
29.4937 106.394 29.6017 106.268 29.6737 106.124 cv
29.7457 105.98 29.7817 105.548 29.7817 104.828 cv
29.7817 98.4021 li
29.7817 97.5381 29.7457 96.9801 29.6917 96.7281 cv
29.6557 96.5481 29.5837 96.4041 29.4757 96.3141 cv
29.3677 96.2421 29.2237 96.1881 29.0797 96.1881 cv
28.8637 96.1881 28.5577 96.2781 28.1797 96.4581 cv
28.0357 96.1881 li
f
35.5777 101.048 mo
35.5777 99.6981 35.7757 98.5281 36.1897 97.5381 cv
36.5857 96.5661 37.1437 95.8281 37.8277 95.3421 cv
38.3497 94.9641 38.8897 94.7661 39.4657 94.7661 cv
40.3657 94.7661 41.1937 95.2341 41.9317 96.1701 cv
42.8317 97.3221 43.2817 98.8881 43.2817 100.868 cv
43.2817 102.254 43.0837 103.424 42.6877 104.396 cv
42.2917 105.368 41.7697 106.052 41.1577 106.484 cv
40.5457 106.916 39.9517 107.132 39.3757 107.132 cv
38.2237 107.132 37.2877 106.466 36.5317 105.134 cv
35.8837 104.018 35.5777 102.65 35.5777 101.048 cv
37.3057 101.264 mo
37.3057 102.92 37.5037 104.252 37.9177 105.278 cv
38.2417 106.16 38.7277 106.592 39.4117 106.592 cv
39.7177 106.592 40.0417 106.466 40.3837 106.178 cv
40.7257 105.89 40.9777 105.422 41.1577 104.738 cv
41.4277 103.73 41.5717 102.308 41.5717 100.472 cv
41.5717 99.1221 41.4277 97.9881 41.1397 97.0701 cv
40.9237 96.4041 40.6537 95.9361 40.3297 95.6481 cv
40.0777 95.4501 39.7897 95.3421 39.4477 95.3421 cv
39.0517 95.3421 38.6917 95.5221 38.3857 95.8821 cv
37.9537 96.3861 37.6657 97.1421 37.5217 98.1861 cv
37.3777 99.2301 37.3057 100.256 37.3057 101.264 cv
f
46.1797 105.224 mo
46.4497 105.224 46.6837 105.332 46.8637 105.512 cv
47.0437 105.71 47.1517 105.944 47.1517 106.196 cv
47.1517 106.484 47.0437 106.718 46.8637 106.898 cv
46.6657 107.078 46.4317 107.168 46.1797 107.168 cv
45.9097 107.168 45.6757 107.078 45.4957 106.898 cv
45.2977 106.718 45.2077 106.484 45.2077 106.196 cv
45.2077 105.944 45.2977 105.71 45.4957 105.512 cv
45.6757 105.332 45.9097 105.224 46.1797 105.224 cv
f
49.0777 101.048 mo
49.0777 99.6981 49.2757 98.5281 49.6897 97.5381 cv
50.0857 96.5661 50.6437 95.8281 51.3277 95.3421 cv
51.8497 94.9641 52.3897 94.7661 52.9657 94.7661 cv
53.8657 94.7661 54.6937 95.2341 55.4317 96.1701 cv
56.3317 97.3221 56.7817 98.8881 56.7817 100.868 cv
56.7817 102.254 56.5837 103.424 56.1877 104.396 cv
55.7917 105.368 55.2697 106.052 54.6577 106.484 cv
54.0457 106.916 53.4517 107.132 52.8757 107.132 cv
51.7237 107.132 50.7877 106.466 50.0317 105.134 cv
49.3837 104.018 49.0777 102.65 49.0777 101.048 cv
50.8057 101.264 mo
50.8057 102.92 51.0037 104.252 51.4177 105.278 cv
51.7417 106.16 52.2277 106.592 52.9117 106.592 cv
53.2177 106.592 53.5417 106.466 53.8837 106.178 cv
54.2257 105.89 54.4777 105.422 54.6577 104.738 cv
54.9277 103.73 55.0717 102.308 55.0717 100.472 cv
55.0717 99.1221 54.9277 97.9881 54.6397 97.0701 cv
54.4237 96.4041 54.1537 95.9361 53.8297 95.6481 cv
53.5777 95.4501 53.2897 95.3421 52.9477 95.3421 cv
52.5517 95.3421 52.1917 95.5221 51.8857 95.8821 cv
51.4537 96.3861 51.1657 97.1421 51.0217 98.1861 cv
50.8777 99.2301 50.8057 100.256 50.8057 101.264 cv
f
gsave
64.4297 127.834 mo
357.048 127.834 li
357.048 19.2342 li
64.4297 19.2342 li
64.4297 127.834 li
clp
64.0297 73.1341 mo
357.448 73.1341 li
357.448 73.9342 li
64.0297 73.9342 li
64.0297 73.1341 li
1 /0 /CSD get_res sepcs
.309804 sep
f
grestore
64.4297 73.5341 mo
60.9297 73.5341 li
f
64.4297 73.5341 mo
60.9297 73.5341 li
@
34.1737 77.4981 mo
33.3457 79.7841 li
26.3077 79.7841 li
26.3077 79.4602 li
28.3777 77.5882 29.8357 76.0401 30.6817 74.8342 cv
31.5097 73.6461 31.9417 72.5481 31.9417 71.5582 cv
31.9417 70.8021 31.7077 70.1901 31.2397 69.7041 cv
30.7717 69.2181 30.2317 68.9661 29.6017 68.9661 cv
29.0077 68.9661 28.4857 69.1461 28.0177 69.4882 cv
27.5497 69.8301 27.2077 70.3342 26.9917 70.9821 cv
26.6677 70.9821 li
26.8117 69.9021 27.1717 69.0742 27.7837 68.4981 cv
28.3957 67.9221 29.1517 67.6161 30.0517 67.6161 cv
31.0237 67.6161 31.8337 67.9401 32.4817 68.5521 cv
33.1297 69.1822 33.4537 69.9202 33.4537 70.7481 cv
33.4537 71.3601 33.3097 71.9541 33.0397 72.5661 cv
32.5897 73.5201 31.8877 74.5282 30.9157 75.5722 cv
29.4577 77.1741 28.5397 78.1282 28.1797 78.4521 cv
31.2937 78.4521 li
31.9237 78.4521 32.3737 78.4342 32.6257 78.3801 cv
32.8777 78.3441 33.1117 78.2542 33.3277 78.1101 cv
33.5257 77.9661 33.7057 77.7682 33.8497 77.4981 cv
34.1737 77.4981 li
f
35.5777 73.8981 mo
35.5777 72.5481 35.7757 71.3782 36.1897 70.3881 cv
36.5857 69.4161 37.1437 68.6781 37.8277 68.1921 cv
38.3497 67.8141 38.8897 67.6161 39.4657 67.6161 cv
40.3657 67.6161 41.1937 68.0842 41.9317 69.0201 cv
42.8317 70.1721 43.2817 71.7382 43.2817 73.7181 cv
43.2817 75.1041 43.0837 76.2741 42.6877 77.2461 cv
42.2917 78.2181 41.7697 78.9021 41.1577 79.3342 cv
40.5457 79.7662 39.9517 79.9821 39.3757 79.9821 cv
38.2237 79.9821 37.2877 79.3161 36.5317 77.9841 cv
35.8837 76.8681 35.5777 75.5002 35.5777 73.8981 cv
37.3057 74.1142 mo
37.3057 75.7701 37.5037 77.1021 37.9177 78.1282 cv
38.2417 79.0101 38.7277 79.4421 39.4117 79.4421 cv
39.7177 79.4421 40.0417 79.3161 40.3837 79.0282 cv
40.7257 78.7402 40.9777 78.2721 41.1577 77.5882 cv
41.4277 76.5801 41.5717 75.1581 41.5717 73.3222 cv
41.5717 71.9722 41.4277 70.8382 41.1397 69.9202 cv
40.9237 69.2542 40.6537 68.7861 40.3297 68.4981 cv
40.0777 68.3001 39.7897 68.1921 39.4477 68.1921 cv
39.0517 68.1921 38.6917 68.3721 38.3857 68.7321 cv
37.9537 69.2361 37.6657 69.9921 37.5217 71.0361 cv
37.3777 72.0801 37.3057 73.1061 37.3057 74.1142 cv
f
46.1797 78.0742 mo
46.4497 78.0742 46.6837 78.1822 46.8637 78.3622 cv
47.0437 78.5602 47.1517 78.7942 47.1517 79.0462 cv
47.1517 79.3342 47.0437 79.5681 46.8637 79.7481 cv
46.6657 79.9281 46.4317 80.0182 46.1797 80.0182 cv
45.9097 80.0182 45.6757 79.9281 45.4957 79.7481 cv
45.2977 79.5681 45.2077 79.3342 45.2077 79.0462 cv
45.2077 78.7942 45.2977 78.5602 45.4957 78.3622 cv
45.6757 78.1822 45.9097 78.0742 46.1797 78.0742 cv
f
49.0777 73.8981 mo
49.0777 72.5481 49.2757 71.3782 49.6897 70.3881 cv
50.0857 69.4161 50.6437 68.6781 51.3277 68.1921 cv
51.8497 67.8141 52.3897 67.6161 52.9657 67.6161 cv
53.8657 67.6161 54.6937 68.0842 55.4317 69.0201 cv
56.3317 70.1721 56.7817 71.7382 56.7817 73.7181 cv
56.7817 75.1041 56.5837 76.2741 56.1877 77.2461 cv
55.7917 78.2181 55.2697 78.9021 54.6577 79.3342 cv
54.0457 79.7662 53.4517 79.9821 52.8757 79.9821 cv
51.7237 79.9821 50.7877 79.3161 50.0317 77.9841 cv
49.3837 76.8681 49.0777 75.5002 49.0777 73.8981 cv
50.8057 74.1142 mo
50.8057 75.7701 51.0037 77.1021 51.4177 78.1282 cv
51.7417 79.0101 52.2277 79.4421 52.9117 79.4421 cv
53.2177 79.4421 53.5417 79.3161 53.8837 79.0282 cv
54.2257 78.7402 54.4777 78.2721 54.6577 77.5882 cv
54.9277 76.5801 55.0717 75.1581 55.0717 73.3222 cv
55.0717 71.9722 54.9277 70.8382 54.6397 69.9202 cv
54.4237 69.2542 54.1537 68.7861 53.8297 68.4981 cv
53.5777 68.3001 53.2897 68.1921 52.9477 68.1921 cv
52.5517 68.1921 52.1917 68.3721 51.8857 68.7321 cv
51.4537 69.2361 51.1657 69.9921 51.0217 71.0361 cv
50.8777 72.0801 50.8057 73.1061 50.8057 74.1142 cv
f
gsave
64.4297 127.834 mo
357.048 127.834 li
357.048 19.2342 li
64.4297 19.2342 li
64.4297 127.834 li
clp
64.0297 45.9842 mo
357.448 45.9842 li
357.448 46.7842 li
64.0297 46.7842 li
64.0297 45.9842 li
1 /0 /CSD get_res sepcs
.309804 sep
f
grestore
64.4297 46.3842 mo
60.9297 46.3842 li
f
64.4297 46.3842 mo
60.9297 46.3842 li
@
26.8477 42.9862 mo
27.1717 42.1942 27.6037 41.5642 28.1257 41.1322 cv
28.6477 40.7002 29.2957 40.4662 30.0697 40.4662 cv
31.0237 40.4662 31.7617 40.7902 32.2657 41.4022 cv
32.6437 41.8702 32.8417 42.3742 32.8417 42.8782 cv
32.8417 43.7602 32.2837 44.6602 31.2037 45.5782 cv
31.9237 45.8662 32.4817 46.2802 32.8597 46.8202 cv
33.2377 47.3602 33.4357 47.9722 33.4357 48.6922 cv
33.4357 49.7362 33.0937 50.6182 32.4457 51.3742 cv
31.5817 52.3462 30.3577 52.8322 28.7377 52.8322 cv
27.9277 52.8322 27.3877 52.7242 27.0997 52.5442 cv
26.8117 52.3642 26.6677 52.1482 26.6677 51.8962 cv
26.6677 51.7342 26.7217 51.5902 26.8657 51.4642 cv
26.9917 51.3382 27.1537 51.2662 27.3697 51.2662 cv
27.5137 51.2662 27.6577 51.3022 27.8017 51.3382 cv
27.9097 51.3742 28.1257 51.4822 28.4857 51.6622 cv
28.8277 51.8422 29.0797 51.9502 29.2237 51.9862 cv
29.4397 52.0582 29.6557 52.0762 29.9077 52.0762 cv
30.5017 52.0762 31.0237 51.8602 31.4737 51.3922 cv
31.9057 50.9242 32.1397 50.3842 32.1397 49.7362 cv
32.1397 49.2862 32.0317 48.8362 31.8337 48.3862 cv
31.6717 48.0622 31.5097 47.8282 31.3297 47.6482 cv
31.0777 47.4142 30.7177 47.1982 30.2857 47.0002 cv
29.8537 46.8202 29.4037 46.7122 28.9357 46.7122 cv
28.6657 46.7122 li
28.6657 46.4602 li
29.1157 46.4062 29.5837 46.2442 30.0517 45.9562 cv
30.5197 45.6862 30.8437 45.3622 31.0597 44.9662 cv
31.2757 44.5882 31.3837 44.1562 31.3837 43.6882 cv
31.3837 43.0942 31.1857 42.6082 30.8077 42.2302 cv
30.4297 41.8702 29.9617 41.6722 29.4037 41.6722 cv
28.5037 41.6722 27.7477 42.1582 27.1357 43.1302 cv
26.8477 42.9862 li
f
35.5777 46.7482 mo
35.5777 45.3982 35.7757 44.2282 36.1897 43.2382 cv
36.5857 42.2662 37.1437 41.5282 37.8277 41.0422 cv
38.3497 40.6642 38.8897 40.4662 39.4657 40.4662 cv
40.3657 40.4662 41.1937 40.9342 41.9317 41.8702 cv
42.8317 43.0222 43.2817 44.5882 43.2817 46.5682 cv
43.2817 47.9542 43.0837 49.1242 42.6877 50.0962 cv
42.2917 51.0682 41.7697 51.7522 41.1577 52.1842 cv
40.5457 52.6162 39.9517 52.8322 39.3757 52.8322 cv
38.2237 52.8322 37.2877 52.1662 36.5317 50.8342 cv
35.8837 49.7182 35.5777 48.3502 35.5777 46.7482 cv
37.3057 46.9642 mo
37.3057 48.6202 37.5037 49.9522 37.9177 50.9782 cv
38.2417 51.8602 38.7277 52.2922 39.4117 52.2922 cv
39.7177 52.2922 40.0417 52.1662 40.3837 51.8782 cv
40.7257 51.5902 40.9777 51.1222 41.1577 50.4382 cv
41.4277 49.4302 41.5717 48.0082 41.5717 46.1722 cv
41.5717 44.8222 41.4277 43.6882 41.1397 42.7702 cv
40.9237 42.1042 40.6537 41.6362 40.3297 41.3482 cv
40.0777 41.1502 39.7897 41.0422 39.4477 41.0422 cv
39.0517 41.0422 38.6917 41.2222 38.3857 41.5822 cv
37.9537 42.0862 37.6657 42.8422 37.5217 43.8862 cv
37.3777 44.9302 37.3057 45.9562 37.3057 46.9642 cv
f
46.1797 50.9242 mo
46.4497 50.9242 46.6837 51.0322 46.8637 51.2122 cv
47.0437 51.4102 47.1517 51.6442 47.1517 51.8962 cv
47.1517 52.1842 47.0437 52.4182 46.8637 52.5982 cv
46.6657 52.7782 46.4317 52.8682 46.1797 52.8682 cv
45.9097 52.8682 45.6757 52.7782 45.4957 52.5982 cv
45.2977 52.4182 45.2077 52.1842 45.2077 51.8962 cv
45.2077 51.6442 45.2977 51.4102 45.4957 51.2122 cv
45.6757 51.0322 45.9097 50.9242 46.1797 50.9242 cv
f
49.0777 46.7482 mo
49.0777 45.3982 49.2757 44.2282 49.6897 43.2382 cv
50.0857 42.2662 50.6437 41.5282 51.3277 41.0422 cv
51.8497 40.6642 52.3897 40.4662 52.9657 40.4662 cv
53.8657 40.4662 54.6937 40.9342 55.4317 41.8702 cv
56.3317 43.0222 56.7817 44.5882 56.7817 46.5682 cv
56.7817 47.9542 56.5837 49.1242 56.1877 50.0962 cv
55.7917 51.0682 55.2697 51.7522 54.6577 52.1842 cv
54.0457 52.6162 53.4517 52.8322 52.8757 52.8322 cv
51.7237 52.8322 50.7877 52.1662 50.0317 50.8342 cv
49.3837 49.7182 49.0777 48.3502 49.0777 46.7482 cv
50.8057 46.9642 mo
50.8057 48.6202 51.0037 49.9522 51.4177 50.9782 cv
51.7417 51.8602 52.2277 52.2922 52.9117 52.2922 cv
53.2177 52.2922 53.5417 52.1662 53.8837 51.8782 cv
54.2257 51.5902 54.4777 51.1222 54.6577 50.4382 cv
54.9277 49.4302 55.0717 48.0082 55.0717 46.1722 cv
55.0717 44.8222 54.9277 43.6882 54.6397 42.7702 cv
54.4237 42.1042 54.1537 41.6362 53.8297 41.3482 cv
53.5777 41.1502 53.2897 41.0422 52.9477 41.0422 cv
52.5517 41.0422 52.1917 41.2222 51.8857 41.5822 cv
51.4537 42.0862 51.1657 42.8422 51.0217 43.8862 cv
50.8777 44.9302 50.8057 45.9562 50.8057 46.9642 cv
f
gsave
64.4297 127.834 mo
357.048 127.834 li
357.048 19.2342 li
64.4297 19.2342 li
64.4297 127.834 li
clp
2 lc
64.4297 19.2343 mo
357.048 19.2343 li
1 /0 /CSD get_res sepcs
.309804 sep
@
grestore
64.4297 19.2343 mo
60.9297 19.2343 li
f
64.4297 19.2343 mo
60.9297 19.2343 li
@
34.2997 21.0923 mo
34.2997 22.3343 li
32.6977 22.3343 li
32.6977 25.4843 li
31.2577 25.4843 li
31.2577 22.3343 li
26.2177 22.3343 li
26.2177 21.2183 li
31.7437 13.3163 li
32.6977 13.3163 li
32.6977 21.0923 li
34.2997 21.0923 li
31.2577 21.0923 mo
31.2577 15.1703 li
27.0637 21.0923 li
31.2577 21.0923 li
f
35.5777 19.5983 mo
35.5777 18.2483 35.7757 17.0783 36.1897 16.0883 cv
36.5857 15.1163 37.1437 14.3783 37.8277 13.8923 cv
38.3497 13.5143 38.8897 13.3163 39.4657 13.3163 cv
40.3657 13.3163 41.1937 13.7843 41.9317 14.7203 cv
42.8317 15.8723 43.2817 17.4383 43.2817 19.4183 cv
43.2817 20.8043 43.0837 21.9743 42.6877 22.9463 cv
42.2917 23.9183 41.7697 24.6023 41.1577 25.0343 cv
40.5457 25.4663 39.9517 25.6823 39.3757 25.6823 cv
38.2237 25.6823 37.2877 25.0163 36.5317 23.6843 cv
35.8837 22.5683 35.5777 21.2003 35.5777 19.5983 cv
37.3057 19.8143 mo
37.3057 21.4703 37.5037 22.8023 37.9177 23.8283 cv
38.2417 24.7103 38.7277 25.1423 39.4117 25.1423 cv
39.7177 25.1423 40.0417 25.0163 40.3837 24.7283 cv
40.7257 24.4403 40.9777 23.9723 41.1577 23.2883 cv
41.4277 22.2803 41.5717 20.8583 41.5717 19.0223 cv
41.5717 17.6723 41.4277 16.5383 41.1397 15.6203 cv
40.9237 14.9543 40.6537 14.4863 40.3297 14.1983 cv
40.0777 14.0003 39.7897 13.8923 39.4477 13.8923 cv
39.0517 13.8923 38.6917 14.0723 38.3857 14.4323 cv
37.9537 14.9363 37.6657 15.6923 37.5217 16.7363 cv
37.3777 17.7803 37.3057 18.8063 37.3057 19.8143 cv
f
46.1797 23.7743 mo
46.4497 23.7743 46.6837 23.8823 46.8637 24.0623 cv
47.0437 24.2603 47.1517 24.4943 47.1517 24.7463 cv
47.1517 25.0343 47.0437 25.2683 46.8637 25.4483 cv
46.6657 25.6283 46.4317 25.7183 46.1797 25.7183 cv
45.9097 25.7183 45.6757 25.6283 45.4957 25.4483 cv
45.2977 25.2683 45.2077 25.0343 45.2077 24.7463 cv
45.2077 24.4943 45.2977 24.2603 45.4957 24.0623 cv
45.6757 23.8823 45.9097 23.7743 46.1797 23.7743 cv
f
49.0777 19.5983 mo
49.0777 18.2483 49.2757 17.0783 49.6897 16.0883 cv
50.0857 15.1163 50.6437 14.3783 51.3277 13.8923 cv
51.8497 13.5143 52.3897 13.3163 52.9657 13.3163 cv
53.8657 13.3163 54.6937 13.7843 55.4317 14.7203 cv
56.3317 15.8723 56.7817 17.4383 56.7817 19.4183 cv
56.7817 20.8043 56.5837 21.9743 56.1877 22.9463 cv
55.7917 23.9183 55.2697 24.6023 54.6577 25.0343 cv
54.0457 25.4663 53.4517 25.6823 52.8757 25.6823 cv
51.7237 25.6823 50.7877 25.0163 50.0317 23.6843 cv
49.3837 22.5683 49.0777 21.2003 49.0777 19.5983 cv
50.8057 19.8143 mo
50.8057 21.4703 51.0037 22.8023 51.4177 23.8283 cv
51.7417 24.7103 52.2277 25.1423 52.9117 25.1423 cv
53.2177 25.1423 53.5417 25.0163 53.8837 24.7283 cv
54.2257 24.4403 54.4777 23.9723 54.6577 23.2883 cv
54.9277 22.2803 55.0717 20.8583 55.0717 19.0223 cv
55.0717 17.6723 54.9277 16.5383 54.6397 15.6203 cv
54.4237 14.9543 54.1537 14.4863 53.8297 14.1983 cv
53.5777 14.0003 53.2897 13.8923 52.9477 13.8923 cv
52.5517 13.8923 52.1917 14.0723 51.8857 14.4323 cv
51.4537 14.9363 51.1657 15.6923 51.0217 16.7363 cv
50.8777 17.7803 50.8057 18.8063 50.8057 19.8143 cv
f
12.506 133.602 mo
15.98 133.602 li
16.736 133.602 17.186 133.53 17.366 133.35 cv
17.636 133.134 17.762 132.81 17.762 132.342 cv
17.762 131.892 li
18.086 131.892 li
18.086 136.986 li
17.762 136.986 li
17.762 136.536 li
17.762 136.05 17.6 135.69 17.276 135.456 cv
17.096 135.348 16.664 135.294 15.98 135.294 cv
8.27596 135.294 li
7.53796 135.294 7.06996 135.384 6.87196 135.528 cv
6.61996 135.762 6.49396 136.104 6.49396 136.536 cv
6.49396 136.986 li
6.16996 136.986 li
6.16996 132.63 li
6.16996 131.568 6.29596 130.722 6.51196 130.11 cv
6.72796 129.498 7.10596 128.976 7.60996 128.544 cv
8.13196 128.13 8.74396 127.914 9.46396 127.914 cv
10.436 127.914 11.228 128.238 11.84 128.886 cv
12.452 129.534 12.758 130.434 12.758 131.604 cv
12.758 131.892 12.74 132.216 12.704 132.54 cv
12.668 132.864 12.596 133.224 12.506 133.602 cv
12.002 133.602 mo
12.074 133.296 12.11 133.026 12.146 132.774 cv
12.182 132.54 12.182 132.342 12.182 132.162 cv
12.182 131.55 11.948 131.028 11.48 130.578 cv
11.012 130.146 10.4 129.912 9.64396 129.912 cv
9.13996 129.912 8.65396 130.02 8.20396 130.236 cv
7.77196 130.452 7.42996 130.74 7.21396 131.136 cv
6.99796 131.532 6.87196 131.964 6.87196 132.45 cv
6.87196 132.756 6.94396 133.134 7.05196 133.602 cv
12.002 133.602 li
f
9.80596 122.784 mo
9.80596 121.56 10.274 120.588 11.192 119.85 cv
11.984 119.238 12.902 118.914 13.91 118.914 cv
14.63 118.914 15.368 119.094 16.106 119.436 cv
16.844 119.778 17.402 120.246 17.762 120.858 cv
18.122 121.47 18.32 122.136 18.32 122.874 cv
18.32 124.098 17.852 125.052 16.88 125.772 cv
16.07 126.384 15.152 126.672 14.144 126.672 cv
13.406 126.672 12.668 126.492 11.948 126.132 cv
11.228 125.772 10.688 125.286 10.328 124.692 cv
9.98596 124.098 9.80596 123.468 9.80596 122.784 cv
10.364 123.054 mo
10.364 123.378 10.472 123.684 10.652 123.99 cv
10.832 124.314 11.156 124.566 11.624 124.746 cv
12.092 124.944 12.686 125.034 13.406 125.034 cv
14.576 125.034 15.584 124.818 16.43 124.35 cv
17.294 123.882 17.708 123.27 17.708 122.496 cv
17.708 121.938 17.474 121.47 17.006 121.092 cv
16.538 120.732 15.746 120.534 14.594 120.534 cv
13.172 120.534 12.038 120.858 11.21 121.47 cv
10.652 121.884 10.364 122.406 10.364 123.054 cv
f
9.80596 112.524 mo
12.542 112.524 li
12.542 112.812 li
11.678 113.028 11.102 113.316 10.778 113.658 cv
10.472 114.018 10.31 114.45 10.31 114.99 cv
10.31 115.422 10.418 115.746 10.634 115.998 cv
10.85 116.25 11.102 116.376 11.354 116.376 cv
11.696 116.376 11.984 116.286 12.2 116.088 cv
12.452 115.908 12.704 115.548 12.974 114.972 cv
13.586 113.694 li
14.18 112.506 14.954 111.912 15.89 111.912 cv
16.628 111.912 17.222 112.2 17.654 112.74 cv
18.086 113.298 18.32 113.91 18.32 114.594 cv
18.32 115.098 18.23 115.656 18.068 116.286 cv
18.014 116.484 17.978 116.646 17.978 116.772 cv
17.978 116.916 18.05 117.006 18.194 117.078 cv
18.194 117.366 li
15.332 117.366 li
15.332 117.078 li
16.16 116.916 16.79 116.61 17.204 116.142 cv
17.618 115.674 17.816 115.152 17.816 114.576 cv
17.816 114.18 17.708 113.856 17.456 113.604 cv
17.222 113.352 16.934 113.208 16.592 113.208 cv
16.196 113.208 15.872 113.352 15.584 113.64 cv
15.314 113.928 14.972 114.504 14.54 115.35 cv
14.126 116.196 13.748 116.754 13.388 117.006 cv
13.064 117.276 12.632 117.402 12.128 117.402 cv
11.48 117.402 10.922 117.186 10.472 116.718 cv
10.04 116.268 9.80596 115.674 9.80596 114.954 cv
9.80596 114.648 9.87796 114.27 10.004 113.802 cv
10.094 113.514 10.13 113.316 10.13 113.208 cv
10.076 112.992 li
10.04 112.956 9.94996 112.884 9.80596 112.812 cv
9.80596 112.524 li
f
5.59396 108.672 mo
5.59396 108.42 5.68396 108.222 5.84596 108.042 cv
6.02596 107.88 6.22396 107.79 6.47596 107.79 cv
6.72796 107.79 6.92596 107.88 7.10596 108.042 cv
7.28596 108.222 7.37596 108.42 7.37596 108.672 cv
7.37596 108.924 7.28596 109.122 7.10596 109.302 cv
6.92596 109.482 6.72796 109.572 6.47596 109.572 cv
6.22396 109.572 6.02596 109.5 5.84596 109.32 cv
5.68396 109.14 5.59396 108.924 5.59396 108.672 cv
9.80596 107.934 mo
16.268 107.934 li
16.772 107.934 17.114 107.898 17.276 107.826 cv
17.456 107.754 17.582 107.646 17.654 107.502 cv
17.726 107.358 17.762 107.106 17.762 106.728 cv
18.086 106.728 li
18.086 110.634 li
17.762 110.634 li
17.762 110.238 17.726 109.986 17.654 109.842 cv
17.582 109.716 17.456 109.608 17.276 109.536 cv
17.096 109.464 16.772 109.41 16.268 109.41 cv
13.172 109.41 li
12.308 109.41 11.732 109.446 11.462 109.482 cv
11.282 109.518 11.156 109.59 11.084 109.68 cv
11.012 109.77 10.958 109.896 10.958 110.04 cv
10.958 110.202 11.012 110.4 11.102 110.634 cv
10.778 110.76 li
9.80596 108.33 li
9.80596 107.934 li
f
7.39396 103.38 mo
10.04 103.38 li
10.04 101.49 li
10.652 101.49 li
10.652 103.38 li
15.872 103.38 li
16.394 103.38 16.754 103.308 16.934 103.164 cv
17.114 103.02 17.204 102.822 17.204 102.57 cv
17.204 102.39 17.15 102.192 17.024 102.012 cv
16.916 101.832 16.736 101.706 16.484 101.598 cv
16.484 101.256 li
17.06 101.472 17.492 101.76 17.78 102.12 cv
18.068 102.498 18.194 102.876 18.194 103.272 cv
18.194 103.56 18.122 103.83 17.978 104.082 cv
17.834 104.334 17.636 104.532 17.348 104.64 cv
17.078 104.766 16.646 104.82 16.07 104.82 cv
10.652 104.82 li
10.652 106.098 li
10.364 106.098 li
10.238 105.774 10.022 105.45 9.71596 105.108 cv
9.40996 104.784 9.04996 104.478 8.61796 104.208 cv
8.40196 104.082 7.98796 103.902 7.39396 103.65 cv
7.39396 103.38 li
f
5.59396 98.6638 mo
5.59396 98.4118 5.68396 98.2138 5.84596 98.0338 cv
6.02596 97.8718 6.22396 97.7818 6.47596 97.7818 cv
6.72796 97.7818 6.92596 97.8718 7.10596 98.0338 cv
7.28596 98.2138 7.37596 98.4118 7.37596 98.6638 cv
7.37596 98.9158 7.28596 99.1138 7.10596 99.2938 cv
6.92596 99.4738 6.72796 99.5638 6.47596 99.5638 cv
6.22396 99.5638 6.02596 99.4918 5.84596 99.3118 cv
5.68396 99.1318 5.59396 98.9158 5.59396 98.6638 cv
9.80596 97.9258 mo
16.268 97.9258 li
16.772 97.9258 17.114 97.8898 17.276 97.8178 cv
17.456 97.7458 17.582 97.6378 17.654 97.4938 cv
17.726 97.3498 17.762 97.0978 17.762 96.7198 cv
18.086 96.7198 li
18.086 100.626 li
17.762 100.626 li
17.762 100.23 17.726 99.9778 17.654 99.8338 cv
17.582 99.7078 17.456 99.5998 17.276 99.5278 cv
17.096 99.4558 16.772 99.4018 16.268 99.4018 cv
13.172 99.4018 li
12.308 99.4018 11.732 99.4378 11.462 99.4738 cv
11.282 99.5098 11.156 99.5818 11.084 99.6718 cv
11.012 99.7618 10.958 99.8878 10.958 100.032 cv
10.958 100.194 11.012 100.392 11.102 100.626 cv
10.778 100.752 li
9.80596 98.3218 li
9.80596 97.9258 li
f
9.80596 91.7698 mo
9.80596 90.5458 10.274 89.5738 11.192 88.8358 cv
11.984 88.2238 12.902 87.8998 13.91 87.8998 cv
14.63 87.8998 15.368 88.0798 16.106 88.4218 cv
16.844 88.7638 17.402 89.2318 17.762 89.8438 cv
18.122 90.4558 18.32 91.1218 18.32 91.8598 cv
18.32 93.0838 17.852 94.0378 16.88 94.7578 cv
16.07 95.3698 15.152 95.6578 14.144 95.6578 cv
13.406 95.6578 12.668 95.4778 11.948 95.1178 cv
11.228 94.7578 10.688 94.2718 10.328 93.6778 cv
9.98596 93.0838 9.80596 92.4538 9.80596 91.7698 cv
10.364 92.0398 mo
10.364 92.3638 10.472 92.6698 10.652 92.9758 cv
10.832 93.2998 11.156 93.5518 11.624 93.7318 cv
12.092 93.9298 12.686 94.0198 13.406 94.0198 cv
14.576 94.0198 15.584 93.8038 16.43 93.3358 cv
17.294 92.8678 17.708 92.2558 17.708 91.4818 cv
17.708 90.9238 17.474 90.4558 17.006 90.0778 cv
16.538 89.7178 15.746 89.5198 14.594 89.5198 cv
13.172 89.5198 12.038 89.8438 11.21 90.4558 cv
10.652 90.8698 10.364 91.3918 10.364 92.0398 cv
f
11.498 84.3538 mo
10.382 83.4178 9.80596 82.5178 9.80596 81.6538 cv
9.80596 81.2218 9.91396 80.8618 10.13 80.5378 cv
10.346 80.2138 10.706 79.9618 11.21 79.7638 cv
11.57 79.6558 12.11 79.5838 12.83 79.5838 cv
16.268 79.5838 li
16.772 79.5838 17.132 79.5478 17.312 79.4578 cv
17.456 79.4038 17.582 79.2958 17.654 79.1518 cv
17.726 79.0078 17.762 78.7378 17.762 78.3418 cv
18.086 78.3418 li
18.086 82.3378 li
17.762 82.3378 li
17.762 82.1578 li
17.762 81.7978 17.708 81.5278 17.6 81.3838 cv
17.492 81.2398 17.312 81.1318 17.096 81.0598 cv
17.006 81.0418 16.736 81.0238 16.268 81.0238 cv
12.974 81.0238 li
12.254 81.0238 11.714 81.1318 11.39 81.3118 cv
11.066 81.5098 10.886 81.8338 10.886 82.2838 cv
10.886 82.9858 11.264 83.6698 12.02 84.3538 cv
16.268 84.3538 li
16.808 84.3538 17.15 84.3358 17.276 84.2638 cv
17.456 84.1918 17.582 84.0658 17.654 83.9218 cv
17.726 83.7778 17.762 83.4898 17.762 83.0578 cv
18.086 83.0578 li
18.086 87.0358 li
17.762 87.0358 li
17.762 86.8558 li
17.762 86.4598 17.672 86.1718 17.456 86.0278 cv
17.258 85.8838 16.862 85.8118 16.268 85.8118 cv
13.28 85.8118 li
12.308 85.8118 11.732 85.8478 11.516 85.8838 cv
11.3 85.9198 11.156 85.9918 11.084 86.0818 cv
11.012 86.1718 10.958 86.2978 10.958 86.4418 cv
10.958 86.6218 11.012 86.8198 11.102 87.0358 cv
10.778 87.1618 li
9.80596 84.7318 li
9.80596 84.3538 li
11.498 84.3538 li
f
6.81796 70.0078 mo
11.534 70.0078 li
11.534 67.3978 li
11.534 66.7138 11.444 66.2638 11.228 66.0298 cv
10.958 65.7238 10.49 65.5618 9.80596 65.5258 cv
9.80596 65.1838 li
13.946 65.1838 li
13.946 65.5258 li
13.37 65.5978 13.01 65.6878 12.83 65.7598 cv
12.632 65.8678 12.47 66.0478 12.344 66.2818 cv
12.236 66.5338 12.164 66.8938 12.164 67.3978 cv
12.164 70.0078 li
16.106 70.0078 li
16.646 70.0078 16.97 69.9898 17.078 69.9358 cv
17.186 69.8998 17.276 69.8098 17.348 69.7018 cv
17.42 69.5938 17.438 69.3598 17.438 69.0178 cv
17.438 67.0018 li
17.438 66.3358 17.402 65.8498 17.294 65.5438 cv
17.204 65.2378 17.024 64.9498 16.736 64.6618 cv
16.376 64.3018 15.836 63.9238 15.098 63.5458 cv
15.098 63.1858 li
18.086 64.2118 li
18.086 73.3918 li
17.762 73.3918 li
17.762 72.9778 li
17.762 72.7078 17.708 72.4378 17.564 72.1858 cv
17.474 72.0058 17.33 71.8798 17.15 71.8078 cv
16.97 71.7358 16.574 71.6998 15.98 71.6998 cv
8.23996 71.6998 li
7.48396 71.6998 7.01596 71.7718 6.83596 71.9158 cv
6.61996 72.1318 6.49396 72.4918 6.49396 72.9778 cv
6.49396 73.3918 li
6.16996 73.3918 li
6.16996 64.2118 li
8.77996 64.0858 li
8.77996 64.4278 li
8.16796 64.5538 7.73596 64.6978 7.50196 64.8418 cv
7.26796 64.9858 7.08796 65.2198 6.94396 65.5078 cv
6.87196 65.7418 6.81796 66.1558 6.81796 66.7318 cv
6.81796 70.0078 li
f
9.80596 59.856 mo
11.606 59.856 li
10.418 59.19 9.80596 58.506 9.80596 57.786 cv
9.80596 57.462 9.91396 57.21 10.094 56.994 cv
10.292 56.778 10.526 56.67 10.778 56.67 cv
11.012 56.67 11.21 56.76 11.354 56.904 cv
11.516 57.048 11.588 57.228 11.588 57.444 cv
11.588 57.66 11.498 57.876 11.282 58.128 cv
11.084 58.38 10.976 58.578 10.976 58.686 cv
10.976 58.794 11.048 58.92 11.156 59.028 cv
11.408 59.298 11.804 59.568 12.344 59.856 cv
16.214 59.856 li
16.664 59.856 17.006 59.802 17.222 59.694 cv
17.384 59.622 17.51 59.478 17.618 59.28 cv
17.726 59.1 17.762 58.812 17.762 58.452 cv
18.086 58.452 li
18.086 62.574 li
17.762 62.574 li
17.762 62.178 17.708 61.872 17.582 61.656 cv
17.492 61.512 17.348 61.422 17.132 61.35 cv
17.024 61.314 16.736 61.296 16.268 61.296 cv
13.154 61.296 li
12.218 61.296 11.66 61.332 11.48 61.368 cv
11.3 61.404 11.174 61.476 11.084 61.584 cv
11.012 61.692 10.958 61.818 10.958 61.962 cv
10.958 62.142 11.012 62.358 11.102 62.574 cv
10.778 62.664 li
9.80596 60.216 li
9.80596 59.856 li
f
9.80596 53.8621 mo
11.606 53.8621 li
10.418 53.1961 9.80596 52.5121 9.80596 51.7921 cv
9.80596 51.4681 9.91396 51.2161 10.094 51.0001 cv
10.292 50.7841 10.526 50.6761 10.778 50.6761 cv
11.012 50.6761 11.21 50.7661 11.354 50.9101 cv
11.516 51.0541 11.588 51.2341 11.588 51.4501 cv
11.588 51.6661 11.498 51.8821 11.282 52.1341 cv
11.084 52.3861 10.976 52.5841 10.976 52.6921 cv
10.976 52.8001 11.048 52.9261 11.156 53.0341 cv
11.408 53.3041 11.804 53.5741 12.344 53.8621 cv
16.214 53.8621 li
16.664 53.8621 17.006 53.8081 17.222 53.7001 cv
17.384 53.6281 17.51 53.4841 17.618 53.2861 cv
17.726 53.1061 17.762 52.8181 17.762 52.4581 cv
18.086 52.4581 li
18.086 56.5801 li
17.762 56.5801 li
17.762 56.1841 17.708 55.8781 17.582 55.6621 cv
17.492 55.5181 17.348 55.4281 17.132 55.3561 cv
17.024 55.3201 16.736 55.3021 16.268 55.3021 cv
13.154 55.3021 li
12.218 55.3021 11.66 55.3381 11.48 55.3741 cv
11.3 55.4101 11.174 55.4821 11.084 55.5901 cv
11.012 55.6981 10.958 55.8241 10.958 55.9681 cv
10.958 56.1481 11.012 56.3641 11.102 56.5801 cv
10.778 56.6701 li
9.80596 54.2221 li
9.80596 53.8621 li
f
9.80596 46.2842 mo
9.80596 45.0602 10.274 44.0882 11.192 43.3502 cv
11.984 42.7382 12.902 42.4142 13.91 42.4142 cv
14.63 42.4142 15.368 42.5942 16.106 42.9362 cv
16.844 43.2782 17.402 43.7462 17.762 44.3582 cv
18.122 44.9702 18.32 45.6362 18.32 46.3742 cv
18.32 47.5982 17.852 48.5522 16.88 49.2722 cv
16.07 49.8842 15.152 50.1722 14.144 50.1722 cv
13.406 50.1722 12.668 49.9922 11.948 49.6322 cv
11.228 49.2722 10.688 48.7862 10.328 48.1922 cv
9.98596 47.5982 9.80596 46.9682 9.80596 46.2842 cv
10.364 46.5542 mo
10.364 46.8782 10.472 47.1842 10.652 47.4902 cv
10.832 47.8142 11.156 48.0662 11.624 48.2462 cv
12.092 48.4442 12.686 48.5342 13.406 48.5342 cv
14.576 48.5342 15.584 48.3182 16.43 47.8502 cv
17.294 47.3822 17.708 46.7702 17.708 45.9962 cv
17.708 45.4382 17.474 44.9702 17.006 44.5922 cv
16.538 44.2322 15.746 44.0342 14.594 44.0342 cv
13.172 44.0342 12.038 44.3582 11.21 44.9702 cv
10.652 45.3842 10.364 45.9062 10.364 46.5542 cv
f
9.80596 38.8682 mo
11.606 38.8682 li
10.418 38.2022 9.80596 37.5182 9.80596 36.7982 cv
9.80596 36.4742 9.91396 36.2222 10.094 36.0062 cv
10.292 35.7902 10.526 35.6822 10.778 35.6822 cv
11.012 35.6822 11.21 35.7722 11.354 35.9162 cv
11.516 36.0602 11.588 36.2402 11.588 36.4562 cv
11.588 36.6722 11.498 36.8882 11.282 37.1402 cv
11.084 37.3922 10.976 37.5902 10.976 37.6982 cv
10.976 37.8062 11.048 37.9322 11.156 38.0402 cv
11.408 38.3102 11.804 38.5802 12.344 38.8682 cv
16.214 38.8682 li
16.664 38.8682 17.006 38.8142 17.222 38.7062 cv
17.384 38.6342 17.51 38.4902 17.618 38.2922 cv
17.726 38.1122 17.762 37.8242 17.762 37.4642 cv
18.086 37.4642 li
18.086 41.5862 li
17.762 41.5862 li
17.762 41.1902 17.708 40.8842 17.582 40.6682 cv
17.492 40.5242 17.348 40.4342 17.132 40.3622 cv
17.024 40.3262 16.736 40.3082 16.268 40.3082 cv
13.154 40.3082 li
12.218 40.3082 11.66 40.3442 11.48 40.3802 cv
11.3 40.4162 11.174 40.4882 11.084 40.5962 cv
11.012 40.7042 10.958 40.8302 10.958 40.9742 cv
10.958 41.1542 11.012 41.3702 11.102 41.5862 cv
10.778 41.6762 li
9.80596 39.2282 li
9.80596 38.8682 li
f
21.596 30.1924 mo
21.92 30.1924 li
21.47 31.0924 20.948 31.8304 20.354 32.4064 cv
19.49 33.2704 18.5 33.9184 17.366 34.3684 cv
16.214 34.8364 15.026 35.0524 13.766 35.0524 cv
11.966 35.0524 10.31 34.6204 8.79796 33.7204 cv
7.30396 32.8204 6.24196 31.6504 5.59396 30.1924 cv
5.95396 30.1924 li
6.34996 30.9304 6.90796 31.5244 7.59196 31.9924 cv
8.29396 32.4604 9.17596 32.8024 10.22 33.0184 cv
11.282 33.2524 12.398 33.3604 13.55 33.3604 cv
14.81 33.3604 15.944 33.2704 16.952 33.0724 cv
17.762 32.9284 18.392 32.7304 18.878 32.5144 cv
19.364 32.2984 19.832 32.0104 20.3 31.6504 cv
20.75 31.2904 21.182 30.8044 21.596 30.1924 cv
f
11.516 26.8445 mo
10.94 26.2685 10.598 25.9085 10.508 25.8005 cv
10.292 25.5485 10.112 25.2605 9.98596 24.9545 cv
9.87796 24.6665 9.80596 24.3605 9.80596 24.0545 cv
9.80596 23.5505 9.94996 23.1185 10.238 22.7585 cv
10.526 22.3985 10.958 22.1465 11.516 22.0205 cv
10.814 21.4265 10.346 20.9225 10.13 20.4905 cv
9.91396 20.0765 9.80596 19.6445 9.80596 19.2125 cv
9.80596 18.7805 9.91396 18.4025 10.13 18.0785 cv
10.346 17.7545 10.706 17.4845 11.21 17.2865 cv
11.552 17.1605 12.092 17.0885 12.812 17.0885 cv
16.268 17.0885 li
16.772 17.0885 17.132 17.0525 17.312 16.9805 cv
17.438 16.9265 17.546 16.8185 17.636 16.6565 cv
17.726 16.4945 17.762 16.2425 17.762 15.8825 cv
18.086 15.8825 li
18.086 19.8425 li
17.762 19.8425 li
17.762 19.6805 li
17.762 19.3385 17.708 19.0685 17.564 18.8705 cv
17.474 18.7445 17.33 18.6545 17.114 18.5825 cv
17.024 18.5645 16.736 18.5465 16.268 18.5465 cv
12.812 18.5465 li
12.164 18.5465 11.696 18.6365 11.408 18.7805 cv
11.048 19.0145 10.85 19.3745 10.85 19.8785 cv
10.85 20.2025 10.94 20.5085 11.084 20.8145 cv
11.246 21.1385 11.534 21.5165 11.948 21.9485 cv
12.056 21.9665 li
12.434 21.9485 li
16.268 21.9485 li
16.826 21.9485 17.168 21.9305 17.294 21.8585 cv
17.438 21.8045 17.546 21.6965 17.636 21.5165 cv
17.726 21.3545 17.762 21.0665 17.762 20.6525 cv
18.086 20.6525 li
18.086 24.7205 li
17.762 24.7205 li
17.762 24.2885 17.726 23.9825 17.618 23.8025 cv
17.51 23.6405 17.348 23.5145 17.132 23.4425 cv
17.042 23.4245 16.754 23.4065 16.268 23.4065 cv
12.812 23.4065 li
12.164 23.4065 11.678 23.5145 11.39 23.6945 cv
11.03 23.9645 10.832 24.3245 10.832 24.7745 cv
10.832 25.0985 10.922 25.4225 11.084 25.7105 cv
11.336 26.2145 11.624 26.5925 11.948 26.8445 cv
16.268 26.8445 li
16.808 26.8445 17.15 26.8085 17.294 26.7365 cv
17.456 26.6645 17.582 26.5565 17.654 26.4125 cv
17.726 26.2685 17.762 25.9805 17.762 25.5305 cv
18.086 25.5305 li
18.086 29.5085 li
17.762 29.5085 li
17.762 29.1485 17.726 28.8965 17.654 28.7525 cv
17.582 28.6085 17.456 28.4825 17.276 28.4105 cv
17.096 28.3385 16.772 28.3025 16.268 28.3025 cv
13.19 28.3025 li
12.308 28.3025 11.732 28.3385 11.48 28.3745 cv
11.3 28.4105 11.156 28.4825 11.084 28.5725 cv
11.012 28.6625 10.958 28.7885 10.958 28.9325 cv
10.958 29.0945 11.012 29.2925 11.102 29.5085 cv
10.778 29.6525 li
9.80596 27.2225 li
9.80596 26.8445 li
11.516 26.8445 li
f
5.95396 15.3965 mo
5.59396 15.3965 li
6.02596 14.4965 6.54796 13.7585 7.14196 13.1645 cv
8.00596 12.3365 8.99596 11.6885 10.148 11.2205 cv
11.3 10.7705 12.506 10.5365 13.748 10.5365 cv
15.584 10.5365 17.24 10.9865 18.716 11.8865 cv
20.192 12.7865 21.272 13.9565 21.92 15.3965 cv
21.596 15.3965 li
21.182 14.6765 20.624 14.0825 19.94 13.6145 cv
19.256 13.1465 18.374 12.8045 17.33 12.5705 cv
16.286 12.3545 15.17 12.2285 14.018 12.2285 cv
12.776 12.2285 11.642 12.3365 10.598 12.5165 cv
9.80596 12.6785 9.15796 12.8585 8.67196 13.0745 cv
8.18596 13.2905 7.71796 13.5965 7.24996 13.9565 cv
6.79996 14.3165 6.36796 14.8025 5.95396 15.3965 cv
f
gsave
64.4297 127.834 mo
357.048 127.834 li
357.048 19.2342 li
64.4297 19.2342 li
64.4297 127.834 li
clp
2 lw
[7.4 3.2 ] 0 dsh
64.4297 127.834 mo
69.1116 127.163 li
70.2821 127.033 li
73.7935 126.903 li
77.3049 126.832 li
79.6459 127.413 li
86.6687 126.81 li
93.6915 126.096 li
96.0325 125.776 li
97.203 125.695 li
99.5439 125.353 li
101.885 125.086 li
103.055 124.845 li
105.396 124.633 li
115.931 123.623 li
119.442 123.349 li
121.783 123.091 li
127.635 122.578 li
128.806 122.361 li
131.147 122.209 li
142.851 120.987 li
144.022 120.778 li
147.533 120.411 li
149.874 120.064 li
151.045 119.776 li
152.215 118.687 li
153.386 119.241 li
162.749 118.554 li
165.09 118.378 li
167.431 118.256 li
174.454 117.262 li
182.648 116.336 li
183.818 116.244 li
197.864 113.355 li
199.034 113.035 li
200.205 112.934 li
201.375 113.692 li
202.546 116.637 li
203.716 117.186 li
204.886 117.476 li
209.568 118.133 li
213.08 119.01 li
214.25 119.092 li
216.591 119.673 li
221.273 120.647 li
224.785 121.505 li
227.125 122.002 li
234.148 123.292 li
238.83 124.017 li
241.171 124.25 li
244.683 124.364 li
247.024 124.275 li
250.535 123.938 li
252.876 124.207 li
254.046 124.853 li
255.217 125.333 li
257.558 125.928 li
259.899 126.341 li
262.24 126.392 li
263.41 126.202 li
269.263 124.172 li
272.774 122.657 li
273.944 121.983 li
278.626 119.852 li
279.797 119.507 li
284.479 117.574 li
287.99 116.132 li
291.501 114.712 li
298.524 111.468 li
302.036 110.051 li
312.57 105.462 li
316.081 103.749 li
326.616 98.8325 li
327.786 97.5401 li
328.957 95.2677 li
330.127 95.2867 li
332.468 95.1183 li
335.979 94.9527 li
343.002 94.35 li
@
grestore
gsave
64.4297 127.834 mo
357.048 127.834 li
357.048 19.2342 li
64.4297 19.2342 li
64.4297 127.834 li
clp
2 lw
2 lc
64.4297 25.0634 mo
70.2821 25.7665 li
73.7935 25.8996 li
77.3049 26.0218 li
79.6459 25.1638 li
80.8163 36.4419 li
81.9868 36.4636 li
83.1573 36.6021 li
84.3278 36.4636 li
85.4982 36.4473 li
87.8392 36.1378 li
94.862 35.6627 li
98.3734 35.1957 li
101.885 34.8944 li
104.226 34.6609 li
113.59 34.088 li
125.294 33.6346 li
128.806 33.3658 li
131.147 33.2871 li
133.488 33.1269 li
134.658 33.1541 li
135.829 33.0129 li
138.17 32.888 li
141.681 32.6029 li
144.022 32.2934 li
149.874 31.6744 li
151.045 31.3649 li
152.215 30.1893 li
153.386 30.2626 li
154.556 127.658 li
156.897 127.546 li
158.068 127.487 li
160.409 127.201 li
162.749 127.017 li
165.09 126.8 li
167.431 126.661 li
175.625 125.42 li
177.966 125.114 li
182.648 124.535 li
183.818 124.413 li
192.011 122.543 li
194.352 121.918 li
197.864 121.101 li
199.034 120.74 li
200.205 120.623 li
201.375 121.443 li
202.546 123.248 li
203.716 123.908 li
204.886 124.038 li
209.568 123.721 li
213.08 123.257 li
214.25 123.219 li
217.762 122.627 li
220.103 122.228 li
236.489 118.541 li
238.83 117.829 li
243.512 116.551 li
245.853 115.88 li
249.364 114.881 li
250.535 114.525 li
251.705 114.628 li
252.876 116.032 li
254.046 127.799 li
255.217 127.698 li
261.069 126.371 li
262.24 126.257 li
263.41 126.029 li
265.751 125.714 li
270.433 125.116 li
272.774 124.837 li
275.115 124.772 li
286.82 123.061 li
290.331 122.485 li
292.672 122.184 li
296.183 121.834 li
298.524 121.546 li
307.888 120.142 li
326.616 118.332 li
327.786 118.896 li
328.957 120.17 li
330.127 125.901 li
333.639 125.969 li
334.809 126.053 li
337.15 125.947 li
340.661 125.822 li
341.832 125.716 li
343.002 125.795 li
@
grestore
2 lc
0 lj
64.4297 127.834 mo
64.4297 19.2343 li
@
357.048 127.834 mo
357.048 19.2343 li
@
64.4297 127.834 mo
357.048 127.834 li
@
64.4297 19.2343 mo
357.048 19.2343 li
@
205.48 17.4463 mo
205.48 17.8351 li
204.4 17.2951 203.514 16.6687 202.823 15.9559 cv
201.786 14.9191 201.009 13.7311 200.469 12.3703 cv
199.907 10.9879 199.648 9.56225 199.648 8.05025 cv
199.648 5.89025 200.166 3.90305 201.246 2.08865 cv
202.326 .295853 203.73 -.978547 205.48 -1.75615 cv
205.48 -1.32415 li
204.594 -.848948 203.882 -.179347 203.32 .641453 cv
202.758 1.48385 202.348 2.54225 202.089 3.79505 cv
201.808 5.06945 201.678 6.40865 201.678 7.79105 cv
201.678 9.30305 201.786 10.6639 202.024 11.8735 cv
202.197 12.8455 202.434 13.6015 202.693 14.1847 cv
202.953 14.7679 203.298 15.3295 203.73 15.8911 cv
204.162 16.4311 204.745 16.9495 205.48 17.4463 cv
f
212.111 11.8519 mo
211.117 12.6295 210.491 13.0615 210.232 13.1695 cv
209.843 13.3207 209.454 13.4071 209.022 13.4071 cv
208.353 13.4071 207.813 13.1911 207.381 12.7375 cv
206.949 12.3055 206.733 11.7007 206.733 10.9447 cv
206.733 10.4695 206.819 10.0591 207.035 9.71345 cv
207.316 9.23825 207.813 8.80625 208.525 8.37425 cv
209.238 7.96385 210.426 7.44545 212.111 6.84065 cv
212.111 6.45185 li
212.111 5.50145 211.938 4.83185 211.636 4.46465 cv
211.333 4.11905 210.88 3.92465 210.318 3.92465 cv
209.865 3.92465 209.519 4.05425 209.26 4.29185 cv
208.979 4.55105 208.849 4.81025 208.849 5.11265 cv
208.871 5.71745 li
208.871 6.06305 208.785 6.30065 208.612 6.47345 cv
208.439 6.64625 208.245 6.73265 207.985 6.73265 cv
207.726 6.73265 207.51 6.64625 207.337 6.47345 cv
207.165 6.30065 207.1 6.04145 207.1 5.71745 cv
207.1 5.11265 207.402 4.57265 208.029 4.05425 cv
208.633 3.55745 209.497 3.29825 210.621 3.29825 cv
211.485 3.29825 212.176 3.44945 212.737 3.73025 cv
213.148 3.94625 213.45 4.29185 213.645 4.74545 cv
213.774 5.04785 213.839 5.67425 213.839 6.60305 cv
213.839 9.88625 li
213.839 10.8151 213.839 11.3767 213.882 11.5711 cv
213.925 11.7871 213.969 11.9167 214.055 11.9815 cv
214.141 12.0679 214.228 12.0895 214.357 12.0895 cv
214.638 12.0247 li
214.789 11.9383 215.07 11.6791 215.502 11.2471 cv
215.502 11.8519 li
214.703 12.8887 213.947 13.4071 213.234 13.4071 cv
212.889 13.4071 212.608 13.2775 212.413 13.0615 cv
212.197 12.8455 212.111 12.4351 212.111 11.8519 cv
212.111 11.1607 mo
212.111 7.46705 li
211.031 7.89905 210.34 8.20145 210.037 8.37425 cv
209.476 8.67665 209.087 9.00065 208.849 9.34625 cv
208.612 9.69185 208.504 10.0591 208.504 10.4479 cv
208.504 10.9663 208.655 11.3767 208.957 11.7223 cv
209.26 12.0679 209.605 12.2191 209.994 12.2191 cv
210.513 12.2191 211.225 11.8735 212.111 11.1607 cv
f
216.021 -1.32415 mo
216.021 -1.75615 li
217.101 -1.23775 217.986 -.611347 218.699 .101453 cv
219.693 1.13825 220.47 2.32625 221.032 3.70865 cv
221.572 5.09105 221.853 6.53825 221.853 8.02865 cv
221.853 10.2319 221.313 12.2191 220.233 13.9903 cv
219.153 15.7615 217.749 17.0575 216.021 17.8351 cv
216.021 17.4463 li
216.885 16.9495 217.597 16.2799 218.159 15.4591 cv
218.721 14.6383 219.131 13.5799 219.412 12.3271 cv
219.671 11.0743 219.822 9.73505 219.822 8.35265 cv
219.822 6.86225 219.693 5.50145 219.477 4.24865 cv
219.282 3.29825 219.066 2.52065 218.807 1.93745 cv
218.548 1.35425 218.181 .792652 217.749 .231052 cv
217.317 -.308948 216.733 -.827348 216.021 -1.32415 cv
f
344.448 84.0218 mo
298.924 84.0218 li
298.924 73.9342 li
347.548 73.9342 li
347.548 80.9218 li
347.546 82.045 347.271 82.7924 346.794 83.2682 cv
346.319 83.7444 345.571 84.02 344.448 84.0218 cv
298.124 84.0218 mo
240.401 84.0218 li
240.401 73.9342 li
298.124 73.9342 li
298.124 84.0218 li
239.601 84.0218 mo
207.364 84.0218 li
206.24 84.02 205.493 83.7444 205.017 83.2682 cv
204.541 82.7924 204.265 82.045 204.264 80.9218 cv
204.264 73.9342 li
239.601 73.9342 li
239.601 84.0218 li
347.548 73.1341 mo
298.924 73.1341 li
298.924 46.7842 li
347.548 46.7842 li
347.548 73.1341 li
298.124 73.1341 mo
240.401 73.1341 li
240.401 46.7842 li
298.124 46.7842 li
298.124 73.1341 li
239.601 73.1341 mo
204.264 73.1341 li
204.264 46.7842 li
239.601 46.7842 li
239.601 73.1341 li
347.548 45.9842 mo
298.924 45.9842 li
298.924 28.7343 li
344.448 28.7343 li
345.571 28.7361 346.319 29.0117 346.794 29.4879 cv
347.271 29.9637 347.546 30.7112 347.548 31.8342 cv
347.548 45.9842 li
298.124 45.9842 mo
240.401 45.9842 li
240.401 28.7343 li
298.124 28.7343 li
298.124 45.9842 li
239.601 45.9842 mo
204.264 45.9842 li
204.264 31.8342 li
204.265 30.7112 204.541 29.9637 205.017 29.4879 cv
205.493 29.0117 206.24 28.7361 207.364 28.7343 cv
239.601 28.7343 li
239.601 45.9842 li
/1 
<<
/Name (Black)
/1 
[/DeviceCMYK] /CSA add_res
/CSA /1 get_csa_by_name
/MappedCSA /1 /CSA get_res
/TintMethod /Subtractive
/TintProc null
/NComponents 4 
/Components [ 0 0 0 1 ] 
>>
/CSD add_res
1 /1 /CSD get_res sepcs
0 sep
f
240.401 84.0218 mo
239.601 84.0218 li
239.601 73.9342 li
240.401 73.9342 li
240.401 84.0218 li
240.401 73.1341 mo
239.601 73.1341 li
239.601 46.7842 li
240.401 46.7842 li
240.401 73.1341 li
240.401 45.9842 mo
239.601 45.9842 li
239.601 28.7343 li
240.401 28.7343 li
240.401 45.9842 li
1 /1 /CSD get_res sepcs
.0627451 sep
f
298.924 84.0218 mo
298.124 84.0218 li
298.124 73.9342 li
298.924 73.9342 li
298.924 84.0218 li
298.924 73.1341 mo
298.124 73.1341 li
298.124 46.7842 li
298.924 46.7842 li
298.924 73.1341 li
298.924 45.9842 mo
298.124 45.9842 li
298.124 28.7343 li
298.924 28.7343 li
298.924 45.9842 li
f
347.548 73.9342 mo
298.924 73.9342 li
298.124 73.9342 li
240.401 73.9342 li
239.601 73.9342 li
204.264 73.9342 li
204.264 73.1341 li
239.601 73.1341 li
240.401 73.1341 li
298.124 73.1341 li
298.924 73.1341 li
347.548 73.1341 li
347.548 73.9342 li
f
347.548 46.7842 mo
298.924 46.7842 li
298.124 46.7842 li
240.401 46.7842 li
239.601 46.7842 li
204.264 46.7842 li
204.264 45.9842 li
239.601 45.9842 li
240.401 45.9842 li
298.124 45.9842 li
298.924 45.9842 li
347.548 45.9842 li
347.548 46.7842 li
f
344.459 85.0217 mo
344.455 85.0217 344.452 85.0217 344.448 85.0217 cv
298.924 85.0217 li
298.924 84.0218 li
344.448 84.0218 li
345.571 84.02 346.319 83.7444 346.794 83.2682 cv
347.271 82.7924 347.546 82.045 347.548 80.9218 cv
347.548 73.9342 li
348.548 73.9342 li
348.548 80.9218 li
348.55 82.1987 348.225 83.2511 347.501 83.9754 cv
346.779 84.6971 345.731 85.0217 344.459 85.0217 cv
207.353 85.0217 mo
206.081 85.0218 205.032 84.6972 204.31 83.9754 cv
203.586 83.2511 203.262 82.1987 203.264 80.9218 cv
203.264 73.9342 li
204.264 73.9342 li
204.264 80.9218 li
204.265 82.045 204.541 82.7924 205.017 83.2682 cv
205.493 83.7444 206.24 84.02 207.364 84.0218 cv
207.364 84.0218 li
239.601 84.0218 li
239.601 85.0217 li
207.364 85.0217 li
207.36 85.0217 207.356 85.0217 207.353 85.0217 cv
298.124 85.0217 mo
240.401 85.0217 li
240.401 84.0218 li
298.124 84.0218 li
298.124 85.0217 li
348.548 73.1341 mo
347.548 73.1341 li
347.548 46.7842 li
348.548 46.7842 li
348.548 73.1341 li
204.264 73.1341 mo
203.264 73.1341 li
203.264 46.7842 li
204.264 46.7842 li
204.264 73.1341 li
348.548 45.9842 mo
347.548 45.9842 li
347.548 31.8342 li
347.546 30.7112 347.271 29.9637 346.794 29.4879 cv
346.319 29.0117 345.571 28.7361 344.448 28.7343 cv
298.924 28.7343 li
298.924 27.7343 li
344.448 27.7343 li
344.451 27.7343 344.455 27.7343 344.458 27.7343 cv
345.73 27.7343 346.779 28.0589 347.501 28.7808 cv
348.225 29.5049 348.55 30.5575 348.548 31.8342 cv
348.548 45.9842 li
204.264 45.9842 mo
203.264 45.9842 li
203.264 31.8342 li
203.262 30.5575 203.586 29.5049 204.31 28.7808 cv
205.032 28.0589 206.081 27.7343 207.353 27.7343 cv
207.357 27.7343 207.36 27.7343 207.364 27.7343 cv
239.601 27.7343 li
239.601 28.7343 li
207.364 28.7343 li
206.24 28.7361 205.493 29.0117 205.017 29.4879 cv
204.541 29.9637 204.265 30.7112 204.264 31.8342 cv
204.264 45.9842 li
298.124 28.7343 mo
240.401 28.7343 li
240.401 27.7343 li
298.124 27.7343 li
298.124 28.7343 li
1 /1 /CSD get_res sepcs
.160784 sep
f
240.401 85.0217 mo
239.601 85.0217 li
239.601 84.0218 li
240.401 84.0218 li
240.401 85.0217 li
240.401 28.7343 mo
239.601 28.7343 li
239.601 27.7343 li
240.401 27.7343 li
240.401 28.7343 li
1 /1 /CSD get_res sepcs
.223529 sep
f
298.924 85.0217 mo
298.124 85.0217 li
298.124 84.0218 li
298.924 84.0218 li
298.924 85.0217 li
298.924 28.7343 mo
298.124 28.7343 li
298.124 27.7343 li
298.924 27.7343 li
298.924 28.7343 li
f
348.548 73.9342 mo
347.548 73.9342 li
347.548 73.1341 li
348.548 73.1341 li
348.548 73.9342 li
204.264 73.9342 mo
203.264 73.9342 li
203.264 73.1341 li
204.264 73.1341 li
204.264 73.9342 li
f
348.548 46.7842 mo
347.548 46.7842 li
347.548 45.9842 li
348.548 45.9842 li
348.548 46.7842 li
204.264 46.7842 mo
203.264 46.7842 li
203.264 45.9842 li
204.264 45.9842 li
204.264 46.7842 li
f
2 lw
0 lc
1 lj
[7.4 3.2 ] 0 dsh
210.964 41.7343 mo
246.964 41.7343 li
1 /0 /CSD get_res sepcs
1 sep
@
269.68 41.9503 mo
270.508 42.1303 271.12 42.4183 271.534 42.7963 cv
272.092 43.3363 272.38 44.0023 272.38 44.7763 cv
272.38 45.3703 272.182 45.9283 271.822 46.4683 cv
271.444 47.0083 270.922 47.4043 270.274 47.6563 cv
269.626 47.9083 268.618 48.0343 267.286 48.0343 cv
261.67 48.0343 li
261.67 47.7103 li
262.12 47.7103 li
262.606 47.7103 262.966 47.5663 263.182 47.2423 cv
263.308 47.0263 263.38 46.5943 263.38 45.9283 cv
263.38 38.2243 li
263.38 37.5043 263.29 37.0363 263.128 36.8203 cv
262.894 36.5683 262.552 36.4423 262.12 36.4423 cv
261.67 36.4423 li
261.67 36.1183 li
266.818 36.1183 li
267.772 36.1183 268.546 36.1903 269.122 36.3343 cv
269.986 36.5503 270.67 36.9103 271.138 37.4503 cv
271.606 37.9903 271.84 38.6203 271.84 39.3043 cv
271.84 39.8983 271.642 40.4383 271.282 40.9063 cv
270.922 41.3743 270.382 41.7343 269.68 41.9503 cv
265.072 41.4823 mo
265.288 41.5183 265.522 41.5543 265.81 41.5723 cv
266.098 41.6083 266.404 41.6083 266.728 41.6083 cv
267.592 41.6083 268.222 41.5183 268.654 41.3383 cv
269.086 41.1583 269.41 40.8703 269.644 40.4743 cv
269.86 40.0963 269.986 39.6823 269.986 39.2323 cv
269.986 38.5483 269.698 37.9543 269.14 37.4503 cv
268.564 36.9643 267.736 36.7123 266.656 36.7123 cv
266.062 36.7123 265.54 36.7843 265.072 36.8923 cv
265.072 41.4823 li
265.072 47.1703 mo
265.756 47.3323 266.422 47.4043 267.088 47.4043 cv
268.132 47.4043 268.942 47.1703 269.5 46.7023 cv
270.058 46.2343 270.346 45.6403 270.346 44.9203 cv
270.346 44.4703 270.22 44.0203 269.968 43.5883 cv
269.716 43.1563 269.302 42.8323 268.726 42.5803 cv
268.15 42.3283 267.448 42.2023 266.62 42.2023 cv
266.26 42.2023 265.936 42.2203 265.684 42.2203 cv
265.432 42.2383 265.216 42.2563 265.072 42.2923 cv
265.072 47.1703 li
f
278.5 46.8823 mo
277.672 47.5303 277.15 47.8903 276.934 47.9803 cv
276.61 48.1063 276.286 48.1783 275.926 48.1783 cv
275.368 48.1783 274.918 47.9983 274.558 47.6203 cv
274.198 47.2603 274.018 46.7563 274.018 46.1263 cv
274.018 45.7303 274.09 45.3883 274.27 45.1003 cv
274.504 44.7043 274.918 44.3443 275.512 43.9843 cv
276.106 43.6423 277.096 43.2103 278.5 42.7063 cv
278.5 42.3823 li
278.5 41.5903 278.356 41.0323 278.104 40.7263 cv
277.852 40.4383 277.474 40.2763 277.006 40.2763 cv
276.628 40.2763 276.34 40.3843 276.124 40.5823 cv
275.89 40.7983 275.782 41.0143 275.782 41.2663 cv
275.8 41.7703 li
275.8 42.0583 275.728 42.2563 275.584 42.4003 cv
275.44 42.5443 275.278 42.6163 275.062 42.6163 cv
274.846 42.6163 274.666 42.5443 274.522 42.4003 cv
274.378 42.2563 274.324 42.0403 274.324 41.7703 cv
274.324 41.2663 274.576 40.8163 275.098 40.3843 cv
275.602 39.9703 276.322 39.7543 277.258 39.7543 cv
277.978 39.7543 278.554 39.8803 279.022 40.1143 cv
279.364 40.2943 279.616 40.5823 279.778 40.9603 cv
279.886 41.2123 279.94 41.7343 279.94 42.5083 cv
279.94 45.2443 li
279.94 46.0183 279.94 46.4863 279.976 46.6483 cv
280.012 46.8283 280.048 46.9363 280.12 46.9903 cv
280.192 47.0623 280.264 47.0803 280.372 47.0803 cv
280.606 47.0263 li
280.732 46.9543 280.966 46.7383 281.326 46.3783 cv
281.326 46.8823 li
280.66 47.7463 280.03 48.1783 279.436 48.1783 cv
279.148 48.1783 278.914 48.0703 278.752 47.8903 cv
278.572 47.7103 278.5 47.3683 278.5 46.8823 cv
278.5 46.3063 mo
278.5 43.2283 li
277.6 43.5883 277.024 43.8403 276.772 43.9843 cv
276.304 44.2363 275.98 44.5063 275.782 44.7943 cv
275.584 45.0823 275.494 45.3883 275.494 45.7123 cv
275.494 46.1443 275.62 46.4863 275.872 46.7743 cv
276.124 47.0623 276.412 47.1883 276.736 47.1883 cv
277.168 47.1883 277.762 46.9003 278.5 46.3063 cv
f
287.122 39.7543 mo
287.122 42.4903 li
286.834 42.4903 li
286.618 41.6263 286.33 41.0503 285.988 40.7263 cv
285.628 40.4203 285.196 40.2583 284.656 40.2583 cv
284.224 40.2583 283.9 40.3663 283.648 40.5823 cv
283.396 40.7983 283.27 41.0503 283.27 41.3023 cv
283.27 41.6443 283.36 41.9323 283.558 42.1483 cv
283.738 42.4003 284.098 42.6523 284.674 42.9223 cv
285.952 43.5343 li
287.14 44.1283 287.734 44.9023 287.734 45.8383 cv
287.734 46.5763 287.446 47.1703 286.906 47.6023 cv
286.348 48.0343 285.736 48.2683 285.052 48.2683 cv
284.548 48.2683 283.99 48.1783 283.36 48.0163 cv
283.162 47.9623 283 47.9263 282.874 47.9263 cv
282.73 47.9263 282.64 47.9983 282.568 48.1423 cv
282.28 48.1423 li
282.28 45.2803 li
282.568 45.2803 li
282.73 46.1083 283.036 46.7383 283.504 47.1523 cv
283.972 47.5663 284.494 47.7643 285.07 47.7643 cv
285.466 47.7643 285.79 47.6563 286.042 47.4043 cv
286.294 47.1703 286.438 46.8823 286.438 46.5403 cv
286.438 46.1443 286.294 45.8203 286.006 45.5323 cv
285.718 45.2623 285.142 44.9203 284.296 44.4883 cv
283.45 44.0743 282.892 43.6963 282.64 43.3363 cv
282.37 43.0123 282.244 42.5803 282.244 42.0763 cv
282.244 41.4283 282.46 40.8703 282.928 40.4203 cv
283.378 39.9883 283.972 39.7543 284.692 39.7543 cv
284.998 39.7543 285.376 39.8263 285.844 39.9523 cv
286.132 40.0423 286.33 40.0783 286.438 40.0783 cv
286.528 40.0783 286.6 40.0603 286.654 40.0243 cv
286.69 39.9883 286.762 39.8983 286.834 39.7543 cv
287.122 39.7543 li
f
290.974 35.5423 mo
291.226 35.5423 291.424 35.6323 291.604 35.7943 cv
291.766 35.9743 291.856 36.1723 291.856 36.4243 cv
291.856 36.6763 291.766 36.8743 291.604 37.0543 cv
291.424 37.2343 291.226 37.3243 290.974 37.3243 cv
290.722 37.3243 290.524 37.2343 290.344 37.0543 cv
290.164 36.8743 290.074 36.6763 290.074 36.4243 cv
290.074 36.1723 290.146 35.9743 290.326 35.7943 cv
290.506 35.6323 290.722 35.5423 290.974 35.5423 cv
291.712 39.7543 mo
291.712 46.2163 li
291.712 46.7203 291.748 47.0623 291.82 47.2243 cv
291.892 47.4043 292 47.5303 292.144 47.6023 cv
292.288 47.6743 292.54 47.7103 292.918 47.7103 cv
292.918 48.0343 li
289.012 48.0343 li
289.012 47.7103 li
289.408 47.7103 289.66 47.6743 289.804 47.6023 cv
289.93 47.5303 290.038 47.4043 290.11 47.2243 cv
290.182 47.0443 290.236 46.7203 290.236 46.2163 cv
290.236 43.1203 li
290.236 42.2563 290.2 41.6803 290.164 41.4103 cv
290.128 41.2303 290.056 41.1043 289.966 41.0323 cv
289.876 40.9603 289.75 40.9063 289.606 40.9063 cv
289.444 40.9063 289.246 40.9603 289.012 41.0503 cv
288.886 40.7263 li
291.316 39.7543 li
291.712 39.7543 li
f
300.766 44.9743 mo
300.55 46.0363 300.118 46.8463 299.488 47.4223 cv
298.858 47.9983 298.156 48.2683 297.4 48.2683 cv
296.464 48.2683 295.672 47.8903 294.988 47.1343 cv
294.304 46.3783 293.98 45.3343 293.98 44.0203 cv
293.98 42.7603 294.358 41.7343 295.114 40.9423 cv
295.87 40.1503 296.77 39.7543 297.832 39.7543 cv
298.606 39.7543 299.254 39.9703 299.758 40.3843 cv
300.262 40.7983 300.532 41.2303 300.532 41.6803 cv
300.532 41.9143 300.46 42.0943 300.316 42.2203 cv
300.172 42.3643 299.974 42.4183 299.722 42.4183 cv
299.362 42.4183 299.11 42.3103 298.948 42.0943 cv
298.84 41.9863 298.768 41.7523 298.732 41.3923 cv
298.696 41.0503 298.588 40.7803 298.39 40.6003 cv
298.174 40.4203 297.886 40.3303 297.526 40.3303 cv
296.95 40.3303 296.482 40.5463 296.122 40.9783 cv
295.636 41.5543 295.402 42.3283 295.402 43.2643 cv
295.402 44.2363 295.636 45.0823 296.104 45.8023 cv
296.572 46.5403 297.22 46.9003 298.03 46.9003 cv
298.606 46.9003 299.11 46.7203 299.578 46.3243 cv
299.902 46.0543 300.208 45.5683 300.514 44.8483 cv
300.766 44.9743 li
f
309.55 42.4543 mo
309.55 45.9283 li
309.55 46.6843 309.622 47.1343 309.802 47.3143 cv
310.018 47.5843 310.342 47.7103 310.81 47.7103 cv
311.26 47.7103 li
311.26 48.0343 li
306.166 48.0343 li
306.166 47.7103 li
306.616 47.7103 li
307.102 47.7103 307.462 47.5483 307.696 47.2243 cv
307.804 47.0443 307.858 46.6123 307.858 45.9283 cv
307.858 38.2243 li
307.858 37.4863 307.768 37.0183 307.624 36.8203 cv
307.39 36.5683 307.048 36.4423 306.616 36.4423 cv
306.166 36.4423 li
306.166 36.1183 li
310.522 36.1183 li
311.584 36.1183 312.43 36.2443 313.042 36.4603 cv
313.654 36.6763 314.176 37.0543 314.608 37.5583 cv
315.022 38.0803 315.238 38.6923 315.238 39.4123 cv
315.238 40.3843 314.914 41.1763 314.266 41.7883 cv
313.618 42.4003 312.718 42.7063 311.548 42.7063 cv
311.26 42.7063 310.936 42.6883 310.612 42.6523 cv
310.288 42.6163 309.928 42.5443 309.55 42.4543 cv
309.55 41.9503 mo
309.856 42.0223 310.126 42.0583 310.378 42.0943 cv
310.612 42.1303 310.81 42.1303 310.99 42.1303 cv
311.602 42.1303 312.124 41.8963 312.574 41.4283 cv
313.006 40.9603 313.24 40.3483 313.24 39.5923 cv
313.24 39.0883 313.132 38.6023 312.916 38.1523 cv
312.7 37.7203 312.412 37.3783 312.016 37.1623 cv
311.62 36.9463 311.188 36.8203 310.702 36.8203 cv
310.396 36.8203 310.018 36.8923 309.55 37.0003 cv
309.55 41.9503 li
f
316.174 48.0343 mo
316.174 47.7103 li
316.624 47.7103 li
317.128 47.7103 317.488 47.5483 317.704 47.2243 cv
317.812 47.0443 317.884 46.6123 317.884 45.9283 cv
317.884 38.2243 li
317.884 37.4863 317.794 37.0183 317.65 36.8203 cv
317.416 36.5683 317.074 36.4423 316.624 36.4423 cv
316.174 36.4423 li
316.174 36.1183 li
321.034 36.1183 li
322.798 36.1183 324.148 36.3343 325.084 36.7303 cv
326.02 37.1263 326.758 37.8103 327.334 38.7463 cv
327.892 39.6823 328.18 40.7803 328.18 42.0223 cv
328.18 43.6783 327.676 45.0643 326.668 46.1623 cv
325.534 47.4223 323.806 48.0343 321.502 48.0343 cv
316.174 48.0343 li
319.576 47.1703 mo
320.314 47.3503 320.944 47.4223 321.448 47.4223 cv
322.798 47.4223 323.932 46.9543 324.832 46.0003 cv
325.732 45.0463 326.182 43.7503 326.182 42.0943 cv
326.182 40.4563 325.732 39.1603 324.832 38.2063 cv
323.932 37.2703 322.78 36.7843 321.376 36.7843 cv
320.836 36.7843 320.242 36.8743 319.576 37.0363 cv
319.576 47.1703 li
f
341.032 48.0343 mo
337.846 48.0343 li
333.814 42.4543 li
333.508 42.4723 333.256 42.4723 333.076 42.4723 cv
332.824 42.4723 li
332.572 42.4543 li
332.572 45.9283 li
332.572 46.6843 332.644 47.1343 332.806 47.3143 cv
333.022 47.5843 333.364 47.7103 333.814 47.7103 cv
334.282 47.7103 li
334.282 48.0343 li
329.17 48.0343 li
329.17 47.7103 li
329.62 47.7103 li
330.124 47.7103 330.484 47.5483 330.7 47.2243 cv
330.808 47.0443 330.88 46.6123 330.88 45.9283 cv
330.88 38.2243 li
330.88 37.4863 330.79 37.0183 330.646 36.8203 cv
330.412 36.5683 330.07 36.4423 329.62 36.4423 cv
329.17 36.4423 li
329.17 36.1183 li
333.508 36.1183 li
334.768 36.1183 335.704 36.2263 336.316 36.4063 cv
336.91 36.5863 337.414 36.9283 337.846 37.4143 cv
338.26 37.9183 338.476 38.4943 338.476 39.1783 cv
338.476 39.9163 338.224 40.5463 337.756 41.0863 cv
337.27 41.6263 336.532 42.0223 335.542 42.2383 cv
337.99 45.6583 li
338.548 46.4503 339.034 46.9723 339.448 47.2243 cv
339.844 47.4763 340.384 47.6383 341.032 47.7103 cv
341.032 48.0343 li
332.572 41.9143 mo
332.68 41.9143 332.77 41.9143 332.86 41.9143 cv
333.058 41.9143 li
334.192 41.9143 335.056 41.6803 335.632 41.1763 cv
336.208 40.6903 336.496 40.0603 336.496 39.3043 cv
336.496 38.5663 336.262 37.9543 335.794 37.4863 cv
335.326 37.0183 334.696 36.7843 333.94 36.7843 cv
333.598 36.7843 333.148 36.8383 332.572 36.9463 cv
332.572 41.9143 li
f
2 lc
[] 0 dsh
210.964 67.178 mo
246.964 67.178 li
@
269.608 69.482 mo
264.982 69.482 li
264.172 71.372 li
263.974 71.84 263.884 72.182 263.884 72.398 cv
263.884 72.596 263.956 72.758 264.136 72.902 cv
264.298 73.046 264.676 73.118 265.252 73.154 cv
265.252 73.478 li
261.508 73.478 li
261.508 73.154 li
261.994 73.082 262.318 72.956 262.48 72.812 cv
262.768 72.524 263.092 71.966 263.47 71.102 cv
267.664 61.292 li
267.97 61.292 li
272.11 71.21 li
272.434 72.002 272.74 72.524 273.01 72.758 cv
273.28 72.992 273.658 73.118 274.162 73.154 cv
274.162 73.478 li
269.464 73.478 li
269.464 73.154 li
269.932 73.136 270.238 73.064 270.418 72.92 cv
270.58 72.794 270.67 72.632 270.67 72.416 cv
270.67 72.164 270.544 71.768 270.328 71.21 cv
269.608 69.482 li
269.356 68.834 mo
267.34 64.028 li
265.252 68.834 li
269.356 68.834 li
f
276.97 60.986 mo
277.222 60.986 277.42 61.076 277.6 61.238 cv
277.762 61.418 277.852 61.616 277.852 61.868 cv
277.852 62.12 277.762 62.318 277.6 62.498 cv
277.42 62.678 277.222 62.768 276.97 62.768 cv
276.718 62.768 276.52 62.678 276.34 62.498 cv
276.16 62.318 276.07 62.12 276.07 61.868 cv
276.07 61.616 276.142 61.418 276.322 61.238 cv
276.502 61.076 276.718 60.986 276.97 60.986 cv
277.708 65.198 mo
277.708 71.66 li
277.708 72.164 277.744 72.506 277.816 72.668 cv
277.888 72.848 277.996 72.974 278.14 73.046 cv
278.284 73.118 278.536 73.154 278.914 73.154 cv
278.914 73.478 li
275.008 73.478 li
275.008 73.154 li
275.404 73.154 275.656 73.118 275.8 73.046 cv
275.926 72.974 276.034 72.848 276.106 72.668 cv
276.178 72.488 276.232 72.164 276.232 71.66 cv
276.232 68.564 li
276.232 67.7 276.196 67.124 276.16 66.854 cv
276.124 66.674 276.052 66.548 275.962 66.476 cv
275.872 66.404 275.746 66.35 275.602 66.35 cv
275.44 66.35 275.242 66.404 275.008 66.494 cv
274.882 66.17 li
277.312 65.198 li
277.708 65.198 li
f
283.054 62.21 mo
283.054 66.89 li
285.214 66.89 li
285.718 66.89 286.078 66.782 286.312 66.566 cv
286.528 66.35 286.69 65.918 286.78 65.252 cv
287.104 65.252 li
287.104 69.302 li
286.78 69.302 li
286.762 68.834 286.69 68.492 286.582 68.276 cv
286.474 68.06 286.312 67.898 286.114 67.79 cv
285.898 67.682 285.61 67.628 285.214 67.628 cv
283.054 67.628 li
283.054 71.372 li
283.054 71.984 283.09 72.38 283.162 72.56 cv
283.216 72.704 283.342 72.83 283.522 72.938 cv
283.774 73.082 284.044 73.154 284.332 73.154 cv
284.764 73.154 li
284.764 73.478 li
279.652 73.478 li
279.652 73.154 li
280.084 73.154 li
280.57 73.154 280.93 73.01 281.146 72.722 cv
281.29 72.542 281.362 72.092 281.362 71.372 cv
281.362 63.668 li
281.362 63.074 281.308 62.678 281.236 62.48 cv
281.182 62.336 281.056 62.21 280.876 62.102 cv
280.624 61.958 280.354 61.886 280.084 61.886 cv
279.652 61.886 li
279.652 61.562 li
288.526 61.562 li
288.634 64.172 li
288.328 64.172 li
288.166 63.632 287.986 63.218 287.788 62.966 cv
287.59 62.714 287.338 62.516 287.05 62.39 cv
286.744 62.282 286.294 62.21 285.682 62.21 cv
283.054 62.21 li
f
291.982 60.986 mo
292.234 60.986 292.432 61.076 292.612 61.238 cv
292.774 61.418 292.864 61.616 292.864 61.868 cv
292.864 62.12 292.774 62.318 292.612 62.498 cv
292.432 62.678 292.234 62.768 291.982 62.768 cv
291.73 62.768 291.532 62.678 291.352 62.498 cv
291.172 62.318 291.082 62.12 291.082 61.868 cv
291.082 61.616 291.154 61.418 291.334 61.238 cv
291.514 61.076 291.73 60.986 291.982 60.986 cv
292.72 65.198 mo
292.72 71.66 li
292.72 72.164 292.756 72.506 292.828 72.668 cv
292.9 72.848 293.008 72.974 293.152 73.046 cv
293.296 73.118 293.548 73.154 293.926 73.154 cv
293.926 73.478 li
290.02 73.478 li
290.02 73.154 li
290.416 73.154 290.668 73.118 290.812 73.046 cv
290.938 72.974 291.046 72.848 291.118 72.668 cv
291.19 72.488 291.244 72.164 291.244 71.66 cv
291.244 68.564 li
291.244 67.7 291.208 67.124 291.172 66.854 cv
291.136 66.674 291.064 66.548 290.974 66.476 cv
290.884 66.404 290.758 66.35 290.614 66.35 cv
290.452 66.35 290.254 66.404 290.02 66.494 cv
289.894 66.17 li
292.324 65.198 li
292.72 65.198 li
f
301.738 73.478 mo
297.13 63.452 li
297.13 71.408 li
297.13 72.146 297.202 72.596 297.382 72.776 cv
297.598 73.028 297.94 73.154 298.408 73.154 cv
298.822 73.154 li
298.822 73.478 li
294.682 73.478 li
294.682 73.154 li
295.096 73.154 li
295.6 73.154 295.96 73.01 296.176 72.704 cv
296.284 72.524 296.356 72.092 296.356 71.408 cv
296.356 63.632 li
296.356 63.11 296.302 62.732 296.194 62.48 cv
296.104 62.318 295.942 62.174 295.726 62.066 cv
295.51 61.958 295.15 61.886 294.682 61.886 cv
294.682 61.562 li
298.048 61.562 li
302.368 70.886 li
306.634 61.562 li
310 61.562 li
310 61.886 li
309.586 61.886 li
309.082 61.886 308.722 62.048 308.506 62.336 cv
308.362 62.534 308.308 62.966 308.308 63.632 cv
308.308 71.408 li
308.308 72.146 308.38 72.596 308.56 72.776 cv
308.776 73.028 309.118 73.154 309.586 73.154 cv
310 73.154 li
310 73.478 li
304.942 73.478 li
304.942 73.154 li
305.356 73.154 li
305.86 73.154 306.22 73.01 306.436 72.704 cv
306.562 72.524 306.634 72.092 306.634 71.408 cv
306.634 63.452 li
302.026 73.478 li
301.738 73.478 li
f
315.508 72.326 mo
314.68 72.974 314.158 73.334 313.942 73.424 cv
313.618 73.55 313.294 73.622 312.934 73.622 cv
312.376 73.622 311.926 73.442 311.566 73.064 cv
311.206 72.704 311.026 72.2 311.026 71.57 cv
311.026 71.174 311.098 70.832 311.278 70.544 cv
311.512 70.148 311.926 69.788 312.52 69.428 cv
313.114 69.086 314.104 68.654 315.508 68.15 cv
315.508 67.826 li
315.508 67.034 315.364 66.476 315.112 66.17 cv
314.86 65.882 314.482 65.72 314.014 65.72 cv
313.636 65.72 313.348 65.828 313.132 66.026 cv
312.898 66.242 312.79 66.458 312.79 66.71 cv
312.808 67.214 li
312.808 67.502 312.736 67.7 312.592 67.844 cv
312.448 67.988 312.286 68.06 312.07 68.06 cv
311.854 68.06 311.674 67.988 311.53 67.844 cv
311.386 67.7 311.332 67.484 311.332 67.214 cv
311.332 66.71 311.584 66.26 312.106 65.828 cv
312.61 65.414 313.33 65.198 314.266 65.198 cv
314.986 65.198 315.562 65.324 316.03 65.558 cv
316.372 65.738 316.624 66.026 316.786 66.404 cv
316.894 66.656 316.948 67.178 316.948 67.952 cv
316.948 70.688 li
316.948 71.462 316.948 71.93 316.984 72.092 cv
317.02 72.272 317.056 72.38 317.128 72.434 cv
317.2 72.506 317.272 72.524 317.38 72.524 cv
317.614 72.47 li
317.74 72.398 317.974 72.182 318.334 71.822 cv
318.334 72.326 li
317.668 73.19 317.038 73.622 316.444 73.622 cv
316.156 73.622 315.922 73.514 315.76 73.334 cv
315.58 73.154 315.508 72.812 315.508 72.326 cv
315.508 71.75 mo
315.508 68.672 li
314.608 69.032 314.032 69.284 313.78 69.428 cv
313.312 69.68 312.988 69.95 312.79 70.238 cv
312.592 70.526 312.502 70.832 312.502 71.156 cv
312.502 71.588 312.628 71.93 312.88 72.218 cv
313.132 72.506 313.42 72.632 313.744 72.632 cv
314.176 72.632 314.77 72.344 315.508 71.75 cv
f
321.268 62.786 mo
321.268 65.432 li
323.158 65.432 li
323.158 66.044 li
321.268 66.044 li
321.268 71.264 li
321.268 71.786 321.34 72.146 321.484 72.326 cv
321.628 72.506 321.826 72.596 322.078 72.596 cv
322.258 72.596 322.456 72.542 322.636 72.416 cv
322.816 72.308 322.942 72.128 323.05 71.876 cv
323.392 71.876 li
323.176 72.452 322.888 72.884 322.528 73.172 cv
322.15 73.46 321.772 73.586 321.376 73.586 cv
321.088 73.586 320.818 73.514 320.566 73.37 cv
320.314 73.226 320.116 73.028 320.008 72.74 cv
319.882 72.47 319.828 72.038 319.828 71.462 cv
319.828 66.044 li
318.55 66.044 li
318.55 65.756 li
318.874 65.63 319.198 65.414 319.54 65.108 cv
319.864 64.802 320.17 64.442 320.44 64.01 cv
320.566 63.794 320.746 63.38 320.998 62.786 cv
321.268 62.786 li
f
330.772 70.418 mo
330.556 71.48 330.124 72.29 329.494 72.866 cv
328.864 73.442 328.162 73.712 327.406 73.712 cv
326.47 73.712 325.678 73.334 324.994 72.578 cv
324.31 71.822 323.986 70.778 323.986 69.464 cv
323.986 68.204 324.364 67.178 325.12 66.386 cv
325.876 65.594 326.776 65.198 327.838 65.198 cv
328.612 65.198 329.26 65.414 329.764 65.828 cv
330.268 66.242 330.538 66.674 330.538 67.124 cv
330.538 67.358 330.466 67.538 330.322 67.664 cv
330.178 67.808 329.98 67.862 329.728 67.862 cv
329.368 67.862 329.116 67.754 328.954 67.538 cv
328.846 67.43 328.774 67.196 328.738 66.836 cv
328.702 66.494 328.594 66.224 328.396 66.044 cv
328.18 65.864 327.892 65.774 327.532 65.774 cv
326.956 65.774 326.488 65.99 326.128 66.422 cv
325.642 66.998 325.408 67.772 325.408 68.708 cv
325.408 69.68 325.642 70.526 326.11 71.246 cv
326.578 71.984 327.226 72.344 328.036 72.344 cv
328.612 72.344 329.116 72.164 329.584 71.768 cv
329.908 71.498 330.214 71.012 330.52 70.292 cv
330.772 70.418 li
f
334.3 60.986 mo
334.3 66.872 li
334.948 66.152 335.452 65.702 335.83 65.504 cv
336.208 65.306 336.586 65.198 336.982 65.198 cv
337.432 65.198 337.828 65.324 338.152 65.576 cv
338.476 65.828 338.728 66.224 338.89 66.746 cv
338.998 67.142 339.052 67.826 339.052 68.816 cv
339.052 71.66 li
339.052 72.164 339.088 72.524 339.178 72.704 cv
339.232 72.848 339.322 72.974 339.466 73.046 cv
339.61 73.118 339.862 73.154 340.258 73.154 cv
340.258 73.478 li
336.298 73.478 li
336.298 73.154 li
336.478 73.154 li
336.838 73.154 337.108 73.1 337.252 72.992 cv
337.396 72.884 337.504 72.704 337.576 72.488 cv
337.576 72.398 337.594 72.128 337.594 71.66 cv
337.594 68.816 li
337.594 67.934 337.54 67.358 337.45 67.088 cv
337.36 66.818 337.216 66.62 337.018 66.476 cv
336.82 66.332 336.586 66.26 336.298 66.26 cv
336.01 66.26 335.704 66.35 335.398 66.494 cv
335.092 66.638 334.732 66.944 334.3 67.412 cv
334.3 71.66 li
334.3 72.218 334.318 72.56 334.39 72.686 cv
334.444 72.83 334.552 72.938 334.732 73.028 cv
334.894 73.118 335.182 73.154 335.596 73.154 cv
335.596 73.478 li
331.6 73.478 li
331.6 73.154 li
331.96 73.154 332.23 73.1 332.446 72.992 cv
332.554 72.938 332.662 72.83 332.734 72.668 cv
332.806 72.506 332.842 72.164 332.842 71.66 cv
332.842 64.37 li
332.842 63.452 332.806 62.894 332.77 62.678 cv
332.716 62.462 332.644 62.318 332.554 62.246 cv
332.464 62.174 332.338 62.138 332.194 62.138 cv
332.068 62.138 331.87 62.192 331.6 62.264 cv
331.474 61.958 li
333.886 60.986 li
334.3 60.986 li
f
64.4297 308.833 mo
357.048 308.833 li
357.048 200.234 li
64.4297 200.234 li
64.4297 308.833 li
1 /0 /CSD get_res sepcs
0 sep
f
gsave
64.4297 308.833 mo
357.048 308.833 li
357.048 200.234 li
64.4297 200.234 li
64.4297 308.833 li
clp
.8 lw
64.4297 308.834 mo
64.4297 200.234 li
1 /0 /CSD get_res sepcs
.309804 sep
@
grestore
64.4297 308.834 mo
64.4297 312.334 li
1 /0 /CSD get_res sepcs
1 sep
f
.8 lw
0 lc
64.4297 308.834 mo
64.4297 312.334 li
@
60.5777 322.448 mo
60.5777 321.098 60.7757 319.928 61.1897 318.938 cv
61.5857 317.966 62.1437 317.228 62.8277 316.742 cv
63.3497 316.364 63.8897 316.166 64.4657 316.166 cv
65.3657 316.166 66.1937 316.634 66.9317 317.57 cv
67.8317 318.722 68.2817 320.288 68.2817 322.268 cv
68.2817 323.654 68.0837 324.824 67.6877 325.796 cv
67.2917 326.768 66.7697 327.452 66.1577 327.884 cv
65.5457 328.316 64.9517 328.532 64.3757 328.532 cv
63.2237 328.532 62.2877 327.866 61.5317 326.534 cv
60.8837 325.418 60.5777 324.05 60.5777 322.448 cv
62.3057 322.664 mo
62.3057 324.32 62.5037 325.652 62.9177 326.678 cv
63.2417 327.56 63.7277 327.992 64.4117 327.992 cv
64.7177 327.992 65.0417 327.866 65.3837 327.578 cv
65.7257 327.29 65.9777 326.822 66.1577 326.138 cv
66.4277 325.13 66.5717 323.708 66.5717 321.872 cv
66.5717 320.522 66.4277 319.388 66.1397 318.47 cv
65.9237 317.804 65.6537 317.336 65.3297 317.048 cv
65.0777 316.85 64.7897 316.742 64.4477 316.742 cv
64.0517 316.742 63.6917 316.922 63.3857 317.282 cv
62.9537 317.786 62.6657 318.542 62.5217 319.586 cv
62.3777 320.63 62.3057 321.656 62.3057 322.664 cv
f
gsave
64.4297 308.833 mo
357.048 308.833 li
357.048 200.234 li
64.4297 200.234 li
64.4297 308.833 li
clp
2 lc
113.199 308.834 mo
113.199 200.234 li
1 /0 /CSD get_res sepcs
.309804 sep
@
grestore
113.199 308.834 mo
113.199 312.334 li
f
113.199 308.834 mo
113.199 312.334 li
@
112.443 326.048 mo
111.615 328.334 li
104.577 328.334 li
104.577 328.01 li
106.647 326.138 108.105 324.59 108.951 323.384 cv
109.779 322.196 110.211 321.098 110.211 320.108 cv
110.211 319.352 109.977 318.74 109.509 318.254 cv
109.041 317.768 108.501 317.516 107.871 317.516 cv
107.277 317.516 106.755 317.696 106.287 318.038 cv
105.819 318.38 105.477 318.884 105.261 319.532 cv
104.937 319.532 li
105.081 318.452 105.441 317.624 106.053 317.048 cv
106.665 316.472 107.421 316.166 108.321 316.166 cv
109.293 316.166 110.103 316.49 110.751 317.102 cv
111.399 317.732 111.723 318.47 111.723 319.298 cv
111.723 319.91 111.579 320.504 111.309 321.116 cv
110.859 322.07 110.157 323.078 109.185 324.122 cv
107.727 325.724 106.809 326.678 106.449 327.002 cv
109.563 327.002 li
110.193 327.002 110.643 326.984 110.895 326.93 cv
111.147 326.894 111.381 326.804 111.597 326.66 cv
111.795 326.516 111.975 326.318 112.119 326.048 cv
112.443 326.048 li
f
113.847 322.448 mo
113.847 321.098 114.045 319.928 114.459 318.938 cv
114.855 317.966 115.413 317.228 116.097 316.742 cv
116.619 316.364 117.159 316.166 117.735 316.166 cv
118.635 316.166 119.463 316.634 120.201 317.57 cv
121.101 318.722 121.551 320.288 121.551 322.268 cv
121.551 323.654 121.353 324.824 120.957 325.796 cv
120.561 326.768 120.039 327.452 119.427 327.884 cv
118.815 328.316 118.221 328.532 117.645 328.532 cv
116.493 328.532 115.557 327.866 114.801 326.534 cv
114.153 325.418 113.847 324.05 113.847 322.448 cv
115.575 322.664 mo
115.575 324.32 115.773 325.652 116.187 326.678 cv
116.511 327.56 116.997 327.992 117.681 327.992 cv
117.987 327.992 118.311 327.866 118.653 327.578 cv
118.995 327.29 119.247 326.822 119.427 326.138 cv
119.697 325.13 119.841 323.708 119.841 321.872 cv
119.841 320.522 119.697 319.388 119.409 318.47 cv
119.193 317.804 118.923 317.336 118.599 317.048 cv
118.347 316.85 118.059 316.742 117.717 316.742 cv
117.321 316.742 116.961 316.922 116.655 317.282 cv
116.223 317.786 115.935 318.542 115.791 319.586 cv
115.647 320.63 115.575 321.656 115.575 322.664 cv
f
gsave
64.4297 308.833 mo
357.048 308.833 li
357.048 200.234 li
64.4297 200.234 li
64.4297 308.833 li
clp
2 lc
161.969 308.834 mo
161.969 200.234 li
1 /0 /CSD get_res sepcs
.309804 sep
@
grestore
161.969 308.834 mo
161.969 312.334 li
f
161.969 308.834 mo
161.969 312.334 li
@
161.339 323.942 mo
161.339 325.184 li
159.737 325.184 li
159.737 328.334 li
158.297 328.334 li
158.297 325.184 li
153.257 325.184 li
153.257 324.068 li
158.783 316.166 li
159.737 316.166 li
159.737 323.942 li
161.339 323.942 li
158.297 323.942 mo
158.297 318.02 li
154.103 323.942 li
158.297 323.942 li
f
162.617 322.448 mo
162.617 321.098 162.815 319.928 163.229 318.938 cv
163.625 317.966 164.183 317.228 164.867 316.742 cv
165.389 316.364 165.929 316.166 166.505 316.166 cv
167.405 316.166 168.233 316.634 168.971 317.57 cv
169.871 318.722 170.321 320.288 170.321 322.268 cv
170.321 323.654 170.123 324.824 169.727 325.796 cv
169.331 326.768 168.809 327.452 168.197 327.884 cv
167.585 328.316 166.991 328.532 166.415 328.532 cv
165.263 328.532 164.327 327.866 163.571 326.534 cv
162.923 325.418 162.617 324.05 162.617 322.448 cv
164.345 322.664 mo
164.345 324.32 164.543 325.652 164.957 326.678 cv
165.281 327.56 165.767 327.992 166.451 327.992 cv
166.757 327.992 167.081 327.866 167.423 327.578 cv
167.765 327.29 168.017 326.822 168.197 326.138 cv
168.467 325.13 168.611 323.708 168.611 321.872 cv
168.611 320.522 168.467 319.388 168.179 318.47 cv
167.963 317.804 167.693 317.336 167.369 317.048 cv
167.117 316.85 166.829 316.742 166.487 316.742 cv
166.091 316.742 165.731 316.922 165.425 317.282 cv
164.993 317.786 164.705 318.542 164.561 319.586 cv
164.417 320.63 164.345 321.656 164.345 322.664 cv
f
gsave
64.4297 308.833 mo
357.048 308.833 li
357.048 200.234 li
64.4297 200.234 li
64.4297 308.833 li
clp
210.339 309.234 mo
210.339 199.834 li
211.139 199.834 li
211.139 309.234 li
210.339 309.234 li
1 /0 /CSD get_res sepcs
.309804 sep
f
grestore
210.739 308.834 mo
210.739 312.334 li
f
210.739 308.834 mo
210.739 312.334 li
@
209.803 316.166 mo
209.803 316.49 li
209.029 316.58 208.399 316.742 207.913 316.958 cv
207.409 317.192 206.923 317.552 206.455 318.02 cv
205.987 318.488 205.591 319.028 205.267 319.604 cv
204.943 320.18 204.691 320.882 204.493 321.674 cv
205.321 321.098 206.167 320.81 207.031 320.81 cv
207.841 320.81 208.543 321.152 209.137 321.8 cv
209.731 322.448 210.037 323.294 210.037 324.32 cv
210.037 325.328 209.731 326.228 209.137 327.056 cv
208.417 328.046 207.445 328.532 206.257 328.532 cv
205.429 328.532 204.745 328.28 204.187 327.74 cv
203.071 326.696 202.513 325.328 202.513 323.654 cv
202.513 322.592 202.711 321.584 203.143 320.612 cv
203.575 319.658 204.187 318.812 204.979 318.056 cv
205.771 317.318 206.545 316.814 207.265 316.562 cv
207.985 316.31 208.669 316.166 209.299 316.166 cv
209.803 316.166 li
204.349 322.322 mo
204.241 323.114 204.187 323.762 204.187 324.23 cv
204.187 324.806 204.277 325.418 204.493 326.066 cv
204.691 326.732 204.997 327.254 205.429 327.632 cv
205.717 327.92 206.077 328.046 206.509 328.046 cv
207.013 328.046 207.481 327.812 207.877 327.326 cv
208.273 326.858 208.489 326.174 208.489 325.274 cv
208.489 324.284 208.273 323.42 207.877 322.682 cv
207.481 321.962 206.905 321.584 206.185 321.584 cv
205.969 321.584 205.717 321.638 205.465 321.728 cv
205.213 321.818 204.835 322.016 204.349 322.322 cv
f
211.387 322.448 mo
211.387 321.098 211.585 319.928 211.999 318.938 cv
212.395 317.966 212.953 317.228 213.637 316.742 cv
214.159 316.364 214.699 316.166 215.275 316.166 cv
216.175 316.166 217.003 316.634 217.741 317.57 cv
218.641 318.722 219.091 320.288 219.091 322.268 cv
219.091 323.654 218.893 324.824 218.497 325.796 cv
218.101 326.768 217.579 327.452 216.967 327.884 cv
216.355 328.316 215.761 328.532 215.185 328.532 cv
214.033 328.532 213.097 327.866 212.341 326.534 cv
211.693 325.418 211.387 324.05 211.387 322.448 cv
213.115 322.664 mo
213.115 324.32 213.313 325.652 213.727 326.678 cv
214.051 327.56 214.537 327.992 215.221 327.992 cv
215.527 327.992 215.851 327.866 216.193 327.578 cv
216.535 327.29 216.787 326.822 216.967 326.138 cv
217.237 325.13 217.381 323.708 217.381 321.872 cv
217.381 320.522 217.237 319.388 216.949 318.47 cv
216.733 317.804 216.463 317.336 216.139 317.048 cv
215.887 316.85 215.599 316.742 215.257 316.742 cv
214.861 316.742 214.501 316.922 214.195 317.282 cv
213.763 317.786 213.475 318.542 213.331 319.586 cv
213.187 320.63 213.115 321.656 213.115 322.664 cv
f
gsave
64.4297 308.833 mo
357.048 308.833 li
357.048 200.234 li
64.4297 200.234 li
64.4297 308.833 li
clp
259.109 309.234 mo
259.109 199.834 li
259.909 199.834 li
259.909 309.234 li
259.109 309.234 li
1 /0 /CSD get_res sepcs
.309804 sep
f
grestore
259.509 308.834 mo
259.509 312.334 li
f
259.509 308.834 mo
259.509 312.334 li
@
253.965 322.34 mo
253.011 321.566 252.399 320.936 252.129 320.468 cv
251.859 320 251.733 319.514 251.733 319.01 cv
251.733 318.236 252.021 317.57 252.615 317.012 cv
253.209 316.454 254.001 316.166 255.009 316.166 cv
255.963 316.166 256.737 316.436 257.331 316.958 cv
257.907 317.48 258.213 318.074 258.213 318.74 cv
258.213 319.19 258.051 319.64 257.727 320.108 cv
257.403 320.576 256.755 321.116 255.765 321.728 cv
256.773 322.538 257.457 323.168 257.799 323.618 cv
258.231 324.23 258.465 324.86 258.465 325.508 cv
258.465 326.354 258.141 327.074 257.511 327.65 cv
256.863 328.244 256.035 328.532 255.009 328.532 cv
253.857 328.532 252.975 328.19 252.363 327.488 cv
251.859 326.912 251.607 326.3 251.607 325.616 cv
251.607 325.094 251.769 324.572 252.129 324.05 cv
252.489 323.546 253.101 322.97 253.965 322.34 cv
255.351 321.386 mo
256.035 320.774 256.485 320.27 256.665 319.892 cv
256.845 319.532 256.953 319.118 256.953 318.65 cv
256.953 318.038 256.773 317.57 256.431 317.21 cv
256.089 316.868 255.621 316.688 255.027 316.688 cv
254.415 316.688 253.929 316.868 253.569 317.21 cv
253.191 317.552 253.011 317.948 253.011 318.416 cv
253.011 318.722 253.083 319.028 253.245 319.334 cv
253.389 319.64 253.605 319.928 253.893 320.198 cv
255.351 321.386 li
254.379 322.664 mo
253.875 323.078 253.515 323.528 253.281 324.014 cv
253.047 324.5 252.939 325.022 252.939 325.58 cv
252.939 326.336 253.137 326.948 253.551 327.398 cv
253.965 327.848 254.487 328.064 255.135 328.064 cv
255.765 328.064 256.269 327.902 256.665 327.542 cv
257.043 327.182 257.241 326.75 257.241 326.228 cv
257.241 325.814 257.115 325.436 256.899 325.094 cv
256.467 324.482 255.639 323.672 254.379 322.664 cv
f
260.157 322.448 mo
260.157 321.098 260.355 319.928 260.769 318.938 cv
261.165 317.966 261.723 317.228 262.407 316.742 cv
262.929 316.364 263.469 316.166 264.045 316.166 cv
264.945 316.166 265.773 316.634 266.511 317.57 cv
267.411 318.722 267.861 320.288 267.861 322.268 cv
267.861 323.654 267.663 324.824 267.267 325.796 cv
266.871 326.768 266.349 327.452 265.737 327.884 cv
265.125 328.316 264.531 328.532 263.955 328.532 cv
262.803 328.532 261.867 327.866 261.111 326.534 cv
260.463 325.418 260.157 324.05 260.157 322.448 cv
261.885 322.664 mo
261.885 324.32 262.083 325.652 262.497 326.678 cv
262.821 327.56 263.307 327.992 263.991 327.992 cv
264.297 327.992 264.621 327.866 264.963 327.578 cv
265.305 327.29 265.557 326.822 265.737 326.138 cv
266.007 325.13 266.151 323.708 266.151 321.872 cv
266.151 320.522 266.007 319.388 265.719 318.47 cv
265.503 317.804 265.233 317.336 264.909 317.048 cv
264.657 316.85 264.369 316.742 264.027 316.742 cv
263.631 316.742 263.271 316.922 262.965 317.282 cv
262.533 317.786 262.245 318.542 262.101 319.586 cv
261.957 320.63 261.885 321.656 261.885 322.664 cv
f
gsave
64.4297 308.833 mo
357.048 308.833 li
357.048 200.234 li
64.4297 200.234 li
64.4297 308.833 li
clp
307.878 309.234 mo
307.878 199.834 li
308.678 199.834 li
308.678 309.234 li
307.878 309.234 li
1 /0 /CSD get_res sepcs
.309804 sep
f
grestore
308.278 308.834 mo
308.278 312.334 li
f
308.278 308.834 mo
308.278 312.334 li
@
296.884 317.588 mo
299.782 316.166 li
300.07 316.166 li
300.07 326.228 li
300.07 326.912 300.088 327.326 300.16 327.488 cv
300.214 327.65 300.322 327.776 300.502 327.866 cv
300.682 327.956 301.042 328.01 301.582 328.01 cv
301.582 328.334 li
297.1 328.334 li
297.1 328.01 li
297.658 328.01 298.018 327.956 298.18 327.866 cv
298.342 327.794 298.45 327.668 298.522 327.524 cv
298.594 327.38 298.63 326.948 298.63 326.228 cv
298.63 319.802 li
298.63 318.938 298.594 318.38 298.54 318.128 cv
298.504 317.948 298.432 317.804 298.324 317.714 cv
298.216 317.642 298.072 317.588 297.928 317.588 cv
297.712 317.588 297.406 317.678 297.028 317.858 cv
296.884 317.588 li
f
304.426 322.448 mo
304.426 321.098 304.624 319.928 305.038 318.938 cv
305.434 317.966 305.992 317.228 306.676 316.742 cv
307.198 316.364 307.738 316.166 308.314 316.166 cv
309.214 316.166 310.042 316.634 310.78 317.57 cv
311.68 318.722 312.13 320.288 312.13 322.268 cv
312.13 323.654 311.932 324.824 311.536 325.796 cv
311.14 326.768 310.618 327.452 310.006 327.884 cv
309.394 328.316 308.8 328.532 308.224 328.532 cv
307.072 328.532 306.136 327.866 305.38 326.534 cv
304.732 325.418 304.426 324.05 304.426 322.448 cv
306.154 322.664 mo
306.154 324.32 306.352 325.652 306.766 326.678 cv
307.09 327.56 307.576 327.992 308.26 327.992 cv
308.566 327.992 308.89 327.866 309.232 327.578 cv
309.574 327.29 309.826 326.822 310.006 326.138 cv
310.276 325.13 310.42 323.708 310.42 321.872 cv
310.42 320.522 310.276 319.388 309.988 318.47 cv
309.772 317.804 309.502 317.336 309.178 317.048 cv
308.926 316.85 308.638 316.742 308.296 316.742 cv
307.9 316.742 307.54 316.922 307.234 317.282 cv
306.802 317.786 306.514 318.542 306.37 319.586 cv
306.226 320.63 306.154 321.656 306.154 322.664 cv
f
313.426 322.448 mo
313.426 321.098 313.624 319.928 314.038 318.938 cv
314.434 317.966 314.992 317.228 315.676 316.742 cv
316.198 316.364 316.738 316.166 317.314 316.166 cv
318.214 316.166 319.042 316.634 319.78 317.57 cv
320.68 318.722 321.13 320.288 321.13 322.268 cv
321.13 323.654 320.932 324.824 320.536 325.796 cv
320.14 326.768 319.618 327.452 319.006 327.884 cv
318.394 328.316 317.8 328.532 317.224 328.532 cv
316.072 328.532 315.136 327.866 314.38 326.534 cv
313.732 325.418 313.426 324.05 313.426 322.448 cv
315.154 322.664 mo
315.154 324.32 315.352 325.652 315.766 326.678 cv
316.09 327.56 316.576 327.992 317.26 327.992 cv
317.566 327.992 317.89 327.866 318.232 327.578 cv
318.574 327.29 318.826 326.822 319.006 326.138 cv
319.276 325.13 319.42 323.708 319.42 321.872 cv
319.42 320.522 319.276 319.388 318.988 318.47 cv
318.772 317.804 318.502 317.336 318.178 317.048 cv
317.926 316.85 317.638 316.742 317.296 316.742 cv
316.9 316.742 316.54 316.922 316.234 317.282 cv
315.802 317.786 315.514 318.542 315.37 319.586 cv
315.226 320.63 315.154 321.656 315.154 322.664 cv
f
gsave
64.4297 308.833 mo
357.048 308.833 li
357.048 200.234 li
64.4297 200.234 li
64.4297 308.833 li
clp
2 lc
357.048 308.834 mo
357.048 200.234 li
1 /0 /CSD get_res sepcs
.309804 sep
@
grestore
357.048 308.834 mo
357.048 312.334 li
f
357.048 308.834 mo
357.048 312.334 li
@
345.654 317.588 mo
348.552 316.166 li
348.84 316.166 li
348.84 326.228 li
348.84 326.912 348.858 327.326 348.93 327.488 cv
348.984 327.65 349.092 327.776 349.272 327.866 cv
349.452 327.956 349.812 328.01 350.352 328.01 cv
350.352 328.334 li
345.87 328.334 li
345.87 328.01 li
346.428 328.01 346.788 327.956 346.95 327.866 cv
347.112 327.794 347.22 327.668 347.292 327.524 cv
347.364 327.38 347.4 326.948 347.4 326.228 cv
347.4 319.802 li
347.4 318.938 347.364 318.38 347.31 318.128 cv
347.274 317.948 347.202 317.804 347.094 317.714 cv
346.986 317.642 346.842 317.588 346.698 317.588 cv
346.482 317.588 346.176 317.678 345.798 317.858 cv
345.654 317.588 li
f
360.792 326.048 mo
359.964 328.334 li
352.926 328.334 li
352.926 328.01 li
354.996 326.138 356.454 324.59 357.3 323.384 cv
358.128 322.196 358.56 321.098 358.56 320.108 cv
358.56 319.352 358.326 318.74 357.858 318.254 cv
357.39 317.768 356.85 317.516 356.22 317.516 cv
355.626 317.516 355.104 317.696 354.636 318.038 cv
354.168 318.38 353.826 318.884 353.61 319.532 cv
353.286 319.532 li
353.43 318.452 353.79 317.624 354.402 317.048 cv
355.014 316.472 355.77 316.166 356.67 316.166 cv
357.642 316.166 358.452 316.49 359.1 317.102 cv
359.748 317.732 360.072 318.47 360.072 319.298 cv
360.072 319.91 359.928 320.504 359.658 321.116 cv
359.208 322.07 358.506 323.078 357.534 324.122 cv
356.076 325.724 355.158 326.678 354.798 327.002 cv
357.912 327.002 li
358.542 327.002 358.992 326.984 359.244 326.93 cv
359.496 326.894 359.73 326.804 359.946 326.66 cv
360.144 326.516 360.324 326.318 360.468 326.048 cv
360.792 326.048 li
f
362.196 322.448 mo
362.196 321.098 362.394 319.928 362.808 318.938 cv
363.204 317.966 363.762 317.228 364.446 316.742 cv
364.968 316.364 365.508 316.166 366.084 316.166 cv
366.984 316.166 367.812 316.634 368.55 317.57 cv
369.45 318.722 369.9 320.288 369.9 322.268 cv
369.9 323.654 369.702 324.824 369.306 325.796 cv
368.91 326.768 368.388 327.452 367.776 327.884 cv
367.164 328.316 366.57 328.532 365.994 328.532 cv
364.842 328.532 363.906 327.866 363.15 326.534 cv
362.502 325.418 362.196 324.05 362.196 322.448 cv
363.924 322.664 mo
363.924 324.32 364.122 325.652 364.536 326.678 cv
364.86 327.56 365.346 327.992 366.03 327.992 cv
366.336 327.992 366.66 327.866 367.002 327.578 cv
367.344 327.29 367.596 326.822 367.776 326.138 cv
368.046 325.13 368.19 323.708 368.19 321.872 cv
368.19 320.522 368.046 319.388 367.758 318.47 cv
367.542 317.804 367.272 317.336 366.948 317.048 cv
366.696 316.85 366.408 316.742 366.066 316.742 cv
365.67 316.742 365.31 316.922 365.004 317.282 cv
364.572 317.786 364.284 318.542 364.14 319.586 cv
363.996 320.63 363.924 321.656 363.924 322.664 cv
f
171.241 336.491 mo
171.241 340.613 li
170.917 340.613 li
170.809 339.821 170.629 339.191 170.359 338.723 cv
170.071 338.255 169.693 337.895 169.189 337.607 cv
168.685 337.337 168.163 337.193 167.623 337.193 cv
167.011 337.193 166.507 337.391 166.111 337.751 cv
165.715 338.129 165.517 338.543 165.517 339.011 cv
165.517 339.389 165.643 339.731 165.895 340.019 cv
166.255 340.451 167.119 341.045 168.487 341.765 cv
169.603 342.377 170.359 342.827 170.773 343.151 cv
171.169 343.475 171.493 343.853 171.709 344.285 cv
171.925 344.717 172.033 345.167 172.033 345.635 cv
172.033 346.535 171.673 347.309 170.989 347.957 cv
170.287 348.605 169.387 348.929 168.289 348.929 cv
167.929 348.929 167.605 348.893 167.317 348.857 cv
167.137 348.821 166.759 348.713 166.183 348.551 cv
165.607 348.371 165.247 348.281 165.103 348.281 cv
164.941 348.281 164.815 348.335 164.743 348.407 cv
164.653 348.497 164.599 348.677 164.563 348.929 cv
164.239 348.929 li
164.239 344.861 li
164.563 344.861 li
164.707 345.725 164.923 346.355 165.175 346.787 cv
165.427 347.219 165.823 347.561 166.363 347.849 cv
166.885 348.137 167.461 348.263 168.109 348.263 cv
168.829 348.263 169.405 348.083 169.837 347.687 cv
170.269 347.309 170.485 346.859 170.485 346.319 cv
170.485 346.031 170.395 345.725 170.233 345.419 cv
170.071 345.131 169.819 344.843 169.477 344.591 cv
169.243 344.411 168.613 344.051 167.605 343.475 cv
166.579 342.899 165.859 342.449 165.427 342.107 cv
164.995 341.765 164.671 341.387 164.455 340.973 cv
164.239 340.577 164.131 340.127 164.131 339.623 cv
164.131 338.777 164.455 338.039 165.103 337.427 cv
165.751 336.815 166.597 336.491 167.605 336.491 cv
168.235 336.491 168.901 336.653 169.621 336.959 cv
169.945 337.103 170.179 337.175 170.323 337.175 cv
170.467 337.175 170.575 337.139 170.683 337.049 cv
170.791 336.959 170.863 336.779 170.917 336.491 cv
171.241 336.491 li
f
175.903 337.985 mo
175.903 340.631 li
177.793 340.631 li
177.793 341.243 li
175.903 341.243 li
175.903 346.463 li
175.903 346.985 175.975 347.345 176.119 347.525 cv
176.263 347.705 176.461 347.795 176.713 347.795 cv
176.893 347.795 177.091 347.741 177.271 347.615 cv
177.451 347.507 177.577 347.327 177.685 347.075 cv
178.027 347.075 li
177.811 347.651 177.523 348.083 177.163 348.371 cv
176.785 348.659 176.407 348.785 176.011 348.785 cv
175.723 348.785 175.453 348.713 175.201 348.569 cv
174.949 348.425 174.751 348.227 174.643 347.939 cv
174.517 347.669 174.463 347.237 174.463 346.661 cv
174.463 341.243 li
173.185 341.243 li
173.185 340.955 li
173.509 340.829 173.833 340.613 174.175 340.307 cv
174.499 340.001 174.805 339.641 175.075 339.209 cv
175.201 338.993 175.381 338.579 175.633 337.985 cv
175.903 337.985 li
f
179.917 343.655 mo
179.917 344.861 180.205 345.797 180.799 346.463 cv
181.375 347.147 182.077 347.489 182.869 347.489 cv
183.373 347.489 183.823 347.345 184.219 347.057 cv
184.615 346.769 184.939 346.283 185.209 345.563 cv
185.497 345.743 li
185.353 346.553 184.993 347.291 184.417 347.939 cv
183.823 348.587 183.085 348.911 182.185 348.911 cv
181.213 348.911 180.385 348.551 179.701 347.795 cv
179.017 347.039 178.675 346.031 178.675 344.753 cv
178.675 343.385 179.017 342.305 179.737 341.531 cv
180.439 340.775 181.321 340.379 182.401 340.379 cv
183.301 340.379 184.039 340.685 184.615 341.279 cv
185.191 341.873 185.497 342.665 185.497 343.655 cv
179.917 343.655 li
179.917 343.151 mo
183.643 343.151 li
183.607 342.647 183.553 342.269 183.463 342.053 cv
183.319 341.729 183.103 341.477 182.815 341.297 cv
182.527 341.117 182.221 341.009 181.897 341.009 cv
181.411 341.009 180.979 341.207 180.601 341.585 cv
180.205 341.963 179.989 342.485 179.917 343.151 cv
f
186.001 341.423 mo
188.467 340.433 li
188.791 340.433 li
188.791 342.305 li
189.205 341.603 189.619 341.117 190.051 340.829 cv
190.465 340.541 190.897 340.397 191.365 340.397 cv
192.175 340.397 192.859 340.721 193.399 341.333 cv
194.047 342.125 194.389 343.133 194.389 344.357 cv
194.389 345.761 193.975 346.913 193.183 347.813 cv
192.535 348.551 191.707 348.911 190.717 348.911 cv
190.285 348.911 189.907 348.839 189.583 348.713 cv
189.349 348.641 189.079 348.479 188.791 348.209 cv
188.791 350.639 li
188.791 351.179 188.827 351.539 188.899 351.683 cv
188.971 351.827 189.079 351.953 189.241 352.043 cv
189.403 352.133 189.709 352.187 190.159 352.187 cv
190.159 352.511 li
185.965 352.511 li
185.965 352.187 li
186.163 352.187 li
186.487 352.187 186.757 352.115 186.991 352.007 cv
187.099 351.935 187.171 351.827 187.243 351.683 cv
187.297 351.539 187.333 351.161 187.333 350.585 cv
187.333 343.007 li
187.333 342.485 187.297 342.161 187.261 342.017 cv
187.207 341.873 187.135 341.765 187.027 341.693 cv
186.919 341.621 186.793 341.585 186.631 341.585 cv
186.487 341.585 186.307 341.639 186.091 341.711 cv
186.001 341.423 li
188.791 342.827 mo
188.791 345.833 li
188.791 346.481 188.809 346.913 188.881 347.111 cv
188.953 347.453 189.151 347.759 189.475 348.011 cv
189.799 348.263 190.195 348.389 190.681 348.389 cv
191.257 348.389 191.743 348.173 192.103 347.705 cv
192.571 347.111 192.823 346.265 192.823 345.185 cv
192.823 343.961 192.553 343.025 192.013 342.341 cv
191.635 341.891 191.185 341.657 190.681 341.657 cv
190.393 341.657 190.105 341.729 189.835 341.873 cv
189.619 341.981 189.277 342.305 188.791 342.827 cv
f
199.285 336.761 mo
202.507 336.761 li
209.779 345.689 li
209.779 338.831 li
209.779 338.111 209.689 337.643 209.545 337.445 cv
209.329 337.211 208.969 337.085 208.501 337.085 cv
208.105 337.085 li
208.105 336.761 li
212.245 336.761 li
212.245 337.085 li
211.831 337.085 li
211.327 337.085 210.967 337.247 210.751 337.535 cv
210.607 337.733 210.553 338.165 210.553 338.831 cv
210.553 348.857 li
210.247 348.857 li
202.381 339.281 li
202.381 346.607 li
202.381 347.345 202.453 347.795 202.615 347.975 cv
202.831 348.227 203.173 348.353 203.641 348.353 cv
204.073 348.353 li
204.073 348.677 li
199.915 348.677 li
199.915 348.353 li
200.329 348.353 li
200.833 348.353 201.193 348.209 201.409 347.903 cv
201.535 347.723 201.607 347.291 201.607 346.607 cv
201.607 338.327 li
201.247 337.931 200.995 337.661 200.815 337.535 cv
200.635 337.409 200.383 337.283 200.041 337.157 cv
199.861 337.121 199.609 337.085 199.285 337.085 cv
199.285 336.761 li
f
220.111 340.631 mo
220.111 345.509 li
220.111 346.445 220.129 347.003 220.183 347.219 cv
220.219 347.435 220.291 347.579 220.399 347.651 cv
220.489 347.741 220.597 347.777 220.741 347.777 cv
220.921 347.777 221.119 347.723 221.353 347.615 cv
221.479 347.921 li
219.067 348.911 li
218.671 348.911 li
218.671 347.219 li
217.969 347.975 217.447 348.443 217.087 348.623 cv
216.727 348.803 216.331 348.911 215.935 348.911 cv
215.467 348.911 215.071 348.785 214.747 348.533 cv
214.423 348.281 214.189 347.939 214.063 347.525 cv
213.937 347.129 213.883 346.535 213.883 345.779 cv
213.883 342.197 li
213.883 341.819 213.829 341.549 213.757 341.405 cv
213.667 341.261 213.541 341.135 213.379 341.063 cv
213.217 340.991 212.929 340.955 212.515 340.955 cv
212.515 340.631 li
215.341 340.631 li
215.341 346.013 li
215.341 346.769 215.467 347.273 215.719 347.507 cv
215.971 347.741 216.295 347.849 216.673 347.849 cv
216.925 347.849 217.195 347.777 217.519 347.615 cv
217.843 347.453 218.221 347.147 218.671 346.697 cv
218.671 342.143 li
218.671 341.693 218.581 341.387 218.419 341.225 cv
218.239 341.063 217.897 340.973 217.375 340.955 cv
217.375 340.631 li
220.111 340.631 li
f
224.449 342.107 mo
225.025 341.531 225.385 341.189 225.493 341.099 cv
225.745 340.883 226.033 340.703 226.339 340.577 cv
226.627 340.469 226.933 340.397 227.239 340.397 cv
227.743 340.397 228.175 340.541 228.535 340.829 cv
228.895 341.117 229.147 341.549 229.273 342.107 cv
229.867 341.405 230.371 340.937 230.803 340.721 cv
231.217 340.505 231.649 340.397 232.081 340.397 cv
232.513 340.397 232.891 340.505 233.215 340.721 cv
233.539 340.937 233.809 341.297 234.007 341.801 cv
234.133 342.143 234.205 342.683 234.205 343.403 cv
234.205 346.859 li
234.205 347.363 234.241 347.723 234.313 347.903 cv
234.367 348.029 234.475 348.137 234.637 348.227 cv
234.799 348.317 235.051 348.353 235.411 348.353 cv
235.411 348.677 li
231.451 348.677 li
231.451 348.353 li
231.613 348.353 li
231.955 348.353 232.225 348.299 232.423 348.155 cv
232.549 348.065 232.639 347.921 232.711 347.705 cv
232.729 347.615 232.747 347.327 232.747 346.859 cv
232.747 343.403 li
232.747 342.755 232.657 342.287 232.513 341.999 cv
232.279 341.639 231.919 341.441 231.415 341.441 cv
231.091 341.441 230.785 341.531 230.479 341.675 cv
230.155 341.837 229.777 342.125 229.345 342.539 cv
229.327 342.647 li
229.345 343.025 li
229.345 346.859 li
229.345 347.417 229.363 347.759 229.435 347.885 cv
229.489 348.029 229.597 348.137 229.777 348.227 cv
229.939 348.317 230.227 348.353 230.641 348.353 cv
230.641 348.677 li
226.573 348.677 li
226.573 348.353 li
227.005 348.353 227.311 348.317 227.491 348.209 cv
227.653 348.101 227.779 347.939 227.851 347.723 cv
227.869 347.633 227.887 347.345 227.887 346.859 cv
227.887 343.403 li
227.887 342.755 227.779 342.269 227.599 341.981 cv
227.329 341.621 226.969 341.423 226.519 341.423 cv
226.195 341.423 225.871 341.513 225.583 341.675 cv
225.079 341.927 224.701 342.215 224.449 342.539 cv
224.449 346.859 li
224.449 347.399 224.485 347.741 224.557 347.885 cv
224.629 348.047 224.737 348.173 224.881 348.245 cv
225.025 348.317 225.313 348.353 225.763 348.353 cv
225.763 348.677 li
221.785 348.677 li
221.785 348.353 li
222.145 348.353 222.397 348.317 222.541 348.245 cv
222.685 348.173 222.811 348.047 222.883 347.867 cv
222.955 347.687 222.991 347.363 222.991 346.859 cv
222.991 343.781 li
222.991 342.899 222.955 342.323 222.919 342.071 cv
222.883 341.891 222.811 341.747 222.721 341.675 cv
222.631 341.603 222.505 341.549 222.361 341.549 cv
222.199 341.549 222.001 341.603 221.785 341.693 cv
221.641 341.369 li
224.071 340.397 li
224.449 340.397 li
224.449 342.107 li
f
238.273 342.017 mo
239.047 340.937 239.893 340.397 240.793 340.397 cv
241.621 340.397 242.341 340.757 242.953 341.459 cv
243.565 342.161 243.871 343.115 243.871 344.339 cv
243.871 345.779 243.385 346.931 242.449 347.795 cv
241.621 348.551 240.721 348.911 239.731 348.911 cv
239.263 348.911 238.777 348.821 238.291 348.659 cv
237.805 348.497 237.319 348.245 236.815 347.903 cv
236.815 339.569 li
236.815 338.651 236.779 338.093 236.743 337.877 cv
236.707 337.661 236.635 337.517 236.545 337.445 cv
236.437 337.373 236.329 337.337 236.203 337.337 cv
236.023 337.337 235.825 337.391 235.573 337.463 cv
235.483 337.157 li
237.877 336.185 li
238.273 336.185 li
238.273 342.017 li
238.273 342.575 mo
238.273 347.399 li
238.561 347.687 238.867 347.921 239.191 348.065 cv
239.515 348.209 239.839 348.281 240.181 348.281 cv
240.703 348.281 241.189 347.993 241.657 347.399 cv
242.125 346.823 242.359 345.959 242.359 344.843 cv
242.359 343.817 242.125 343.025 241.657 342.467 cv
241.189 341.927 240.667 341.639 240.091 341.639 cv
239.767 341.639 239.461 341.729 239.173 341.873 cv
238.921 341.999 238.633 342.233 238.273 342.575 cv
f
246.409 343.655 mo
246.409 344.861 246.697 345.797 247.291 346.463 cv
247.867 347.147 248.569 347.489 249.361 347.489 cv
249.865 347.489 250.315 347.345 250.711 347.057 cv
251.107 346.769 251.431 346.283 251.701 345.563 cv
251.989 345.743 li
251.845 346.553 251.485 347.291 250.909 347.939 cv
250.315 348.587 249.577 348.911 248.677 348.911 cv
247.705 348.911 246.877 348.551 246.193 347.795 cv
245.509 347.039 245.167 346.031 245.167 344.753 cv
245.167 343.385 245.509 342.305 246.229 341.531 cv
246.931 340.775 247.813 340.379 248.893 340.379 cv
249.793 340.379 250.531 340.685 251.107 341.279 cv
251.683 341.873 251.989 342.665 251.989 343.655 cv
246.409 343.655 li
246.409 343.151 mo
250.135 343.151 li
250.099 342.647 250.045 342.269 249.955 342.053 cv
249.811 341.729 249.595 341.477 249.307 341.297 cv
249.019 341.117 248.713 341.009 248.389 341.009 cv
247.903 341.009 247.471 341.207 247.093 341.585 cv
246.697 341.963 246.481 342.485 246.409 343.151 cv
f
255.409 340.397 mo
255.409 342.197 li
256.075 341.009 256.759 340.397 257.479 340.397 cv
257.803 340.397 258.055 340.505 258.271 340.685 cv
258.487 340.883 258.595 341.117 258.595 341.369 cv
258.595 341.603 258.505 341.801 258.361 341.945 cv
258.217 342.107 258.037 342.179 257.821 342.179 cv
257.605 342.179 257.389 342.089 257.137 341.873 cv
256.885 341.675 256.687 341.567 256.579 341.567 cv
256.471 341.567 256.345 341.639 256.237 341.747 cv
255.967 341.999 255.697 342.395 255.409 342.935 cv
255.409 346.805 li
255.409 347.255 255.463 347.597 255.571 347.813 cv
255.643 347.975 255.787 348.101 255.985 348.209 cv
256.165 348.317 256.453 348.353 256.813 348.353 cv
256.813 348.677 li
252.691 348.677 li
252.691 348.353 li
253.087 348.353 253.393 348.299 253.609 348.173 cv
253.753 348.083 253.843 347.939 253.915 347.723 cv
253.951 347.615 253.969 347.327 253.969 346.859 cv
253.969 343.745 li
253.969 342.809 253.933 342.251 253.897 342.071 cv
253.861 341.891 253.789 341.765 253.681 341.675 cv
253.573 341.603 253.447 341.549 253.303 341.549 cv
253.123 341.549 252.907 341.603 252.691 341.693 cv
252.601 341.369 li
255.049 340.397 li
255.409 340.397 li
f
gsave
64.4297 308.833 mo
357.048 308.833 li
357.048 200.234 li
64.4297 200.234 li
64.4297 308.833 li
clp
2 lc
64.4297 308.834 mo
357.048 308.834 li
1 /0 /CSD get_res sepcs
.309804 sep
@
grestore
64.4297 308.834 mo
60.9297 308.834 li
f
64.4297 308.834 mo
60.9297 308.834 li
@
35.5777 309.198 mo
35.5777 307.848 35.7757 306.678 36.1897 305.688 cv
36.5857 304.716 37.1437 303.978 37.8277 303.492 cv
38.3497 303.114 38.8897 302.916 39.4657 302.916 cv
40.3657 302.916 41.1937 303.384 41.9317 304.32 cv
42.8317 305.472 43.2817 307.038 43.2817 309.018 cv
43.2817 310.404 43.0837 311.574 42.6877 312.546 cv
42.2917 313.518 41.7697 314.202 41.1577 314.634 cv
40.5457 315.066 39.9517 315.282 39.3757 315.282 cv
38.2237 315.282 37.2877 314.616 36.5317 313.284 cv
35.8837 312.168 35.5777 310.8 35.5777 309.198 cv
37.3057 309.414 mo
37.3057 311.07 37.5037 312.402 37.9177 313.428 cv
38.2417 314.31 38.7277 314.742 39.4117 314.742 cv
39.7177 314.742 40.0417 314.616 40.3837 314.328 cv
40.7257 314.04 40.9777 313.572 41.1577 312.888 cv
41.4277 311.88 41.5717 310.458 41.5717 308.622 cv
41.5717 307.272 41.4277 306.138 41.1397 305.22 cv
40.9237 304.554 40.6537 304.086 40.3297 303.798 cv
40.0777 303.6 39.7897 303.492 39.4477 303.492 cv
39.0517 303.492 38.6917 303.672 38.3857 304.032 cv
37.9537 304.536 37.6657 305.292 37.5217 306.336 cv
37.3777 307.38 37.3057 308.406 37.3057 309.414 cv
f
46.1797 313.374 mo
46.4497 313.374 46.6837 313.482 46.8637 313.662 cv
47.0437 313.86 47.1517 314.094 47.1517 314.346 cv
47.1517 314.634 47.0437 314.868 46.8637 315.048 cv
46.6657 315.228 46.4317 315.318 46.1797 315.318 cv
45.9097 315.318 45.6757 315.228 45.4957 315.048 cv
45.2977 314.868 45.2077 314.634 45.2077 314.346 cv
45.2077 314.094 45.2977 313.86 45.4957 313.662 cv
45.6757 313.482 45.9097 313.374 46.1797 313.374 cv
f
49.0777 309.198 mo
49.0777 307.848 49.2757 306.678 49.6897 305.688 cv
50.0857 304.716 50.6437 303.978 51.3277 303.492 cv
51.8497 303.114 52.3897 302.916 52.9657 302.916 cv
53.8657 302.916 54.6937 303.384 55.4317 304.32 cv
56.3317 305.472 56.7817 307.038 56.7817 309.018 cv
56.7817 310.404 56.5837 311.574 56.1877 312.546 cv
55.7917 313.518 55.2697 314.202 54.6577 314.634 cv
54.0457 315.066 53.4517 315.282 52.8757 315.282 cv
51.7237 315.282 50.7877 314.616 50.0317 313.284 cv
49.3837 312.168 49.0777 310.8 49.0777 309.198 cv
50.8057 309.414 mo
50.8057 311.07 51.0037 312.402 51.4177 313.428 cv
51.7417 314.31 52.2277 314.742 52.9117 314.742 cv
53.2177 314.742 53.5417 314.616 53.8837 314.328 cv
54.2257 314.04 54.4777 313.572 54.6577 312.888 cv
54.9277 311.88 55.0717 310.458 55.0717 308.622 cv
55.0717 307.272 54.9277 306.138 54.6397 305.22 cv
54.4237 304.554 54.1537 304.086 53.8297 303.798 cv
53.5777 303.6 53.2897 303.492 52.9477 303.492 cv
52.5517 303.492 52.1917 303.672 51.8857 304.032 cv
51.4537 304.536 51.1657 305.292 51.0217 306.336 cv
50.8777 307.38 50.8057 308.406 50.8057 309.414 cv
f
gsave
64.4297 308.833 mo
357.048 308.833 li
357.048 200.234 li
64.4297 200.234 li
64.4297 308.833 li
clp
2 lc
64.4297 281.684 mo
357.048 281.684 li
1 /0 /CSD get_res sepcs
.309804 sep
@
grestore
64.4297 281.684 mo
60.9297 281.684 li
f
64.4297 281.684 mo
60.9297 281.684 li
@
28.0357 277.188 mo
30.9337 275.766 li
31.2217 275.766 li
31.2217 285.828 li
31.2217 286.512 31.2397 286.926 31.3117 287.088 cv
31.3657 287.25 31.4737 287.376 31.6537 287.466 cv
31.8337 287.556 32.1937 287.61 32.7337 287.61 cv
32.7337 287.934 li
28.2517 287.934 li
28.2517 287.61 li
28.8097 287.61 29.1697 287.556 29.3317 287.466 cv
29.4937 287.394 29.6017 287.268 29.6737 287.124 cv
29.7457 286.98 29.7817 286.548 29.7817 285.828 cv
29.7817 279.402 li
29.7817 278.538 29.7457 277.98 29.6917 277.728 cv
29.6557 277.548 29.5837 277.404 29.4757 277.314 cv
29.3677 277.242 29.2237 277.188 29.0797 277.188 cv
28.8637 277.188 28.5577 277.278 28.1797 277.458 cv
28.0357 277.188 li
f
35.5777 282.048 mo
35.5777 280.698 35.7757 279.528 36.1897 278.538 cv
36.5857 277.566 37.1437 276.828 37.8277 276.342 cv
38.3497 275.964 38.8897 275.766 39.4657 275.766 cv
40.3657 275.766 41.1937 276.234 41.9317 277.17 cv
42.8317 278.322 43.2817 279.888 43.2817 281.868 cv
43.2817 283.254 43.0837 284.424 42.6877 285.396 cv
42.2917 286.368 41.7697 287.052 41.1577 287.484 cv
40.5457 287.916 39.9517 288.132 39.3757 288.132 cv
38.2237 288.132 37.2877 287.466 36.5317 286.134 cv
35.8837 285.018 35.5777 283.65 35.5777 282.048 cv
37.3057 282.264 mo
37.3057 283.92 37.5037 285.252 37.9177 286.278 cv
38.2417 287.16 38.7277 287.592 39.4117 287.592 cv
39.7177 287.592 40.0417 287.466 40.3837 287.178 cv
40.7257 286.89 40.9777 286.422 41.1577 285.738 cv
41.4277 284.73 41.5717 283.308 41.5717 281.472 cv
41.5717 280.122 41.4277 278.988 41.1397 278.07 cv
40.9237 277.404 40.6537 276.936 40.3297 276.648 cv
40.0777 276.45 39.7897 276.342 39.4477 276.342 cv
39.0517 276.342 38.6917 276.522 38.3857 276.882 cv
37.9537 277.386 37.6657 278.142 37.5217 279.186 cv
37.3777 280.23 37.3057 281.256 37.3057 282.264 cv
f
46.1797 286.224 mo
46.4497 286.224 46.6837 286.332 46.8637 286.512 cv
47.0437 286.71 47.1517 286.944 47.1517 287.196 cv
47.1517 287.484 47.0437 287.718 46.8637 287.898 cv
46.6657 288.078 46.4317 288.168 46.1797 288.168 cv
45.9097 288.168 45.6757 288.078 45.4957 287.898 cv
45.2977 287.718 45.2077 287.484 45.2077 287.196 cv
45.2077 286.944 45.2977 286.71 45.4957 286.512 cv
45.6757 286.332 45.9097 286.224 46.1797 286.224 cv
f
49.0777 282.048 mo
49.0777 280.698 49.2757 279.528 49.6897 278.538 cv
50.0857 277.566 50.6437 276.828 51.3277 276.342 cv
51.8497 275.964 52.3897 275.766 52.9657 275.766 cv
53.8657 275.766 54.6937 276.234 55.4317 277.17 cv
56.3317 278.322 56.7817 279.888 56.7817 281.868 cv
56.7817 283.254 56.5837 284.424 56.1877 285.396 cv
55.7917 286.368 55.2697 287.052 54.6577 287.484 cv
54.0457 287.916 53.4517 288.132 52.8757 288.132 cv
51.7237 288.132 50.7877 287.466 50.0317 286.134 cv
49.3837 285.018 49.0777 283.65 49.0777 282.048 cv
50.8057 282.264 mo
50.8057 283.92 51.0037 285.252 51.4177 286.278 cv
51.7417 287.16 52.2277 287.592 52.9117 287.592 cv
53.2177 287.592 53.5417 287.466 53.8837 287.178 cv
54.2257 286.89 54.4777 286.422 54.6577 285.738 cv
54.9277 284.73 55.0717 283.308 55.0717 281.472 cv
55.0717 280.122 54.9277 278.988 54.6397 278.07 cv
54.4237 277.404 54.1537 276.936 53.8297 276.648 cv
53.5777 276.45 53.2897 276.342 52.9477 276.342 cv
52.5517 276.342 52.1917 276.522 51.8857 276.882 cv
51.4537 277.386 51.1657 278.142 51.0217 279.186 cv
50.8777 280.23 50.8057 281.256 50.8057 282.264 cv
f
gsave
64.4297 308.833 mo
357.048 308.833 li
357.048 200.234 li
64.4297 200.234 li
64.4297 308.833 li
clp
64.0297 254.134 mo
357.448 254.134 li
357.448 254.934 li
64.0297 254.934 li
64.0297 254.134 li
1 /0 /CSD get_res sepcs
.309804 sep
f
grestore
64.4297 254.534 mo
60.9297 254.534 li
f
64.4297 254.534 mo
60.9297 254.534 li
@
34.1737 258.498 mo
33.3457 260.784 li
26.3077 260.784 li
26.3077 260.46 li
28.3777 258.588 29.8357 257.04 30.6817 255.834 cv
31.5097 254.646 31.9417 253.548 31.9417 252.558 cv
31.9417 251.802 31.7077 251.19 31.2397 250.704 cv
30.7717 250.218 30.2317 249.966 29.6017 249.966 cv
29.0077 249.966 28.4857 250.146 28.0177 250.488 cv
27.5497 250.83 27.2077 251.334 26.9917 251.982 cv
26.6677 251.982 li
26.8117 250.902 27.1717 250.074 27.7837 249.498 cv
28.3957 248.922 29.1517 248.616 30.0517 248.616 cv
31.0237 248.616 31.8337 248.94 32.4817 249.552 cv
33.1297 250.182 33.4537 250.92 33.4537 251.748 cv
33.4537 252.36 33.3097 252.954 33.0397 253.566 cv
32.5897 254.52 31.8877 255.528 30.9157 256.572 cv
29.4577 258.174 28.5397 259.128 28.1797 259.452 cv
31.2937 259.452 li
31.9237 259.452 32.3737 259.434 32.6257 259.38 cv
32.8777 259.344 33.1117 259.254 33.3277 259.11 cv
33.5257 258.966 33.7057 258.768 33.8497 258.498 cv
34.1737 258.498 li
f
35.5777 254.898 mo
35.5777 253.548 35.7757 252.378 36.1897 251.388 cv
36.5857 250.416 37.1437 249.678 37.8277 249.192 cv
38.3497 248.814 38.8897 248.616 39.4657 248.616 cv
40.3657 248.616 41.1937 249.084 41.9317 250.02 cv
42.8317 251.172 43.2817 252.738 43.2817 254.718 cv
43.2817 256.104 43.0837 257.274 42.6877 258.246 cv
42.2917 259.218 41.7697 259.902 41.1577 260.334 cv
40.5457 260.766 39.9517 260.982 39.3757 260.982 cv
38.2237 260.982 37.2877 260.316 36.5317 258.984 cv
35.8837 257.868 35.5777 256.5 35.5777 254.898 cv
37.3057 255.114 mo
37.3057 256.77 37.5037 258.102 37.9177 259.128 cv
38.2417 260.01 38.7277 260.442 39.4117 260.442 cv
39.7177 260.442 40.0417 260.316 40.3837 260.028 cv
40.7257 259.74 40.9777 259.272 41.1577 258.588 cv
41.4277 257.58 41.5717 256.158 41.5717 254.322 cv
41.5717 252.972 41.4277 251.838 41.1397 250.92 cv
40.9237 250.254 40.6537 249.786 40.3297 249.498 cv
40.0777 249.3 39.7897 249.192 39.4477 249.192 cv
39.0517 249.192 38.6917 249.372 38.3857 249.732 cv
37.9537 250.236 37.6657 250.992 37.5217 252.036 cv
37.3777 253.08 37.3057 254.106 37.3057 255.114 cv
f
46.1797 259.074 mo
46.4497 259.074 46.6837 259.182 46.8637 259.362 cv
47.0437 259.56 47.1517 259.794 47.1517 260.046 cv
47.1517 260.334 47.0437 260.568 46.8637 260.748 cv
46.6657 260.928 46.4317 261.018 46.1797 261.018 cv
45.9097 261.018 45.6757 260.928 45.4957 260.748 cv
45.2977 260.568 45.2077 260.334 45.2077 260.046 cv
45.2077 259.794 45.2977 259.56 45.4957 259.362 cv
45.6757 259.182 45.9097 259.074 46.1797 259.074 cv
f
49.0777 254.898 mo
49.0777 253.548 49.2757 252.378 49.6897 251.388 cv
50.0857 250.416 50.6437 249.678 51.3277 249.192 cv
51.8497 248.814 52.3897 248.616 52.9657 248.616 cv
53.8657 248.616 54.6937 249.084 55.4317 250.02 cv
56.3317 251.172 56.7817 252.738 56.7817 254.718 cv
56.7817 256.104 56.5837 257.274 56.1877 258.246 cv
55.7917 259.218 55.2697 259.902 54.6577 260.334 cv
54.0457 260.766 53.4517 260.982 52.8757 260.982 cv
51.7237 260.982 50.7877 260.316 50.0317 258.984 cv
49.3837 257.868 49.0777 256.5 49.0777 254.898 cv
50.8057 255.114 mo
50.8057 256.77 51.0037 258.102 51.4177 259.128 cv
51.7417 260.01 52.2277 260.442 52.9117 260.442 cv
53.2177 260.442 53.5417 260.316 53.8837 260.028 cv
54.2257 259.74 54.4777 259.272 54.6577 258.588 cv
54.9277 257.58 55.0717 256.158 55.0717 254.322 cv
55.0717 252.972 54.9277 251.838 54.6397 250.92 cv
54.4237 250.254 54.1537 249.786 53.8297 249.498 cv
53.5777 249.3 53.2897 249.192 52.9477 249.192 cv
52.5517 249.192 52.1917 249.372 51.8857 249.732 cv
51.4537 250.236 51.1657 250.992 51.0217 252.036 cv
50.8777 253.08 50.8057 254.106 50.8057 255.114 cv
f
gsave
64.4297 308.833 mo
357.048 308.833 li
357.048 200.234 li
64.4297 200.234 li
64.4297 308.833 li
clp
64.0297 226.984 mo
357.448 226.984 li
357.448 227.784 li
64.0297 227.784 li
64.0297 226.984 li
1 /0 /CSD get_res sepcs
.309804 sep
f
grestore
64.4297 227.384 mo
60.9297 227.384 li
f
64.4297 227.384 mo
60.9297 227.384 li
@
26.8477 223.986 mo
27.1717 223.194 27.6037 222.564 28.1257 222.132 cv
28.6477 221.7 29.2957 221.466 30.0697 221.466 cv
31.0237 221.466 31.7617 221.79 32.2657 222.402 cv
32.6437 222.87 32.8417 223.374 32.8417 223.878 cv
32.8417 224.76 32.2837 225.66 31.2037 226.578 cv
31.9237 226.866 32.4817 227.28 32.8597 227.82 cv
33.2377 228.36 33.4357 228.972 33.4357 229.692 cv
33.4357 230.736 33.0937 231.618 32.4457 232.374 cv
31.5817 233.346 30.3577 233.832 28.7377 233.832 cv
27.9277 233.832 27.3877 233.724 27.0997 233.544 cv
26.8117 233.364 26.6677 233.148 26.6677 232.896 cv
26.6677 232.734 26.7217 232.59 26.8657 232.464 cv
26.9917 232.338 27.1537 232.266 27.3697 232.266 cv
27.5137 232.266 27.6577 232.302 27.8017 232.338 cv
27.9097 232.374 28.1257 232.482 28.4857 232.662 cv
28.8277 232.842 29.0797 232.95 29.2237 232.986 cv
29.4397 233.058 29.6557 233.076 29.9077 233.076 cv
30.5017 233.076 31.0237 232.86 31.4737 232.392 cv
31.9057 231.924 32.1397 231.384 32.1397 230.736 cv
32.1397 230.286 32.0317 229.836 31.8337 229.386 cv
31.6717 229.062 31.5097 228.828 31.3297 228.648 cv
31.0777 228.414 30.7177 228.198 30.2857 228 cv
29.8537 227.82 29.4037 227.712 28.9357 227.712 cv
28.6657 227.712 li
28.6657 227.46 li
29.1157 227.406 29.5837 227.244 30.0517 226.956 cv
30.5197 226.686 30.8437 226.362 31.0597 225.966 cv
31.2757 225.588 31.3837 225.156 31.3837 224.688 cv
31.3837 224.094 31.1857 223.608 30.8077 223.23 cv
30.4297 222.87 29.9617 222.672 29.4037 222.672 cv
28.5037 222.672 27.7477 223.158 27.1357 224.13 cv
26.8477 223.986 li
f
35.5777 227.748 mo
35.5777 226.398 35.7757 225.228 36.1897 224.238 cv
36.5857 223.266 37.1437 222.528 37.8277 222.042 cv
38.3497 221.664 38.8897 221.466 39.4657 221.466 cv
40.3657 221.466 41.1937 221.934 41.9317 222.87 cv
42.8317 224.022 43.2817 225.588 43.2817 227.568 cv
43.2817 228.954 43.0837 230.124 42.6877 231.096 cv
42.2917 232.068 41.7697 232.752 41.1577 233.184 cv
40.5457 233.616 39.9517 233.832 39.3757 233.832 cv
38.2237 233.832 37.2877 233.166 36.5317 231.834 cv
35.8837 230.718 35.5777 229.35 35.5777 227.748 cv
37.3057 227.964 mo
37.3057 229.62 37.5037 230.952 37.9177 231.978 cv
38.2417 232.86 38.7277 233.292 39.4117 233.292 cv
39.7177 233.292 40.0417 233.166 40.3837 232.878 cv
40.7257 232.59 40.9777 232.122 41.1577 231.438 cv
41.4277 230.43 41.5717 229.008 41.5717 227.172 cv
41.5717 225.822 41.4277 224.688 41.1397 223.77 cv
40.9237 223.104 40.6537 222.636 40.3297 222.348 cv
40.0777 222.15 39.7897 222.042 39.4477 222.042 cv
39.0517 222.042 38.6917 222.222 38.3857 222.582 cv
37.9537 223.086 37.6657 223.842 37.5217 224.886 cv
37.3777 225.93 37.3057 226.956 37.3057 227.964 cv
f
46.1797 231.924 mo
46.4497 231.924 46.6837 232.032 46.8637 232.212 cv
47.0437 232.41 47.1517 232.644 47.1517 232.896 cv
47.1517 233.184 47.0437 233.418 46.8637 233.598 cv
46.6657 233.778 46.4317 233.868 46.1797 233.868 cv
45.9097 233.868 45.6757 233.778 45.4957 233.598 cv
45.2977 233.418 45.2077 233.184 45.2077 232.896 cv
45.2077 232.644 45.2977 232.41 45.4957 232.212 cv
45.6757 232.032 45.9097 231.924 46.1797 231.924 cv
f
49.0777 227.748 mo
49.0777 226.398 49.2757 225.228 49.6897 224.238 cv
50.0857 223.266 50.6437 222.528 51.3277 222.042 cv
51.8497 221.664 52.3897 221.466 52.9657 221.466 cv
53.8657 221.466 54.6937 221.934 55.4317 222.87 cv
56.3317 224.022 56.7817 225.588 56.7817 227.568 cv
56.7817 228.954 56.5837 230.124 56.1877 231.096 cv
55.7917 232.068 55.2697 232.752 54.6577 233.184 cv
54.0457 233.616 53.4517 233.832 52.8757 233.832 cv
51.7237 233.832 50.7877 233.166 50.0317 231.834 cv
49.3837 230.718 49.0777 229.35 49.0777 227.748 cv
50.8057 227.964 mo
50.8057 229.62 51.0037 230.952 51.4177 231.978 cv
51.7417 232.86 52.2277 233.292 52.9117 233.292 cv
53.2177 233.292 53.5417 233.166 53.8837 232.878 cv
54.2257 232.59 54.4777 232.122 54.6577 231.438 cv
54.9277 230.43 55.0717 229.008 55.0717 227.172 cv
55.0717 225.822 54.9277 224.688 54.6397 223.77 cv
54.4237 223.104 54.1537 222.636 53.8297 222.348 cv
53.5777 222.15 53.2897 222.042 52.9477 222.042 cv
52.5517 222.042 52.1917 222.222 51.8857 222.582 cv
51.4537 223.086 51.1657 223.842 51.0217 224.886 cv
50.8777 225.93 50.8057 226.956 50.8057 227.964 cv
f
gsave
64.4297 308.833 mo
357.048 308.833 li
357.048 200.234 li
64.4297 200.234 li
64.4297 308.833 li
clp
2 lc
64.4297 200.234 mo
357.048 200.234 li
1 /0 /CSD get_res sepcs
.309804 sep
@
grestore
64.4297 200.234 mo
60.9297 200.234 li
f
64.4297 200.234 mo
60.9297 200.234 li
@
34.2997 202.092 mo
34.2997 203.334 li
32.6977 203.334 li
32.6977 206.484 li
31.2577 206.484 li
31.2577 203.334 li
26.2177 203.334 li
26.2177 202.218 li
31.7437 194.316 li
32.6977 194.316 li
32.6977 202.092 li
34.2997 202.092 li
31.2577 202.092 mo
31.2577 196.17 li
27.0637 202.092 li
31.2577 202.092 li
f
35.5777 200.598 mo
35.5777 199.248 35.7757 198.078 36.1897 197.088 cv
36.5857 196.116 37.1437 195.378 37.8277 194.892 cv
38.3497 194.514 38.8897 194.316 39.4657 194.316 cv
40.3657 194.316 41.1937 194.784 41.9317 195.72 cv
42.8317 196.872 43.2817 198.438 43.2817 200.418 cv
43.2817 201.804 43.0837 202.974 42.6877 203.946 cv
42.2917 204.918 41.7697 205.602 41.1577 206.034 cv
40.5457 206.466 39.9517 206.682 39.3757 206.682 cv
38.2237 206.682 37.2877 206.016 36.5317 204.684 cv
35.8837 203.568 35.5777 202.2 35.5777 200.598 cv
37.3057 200.814 mo
37.3057 202.47 37.5037 203.802 37.9177 204.828 cv
38.2417 205.71 38.7277 206.142 39.4117 206.142 cv
39.7177 206.142 40.0417 206.016 40.3837 205.728 cv
40.7257 205.44 40.9777 204.972 41.1577 204.288 cv
41.4277 203.28 41.5717 201.858 41.5717 200.022 cv
41.5717 198.672 41.4277 197.538 41.1397 196.62 cv
40.9237 195.954 40.6537 195.486 40.3297 195.198 cv
40.0777 195 39.7897 194.892 39.4477 194.892 cv
39.0517 194.892 38.6917 195.072 38.3857 195.432 cv
37.9537 195.936 37.6657 196.692 37.5217 197.736 cv
37.3777 198.78 37.3057 199.806 37.3057 200.814 cv
f
46.1797 204.774 mo
46.4497 204.774 46.6837 204.882 46.8637 205.062 cv
47.0437 205.26 47.1517 205.494 47.1517 205.746 cv
47.1517 206.034 47.0437 206.268 46.8637 206.448 cv
46.6657 206.628 46.4317 206.718 46.1797 206.718 cv
45.9097 206.718 45.6757 206.628 45.4957 206.448 cv
45.2977 206.268 45.2077 206.034 45.2077 205.746 cv
45.2077 205.494 45.2977 205.26 45.4957 205.062 cv
45.6757 204.882 45.9097 204.774 46.1797 204.774 cv
f
49.0777 200.598 mo
49.0777 199.248 49.2757 198.078 49.6897 197.088 cv
50.0857 196.116 50.6437 195.378 51.3277 194.892 cv
51.8497 194.514 52.3897 194.316 52.9657 194.316 cv
53.8657 194.316 54.6937 194.784 55.4317 195.72 cv
56.3317 196.872 56.7817 198.438 56.7817 200.418 cv
56.7817 201.804 56.5837 202.974 56.1877 203.946 cv
55.7917 204.918 55.2697 205.602 54.6577 206.034 cv
54.0457 206.466 53.4517 206.682 52.8757 206.682 cv
51.7237 206.682 50.7877 206.016 50.0317 204.684 cv
49.3837 203.568 49.0777 202.2 49.0777 200.598 cv
50.8057 200.814 mo
50.8057 202.47 51.0037 203.802 51.4177 204.828 cv
51.7417 205.71 52.2277 206.142 52.9117 206.142 cv
53.2177 206.142 53.5417 206.016 53.8837 205.728 cv
54.2257 205.44 54.4777 204.972 54.6577 204.288 cv
54.9277 203.28 55.0717 201.858 55.0717 200.022 cv
55.0717 198.672 54.9277 197.538 54.6397 196.62 cv
54.4237 195.954 54.1537 195.486 53.8297 195.198 cv
53.5777 195 53.2897 194.892 52.9477 194.892 cv
52.5517 194.892 52.1917 195.072 51.8857 195.432 cv
51.4537 195.936 51.1657 196.692 51.0217 197.736 cv
50.8777 198.78 50.8057 199.806 50.8057 200.814 cv
f
12.506 314.602 mo
15.98 314.602 li
16.736 314.602 17.186 314.53 17.366 314.35 cv
17.636 314.134 17.762 313.81 17.762 313.341 cv
17.762 312.892 li
18.086 312.892 li
18.086 317.986 li
17.762 317.986 li
17.762 317.535 li
17.762 317.049 17.6 316.69 17.276 316.456 cv
17.096 316.348 16.664 316.294 15.98 316.294 cv
8.27596 316.294 li
7.53796 316.294 7.06996 316.384 6.87196 316.527 cv
6.61996 316.762 6.49396 317.104 6.49396 317.535 cv
6.49396 317.986 li
6.16996 317.986 li
6.16996 313.63 li
6.16996 312.568 6.29596 311.721 6.51196 311.109 cv
6.72796 310.497 7.10596 309.975 7.60996 309.544 cv
8.13196 309.13 8.74396 308.914 9.46396 308.914 cv
10.436 308.914 11.228 309.237 11.84 309.885 cv
12.452 310.534 12.758 311.434 12.758 312.604 cv
12.758 312.892 12.74 313.216 12.704 313.539 cv
12.668 313.863 12.596 314.224 12.506 314.602 cv
12.002 314.602 mo
12.074 314.296 12.11 314.026 12.146 313.773 cv
12.182 313.539 12.182 313.341 12.182 313.161 cv
12.182 312.549 11.948 312.027 11.48 311.578 cv
11.012 311.146 10.4 310.911 9.64396 310.911 cv
9.13996 310.911 8.65396 311.02 8.20396 311.236 cv
7.77196 311.452 7.42996 311.74 7.21396 312.135 cv
6.99796 312.531 6.87196 312.964 6.87196 313.449 cv
6.87196 313.755 6.94396 314.134 7.05196 314.602 cv
12.002 314.602 li
f
9.80596 303.784 mo
9.80596 302.56 10.274 301.587 11.192 300.85 cv
11.984 300.238 12.902 299.914 13.91 299.914 cv
14.63 299.914 15.368 300.094 16.106 300.436 cv
16.844 300.777 17.402 301.246 17.762 301.858 cv
18.122 302.47 18.32 303.135 18.32 303.874 cv
18.32 305.098 17.852 306.052 16.88 306.772 cv
16.07 307.384 15.152 307.672 14.144 307.672 cv
13.406 307.672 12.668 307.492 11.948 307.132 cv
11.228 306.772 10.688 306.286 10.328 305.691 cv
9.98596 305.098 9.80596 304.467 9.80596 303.784 cv
10.364 304.053 mo
10.364 304.378 10.472 304.684 10.652 304.99 cv
10.832 305.314 11.156 305.566 11.624 305.746 cv
12.092 305.944 12.686 306.034 13.406 306.034 cv
14.576 306.034 15.584 305.818 16.43 305.35 cv
17.294 304.882 17.708 304.27 17.708 303.496 cv
17.708 302.938 17.474 302.47 17.006 302.092 cv
16.538 301.732 15.746 301.534 14.594 301.534 cv
13.172 301.534 12.038 301.858 11.21 302.47 cv
10.652 302.884 10.364 303.406 10.364 304.053 cv
f
9.80596 293.523 mo
12.542 293.523 li
12.542 293.812 li
11.678 294.027 11.102 294.316 10.778 294.658 cv
10.472 295.018 10.31 295.449 10.31 295.99 cv
10.31 296.422 10.418 296.746 10.634 296.997 cv
10.85 297.25 11.102 297.376 11.354 297.376 cv
11.696 297.376 11.984 297.286 12.2 297.087 cv
12.452 296.908 12.704 296.548 12.974 295.971 cv
13.586 294.694 li
14.18 293.505 14.954 292.911 15.89 292.911 cv
16.628 292.911 17.222 293.199 17.654 293.74 cv
18.086 294.298 18.32 294.91 18.32 295.594 cv
18.32 296.098 18.23 296.656 18.068 297.286 cv
18.014 297.484 17.978 297.646 17.978 297.772 cv
17.978 297.915 18.05 298.005 18.194 298.078 cv
18.194 298.366 li
15.332 298.366 li
15.332 298.078 li
16.16 297.915 16.79 297.609 17.204 297.142 cv
17.618 296.674 17.816 296.152 17.816 295.576 cv
17.816 295.18 17.708 294.855 17.456 294.604 cv
17.222 294.352 16.934 294.208 16.592 294.208 cv
16.196 294.208 15.872 294.352 15.584 294.639 cv
15.314 294.928 14.972 295.504 14.54 296.35 cv
14.126 297.195 13.748 297.754 13.388 298.005 cv
13.064 298.276 12.632 298.402 12.128 298.402 cv
11.48 298.402 10.922 298.186 10.472 297.717 cv
10.04 297.268 9.80596 296.674 9.80596 295.954 cv
9.80596 295.648 9.87796 295.27 10.004 294.802 cv
10.094 294.514 10.13 294.316 10.13 294.208 cv
10.13 294.117 10.112 294.046 10.076 293.992 cv
10.04 293.956 9.94996 293.884 9.80596 293.812 cv
9.80596 293.523 li
f
5.59396 289.671 mo
5.59396 289.419 5.68396 289.221 5.84596 289.041 cv
6.02596 288.879 6.22396 288.789 6.47596 288.789 cv
6.72796 288.789 6.92596 288.879 7.10596 289.041 cv
7.28596 289.221 7.37596 289.419 7.37596 289.671 cv
7.37596 289.923 7.28596 290.121 7.10596 290.301 cv
6.92596 290.481 6.72796 290.571 6.47596 290.571 cv
6.22396 290.571 6.02596 290.499 5.84596 290.319 cv
5.68396 290.139 5.59396 289.923 5.59396 289.671 cv
9.80596 288.933 mo
16.268 288.933 li
16.772 288.933 17.114 288.897 17.276 288.825 cv
17.456 288.753 17.582 288.645 17.654 288.501 cv
17.726 288.357 17.762 288.105 17.762 287.727 cv
18.086 287.727 li
18.086 291.633 li
17.762 291.633 li
17.762 291.237 17.726 290.985 17.654 290.841 cv
17.582 290.715 17.456 290.607 17.276 290.535 cv
17.096 290.463 16.772 290.409 16.268 290.409 cv
13.172 290.409 li
12.308 290.409 11.732 290.445 11.462 290.481 cv
11.282 290.517 11.156 290.589 11.084 290.679 cv
11.012 290.769 10.958 290.895 10.958 291.039 cv
10.958 291.201 11.012 291.399 11.102 291.633 cv
10.778 291.759 li
9.80596 289.329 li
9.80596 288.933 li
f
7.39396 284.379 mo
10.04 284.379 li
10.04 282.489 li
10.652 282.489 li
10.652 284.379 li
15.872 284.379 li
16.394 284.379 16.754 284.307 16.934 284.163 cv
17.114 284.019 17.204 283.821 17.204 283.569 cv
17.204 283.389 17.15 283.191 17.024 283.011 cv
16.916 282.831 16.736 282.705 16.484 282.597 cv
16.484 282.255 li
17.06 282.471 17.492 282.759 17.78 283.119 cv
18.068 283.497 18.194 283.875 18.194 284.271 cv
18.194 284.559 18.122 284.829 17.978 285.081 cv
17.834 285.333 17.636 285.531 17.348 285.639 cv
17.078 285.765 16.646 285.819 16.07 285.819 cv
10.652 285.819 li
10.652 287.097 li
10.364 287.097 li
10.238 286.773 10.022 286.449 9.71596 286.107 cv
9.40996 285.783 9.04996 285.477 8.61796 285.207 cv
8.40196 285.081 7.98796 284.901 7.39396 284.649 cv
7.39396 284.379 li
f
5.59396 279.663 mo
5.59396 279.411 5.68396 279.213 5.84596 279.033 cv
6.02596 278.871 6.22396 278.781 6.47596 278.781 cv
6.72796 278.781 6.92596 278.871 7.10596 279.033 cv
7.28596 279.213 7.37596 279.411 7.37596 279.663 cv
7.37596 279.915 7.28596 280.113 7.10596 280.293 cv
6.92596 280.473 6.72796 280.563 6.47596 280.563 cv
6.22396 280.563 6.02596 280.491 5.84596 280.311 cv
5.68396 280.131 5.59396 279.915 5.59396 279.663 cv
9.80596 278.925 mo
16.268 278.925 li
16.772 278.925 17.114 278.889 17.276 278.817 cv
17.456 278.745 17.582 278.637 17.654 278.493 cv
17.726 278.349 17.762 278.097 17.762 277.719 cv
18.086 277.719 li
18.086 281.625 li
17.762 281.625 li
17.762 281.229 17.726 280.977 17.654 280.833 cv
17.582 280.707 17.456 280.599 17.276 280.527 cv
17.096 280.455 16.772 280.401 16.268 280.401 cv
13.172 280.401 li
12.308 280.401 11.732 280.437 11.462 280.473 cv
11.282 280.509 11.156 280.581 11.084 280.671 cv
11.012 280.761 10.958 280.887 10.958 281.031 cv
10.958 281.193 11.012 281.391 11.102 281.625 cv
10.778 281.751 li
9.80596 279.321 li
9.80596 278.925 li
f
9.80596 272.769 mo
9.80596 271.545 10.274 270.573 11.192 269.835 cv
11.984 269.223 12.902 268.899 13.91 268.899 cv
14.63 268.899 15.368 269.079 16.106 269.421 cv
16.844 269.763 17.402 270.231 17.762 270.843 cv
18.122 271.455 18.32 272.121 18.32 272.859 cv
18.32 274.083 17.852 275.037 16.88 275.757 cv
16.07 276.369 15.152 276.657 14.144 276.657 cv
13.406 276.657 12.668 276.477 11.948 276.117 cv
11.228 275.757 10.688 275.271 10.328 274.677 cv
9.98596 274.083 9.80596 273.453 9.80596 272.769 cv
10.364 273.039 mo
10.364 273.363 10.472 273.669 10.652 273.975 cv
10.832 274.299 11.156 274.551 11.624 274.731 cv
12.092 274.929 12.686 275.019 13.406 275.019 cv
14.576 275.019 15.584 274.803 16.43 274.335 cv
17.294 273.867 17.708 273.255 17.708 272.481 cv
17.708 271.923 17.474 271.455 17.006 271.077 cv
16.538 270.717 15.746 270.519 14.594 270.519 cv
13.172 270.519 12.038 270.843 11.21 271.455 cv
10.652 271.869 10.364 272.391 10.364 273.039 cv
f
11.498 265.353 mo
10.382 264.417 9.80596 263.517 9.80596 262.653 cv
9.80596 262.221 9.91396 261.861 10.13 261.537 cv
10.346 261.213 10.706 260.961 11.21 260.763 cv
11.57 260.655 12.11 260.583 12.83 260.583 cv
16.268 260.583 li
16.772 260.583 17.132 260.547 17.312 260.457 cv
17.456 260.403 17.582 260.295 17.654 260.151 cv
17.726 260.007 17.762 259.737 17.762 259.341 cv
18.086 259.341 li
18.086 263.337 li
17.762 263.337 li
17.762 263.157 li
17.762 262.797 17.708 262.527 17.6 262.383 cv
17.492 262.239 17.312 262.131 17.096 262.059 cv
17.006 262.041 16.736 262.023 16.268 262.023 cv
12.974 262.023 li
12.254 262.023 11.714 262.131 11.39 262.311 cv
11.066 262.509 10.886 262.833 10.886 263.283 cv
10.886 263.985 11.264 264.669 12.02 265.353 cv
16.268 265.353 li
16.808 265.353 17.15 265.335 17.276 265.263 cv
17.456 265.191 17.582 265.065 17.654 264.921 cv
17.726 264.777 17.762 264.489 17.762 264.057 cv
18.086 264.057 li
18.086 268.035 li
17.762 268.035 li
17.762 267.855 li
17.762 267.459 17.672 267.171 17.456 267.027 cv
17.258 266.883 16.862 266.811 16.268 266.811 cv
13.28 266.811 li
12.308 266.811 11.732 266.847 11.516 266.883 cv
11.3 266.919 11.156 266.991 11.084 267.081 cv
11.012 267.171 10.958 267.297 10.958 267.441 cv
10.958 267.621 11.012 267.819 11.102 268.035 cv
10.778 268.161 li
9.80596 265.731 li
9.80596 265.353 li
11.498 265.353 li
f
6.81796 251.007 mo
11.534 251.007 li
11.534 248.397 li
11.534 247.713 11.444 247.263 11.228 247.029 cv
10.958 246.723 10.49 246.561 9.80596 246.525 cv
9.80596 246.183 li
13.946 246.183 li
13.946 246.525 li
13.37 246.597 13.01 246.687 12.83 246.759 cv
12.632 246.867 12.47 247.047 12.344 247.281 cv
12.236 247.533 12.164 247.893 12.164 248.397 cv
12.164 251.007 li
16.106 251.007 li
16.646 251.007 16.97 250.989 17.078 250.935 cv
17.186 250.899 17.276 250.809 17.348 250.701 cv
17.42 250.593 17.438 250.359 17.438 250.017 cv
17.438 248.001 li
17.438 247.335 17.402 246.849 17.294 246.543 cv
17.204 246.237 17.024 245.949 16.736 245.661 cv
16.376 245.301 15.836 244.923 15.098 244.545 cv
15.098 244.185 li
18.086 245.211 li
18.086 254.391 li
17.762 254.391 li
17.762 253.977 li
17.762 253.707 17.708 253.437 17.564 253.185 cv
17.474 253.005 17.33 252.879 17.15 252.807 cv
16.97 252.735 16.574 252.699 15.98 252.699 cv
8.23996 252.699 li
7.48396 252.699 7.01596 252.771 6.83596 252.915 cv
6.61996 253.131 6.49396 253.491 6.49396 253.977 cv
6.49396 254.391 li
6.16996 254.391 li
6.16996 245.211 li
8.77996 245.085 li
8.77996 245.427 li
8.16796 245.553 7.73596 245.697 7.50196 245.841 cv
7.26796 245.985 7.08796 246.219 6.94396 246.507 cv
6.87196 246.741 6.81796 247.155 6.81796 247.731 cv
6.81796 251.007 li
f
9.80596 240.856 mo
11.606 240.856 li
10.418 240.19 9.80596 239.506 9.80596 238.786 cv
9.80596 238.462 9.91396 238.21 10.094 237.994 cv
10.292 237.778 10.526 237.67 10.778 237.67 cv
11.012 237.67 11.21 237.76 11.354 237.904 cv
11.516 238.048 11.588 238.228 11.588 238.444 cv
11.588 238.66 11.498 238.876 11.282 239.128 cv
11.084 239.38 10.976 239.578 10.976 239.686 cv
10.976 239.794 11.048 239.92 11.156 240.028 cv
11.408 240.298 11.804 240.568 12.344 240.856 cv
16.214 240.856 li
16.664 240.856 17.006 240.802 17.222 240.694 cv
17.384 240.622 17.51 240.478 17.618 240.28 cv
17.726 240.1 17.762 239.812 17.762 239.452 cv
18.086 239.452 li
18.086 243.574 li
17.762 243.574 li
17.762 243.178 17.708 242.872 17.582 242.656 cv
17.492 242.512 17.348 242.422 17.132 242.35 cv
17.024 242.314 16.736 242.296 16.268 242.296 cv
13.154 242.296 li
12.218 242.296 11.66 242.332 11.48 242.368 cv
11.3 242.404 11.174 242.476 11.084 242.584 cv
11.012 242.692 10.958 242.818 10.958 242.962 cv
10.958 243.142 11.012 243.358 11.102 243.574 cv
10.778 243.664 li
9.80596 241.216 li
9.80596 240.856 li
f
9.80596 234.862 mo
11.606 234.862 li
10.418 234.196 9.80596 233.512 9.80596 232.792 cv
9.80596 232.468 9.91396 232.216 10.094 232 cv
10.292 231.784 10.526 231.676 10.778 231.676 cv
11.012 231.676 11.21 231.766 11.354 231.91 cv
11.516 232.054 11.588 232.234 11.588 232.45 cv
11.588 232.666 11.498 232.882 11.282 233.134 cv
11.084 233.386 10.976 233.584 10.976 233.692 cv
10.976 233.8 11.048 233.926 11.156 234.034 cv
11.408 234.304 11.804 234.574 12.344 234.862 cv
16.214 234.862 li
16.664 234.862 17.006 234.808 17.222 234.7 cv
17.384 234.628 17.51 234.484 17.618 234.286 cv
17.726 234.106 17.762 233.818 17.762 233.458 cv
18.086 233.458 li
18.086 237.58 li
17.762 237.58 li
17.762 237.184 17.708 236.878 17.582 236.662 cv
17.492 236.518 17.348 236.428 17.132 236.356 cv
17.024 236.32 16.736 236.302 16.268 236.302 cv
13.154 236.302 li
12.218 236.302 11.66 236.338 11.48 236.374 cv
11.3 236.41 11.174 236.482 11.084 236.59 cv
11.012 236.698 10.958 236.824 10.958 236.968 cv
10.958 237.148 11.012 237.364 11.102 237.58 cv
10.778 237.67 li
9.80596 235.222 li
9.80596 234.862 li
f
9.80596 227.284 mo
9.80596 226.06 10.274 225.088 11.192 224.35 cv
11.984 223.738 12.902 223.414 13.91 223.414 cv
14.63 223.414 15.368 223.594 16.106 223.936 cv
16.844 224.278 17.402 224.746 17.762 225.358 cv
18.122 225.97 18.32 226.636 18.32 227.374 cv
18.32 228.598 17.852 229.552 16.88 230.272 cv
16.07 230.884 15.152 231.172 14.144 231.172 cv
13.406 231.172 12.668 230.992 11.948 230.632 cv
11.228 230.272 10.688 229.786 10.328 229.192 cv
9.98596 228.598 9.80596 227.968 9.80596 227.284 cv
10.364 227.554 mo
10.364 227.878 10.472 228.184 10.652 228.49 cv
10.832 228.814 11.156 229.066 11.624 229.246 cv
12.092 229.444 12.686 229.534 13.406 229.534 cv
14.576 229.534 15.584 229.318 16.43 228.85 cv
17.294 228.382 17.708 227.77 17.708 226.996 cv
17.708 226.438 17.474 225.97 17.006 225.592 cv
16.538 225.232 15.746 225.034 14.594 225.034 cv
13.172 225.034 12.038 225.358 11.21 225.97 cv
10.652 226.384 10.364 226.906 10.364 227.554 cv
f
9.80596 219.868 mo
11.606 219.868 li
10.418 219.202 9.80596 218.518 9.80596 217.798 cv
9.80596 217.474 9.91396 217.222 10.094 217.006 cv
10.292 216.79 10.526 216.682 10.778 216.682 cv
11.012 216.682 11.21 216.772 11.354 216.916 cv
11.516 217.06 11.588 217.24 11.588 217.456 cv
11.588 217.672 11.498 217.888 11.282 218.14 cv
11.084 218.392 10.976 218.59 10.976 218.698 cv
10.976 218.806 11.048 218.932 11.156 219.04 cv
11.408 219.31 11.804 219.58 12.344 219.868 cv
16.214 219.868 li
16.664 219.868 17.006 219.814 17.222 219.706 cv
17.384 219.634 17.51 219.49 17.618 219.292 cv
17.726 219.112 17.762 218.824 17.762 218.464 cv
18.086 218.464 li
18.086 222.586 li
17.762 222.586 li
17.762 222.19 17.708 221.884 17.582 221.668 cv
17.492 221.524 17.348 221.434 17.132 221.362 cv
17.024 221.326 16.736 221.308 16.268 221.308 cv
13.154 221.308 li
12.218 221.308 11.66 221.344 11.48 221.38 cv
11.3 221.416 11.174 221.488 11.084 221.596 cv
11.012 221.704 10.958 221.83 10.958 221.974 cv
10.958 222.154 11.012 222.37 11.102 222.586 cv
10.778 222.676 li
9.80596 220.228 li
9.80596 219.868 li
f
21.596 211.192 mo
21.92 211.192 li
21.47 212.092 20.948 212.83 20.354 213.406 cv
19.49 214.27 18.5 214.918 17.366 215.368 cv
16.214 215.836 15.026 216.052 13.766 216.052 cv
11.966 216.052 10.31 215.62 8.79796 214.72 cv
7.30396 213.82 6.24196 212.65 5.59396 211.192 cv
5.95396 211.192 li
6.34996 211.93 6.90796 212.524 7.59196 212.992 cv
8.29396 213.46 9.17596 213.802 10.22 214.018 cv
11.282 214.252 12.398 214.36 13.55 214.36 cv
14.81 214.36 15.944 214.27 16.952 214.072 cv
17.762 213.928 18.392 213.73 18.878 213.514 cv
19.364 213.298 19.832 213.01 20.3 212.65 cv
20.75 212.29 21.182 211.804 21.596 211.192 cv
f
11.516 207.844 mo
10.94 207.268 10.598 206.908 10.508 206.8 cv
10.292 206.548 10.112 206.26 9.98596 205.954 cv
9.87796 205.666 9.80596 205.36 9.80596 205.054 cv
9.80596 204.55 9.94996 204.118 10.238 203.758 cv
10.526 203.398 10.958 203.146 11.516 203.02 cv
10.814 202.426 10.346 201.922 10.13 201.49 cv
9.91396 201.076 9.80596 200.644 9.80596 200.212 cv
9.80596 199.78 9.91396 199.402 10.13 199.078 cv
10.346 198.754 10.706 198.484 11.21 198.286 cv
11.552 198.16 12.092 198.088 12.812 198.088 cv
16.268 198.088 li
16.772 198.088 17.132 198.052 17.312 197.98 cv
17.438 197.926 17.546 197.818 17.636 197.656 cv
17.726 197.494 17.762 197.242 17.762 196.882 cv
18.086 196.882 li
18.086 200.842 li
17.762 200.842 li
17.762 200.68 li
17.762 200.338 17.708 200.068 17.564 199.87 cv
17.474 199.744 17.33 199.654 17.114 199.582 cv
17.024 199.564 16.736 199.546 16.268 199.546 cv
12.812 199.546 li
12.164 199.546 11.696 199.636 11.408 199.78 cv
11.048 200.014 10.85 200.374 10.85 200.878 cv
10.85 201.202 10.94 201.508 11.084 201.814 cv
11.246 202.138 11.534 202.516 11.948 202.948 cv
12.056 202.966 li
12.434 202.948 li
16.268 202.948 li
16.826 202.948 17.168 202.93 17.294 202.858 cv
17.438 202.804 17.546 202.696 17.636 202.516 cv
17.726 202.354 17.762 202.066 17.762 201.652 cv
18.086 201.652 li
18.086 205.72 li
17.762 205.72 li
17.762 205.288 17.726 204.982 17.618 204.802 cv
17.51 204.64 17.348 204.514 17.132 204.442 cv
17.042 204.424 16.754 204.406 16.268 204.406 cv
12.812 204.406 li
12.164 204.406 11.678 204.514 11.39 204.694 cv
11.03 204.964 10.832 205.324 10.832 205.774 cv
10.832 206.098 10.922 206.422 11.084 206.71 cv
11.336 207.214 11.624 207.592 11.948 207.844 cv
16.268 207.844 li
16.808 207.844 17.15 207.808 17.294 207.736 cv
17.456 207.664 17.582 207.556 17.654 207.412 cv
17.726 207.268 17.762 206.98 17.762 206.53 cv
18.086 206.53 li
18.086 210.508 li
17.762 210.508 li
17.762 210.148 17.726 209.896 17.654 209.752 cv
17.582 209.608 17.456 209.482 17.276 209.41 cv
17.096 209.338 16.772 209.302 16.268 209.302 cv
13.19 209.302 li
12.308 209.302 11.732 209.338 11.48 209.374 cv
11.3 209.41 11.156 209.482 11.084 209.572 cv
11.012 209.662 10.958 209.788 10.958 209.932 cv
10.958 210.094 11.012 210.292 11.102 210.508 cv
10.778 210.652 li
9.80596 208.222 li
9.80596 207.844 li
11.516 207.844 li
f
5.95396 196.396 mo
5.59396 196.396 li
6.02596 195.496 6.54796 194.758 7.14196 194.164 cv
8.00596 193.336 8.99596 192.688 10.148 192.22 cv
11.3 191.77 12.506 191.536 13.748 191.536 cv
15.584 191.536 17.24 191.986 18.716 192.886 cv
20.192 193.786 21.272 194.956 21.92 196.396 cv
21.596 196.396 li
21.182 195.676 20.624 195.082 19.94 194.614 cv
19.256 194.146 18.374 193.804 17.33 193.57 cv
16.286 193.354 15.17 193.228 14.018 193.228 cv
12.776 193.228 11.642 193.336 10.598 193.516 cv
9.80596 193.678 9.15796 193.858 8.67196 194.074 cv
8.18596 194.29 7.71796 194.596 7.24996 194.956 cv
6.79996 195.316 6.36796 195.802 5.95396 196.396 cv
f
gsave
64.4297 308.833 mo
357.048 308.833 li
357.048 200.234 li
64.4297 200.234 li
64.4297 308.833 li
clp
2 lw
[7.4 3.2 ] 0 dsh
64.4297 308.834 mo
66.8682 308.736 li
69.3067 308.676 li
71.7452 308.353 li
74.1837 308.285 li
76.6221 308.141 li
79.0606 307.981 li
81.4991 307.845 li
83.9376 307.731 li
86.3761 307.514 li
88.8146 307.452 li
91.2531 307.34 li
93.6915 307.3 li
96.13 307.145 li
98.5685 307.039 li
101.007 306.892 li
103.445 306.808 li
105.884 306.664 li
108.322 306.545 li
110.761 306.262 li
113.199 306.121 li
115.638 305.986 li
118.076 305.904 li
120.515 305.774 li
122.953 305.611 li
125.392 305.41 li
127.83 304.321 li
130.269 304.517 li
132.707 304.568 li
135.146 304.704 li
137.584 304.81 li
140.023 304.902 li
142.461 304.913 li
144.9 305.035 li
147.338 305.106 li
149.777 305.214 li
152.215 305.228 li
154.654 305.242 li
157.092 305.329 li
159.531 305.372 li
161.969 305.345 li
164.408 305.307 li
166.846 305.288 li
169.285 305.258 li
171.723 305.079 li
174.162 304.929 li
176.6 304.791 li
179.039 304.696 li
181.477 304.587 li
183.916 304.435 li
186.354 304.294 li
188.792 304.101 li
191.231 303.955 li
193.669 303.868 li
196.108 303.721 li
198.546 303.604 li
200.985 303.433 li
203.423 303.295 li
205.862 303.1 li
208.3 302.85 li
210.739 302.69 li
213.177 302.505 li
215.616 302.293 li
218.054 302.117 li
220.493 302.019 li
222.931 301.761 li
225.37 301.457 li
227.808 301.063 li
230.247 300.729 li
232.685 300.325 li
235.124 300.053 li
237.562 299.703 li
240.001 299.38 li
242.439 299.038 li
244.878 298.766 li
247.316 298.427 li
249.755 298.196 li
252.193 297.838 li
254.632 297.52 li
257.07 297.162 li
259.509 296.795 li
261.947 296.456 li
264.386 296.16 li
266.824 295.85 li
269.263 295.639 li
271.701 295.359 li
274.139 295.052 li
276.578 294.661 li
279.016 294.303 li
281.455 293.733 li
283.893 292.421 li
286.332 292.476 li
288.77 292.497 li
291.209 292.462 li
293.647 292.451 li
296.086 292.465 li
298.524 292.421 li
300.963 292.373 li
303.401 292.432 li
305.84 292.31 li
308.278 292.34 li
310.717 292.242 li
313.155 292.174 li
315.594 292.096 li
318.032 292.028 li
320.471 291.93 li
322.909 291.878 li
325.348 291.71 li
327.786 291.65 li
330.225 291.561 li
332.663 291.46 li
335.102 291.354 li
337.54 291.219 li
339.979 291.208 li
@
grestore
gsave
64.4297 308.833 mo
357.048 308.833 li
357.048 200.234 li
64.4297 200.234 li
64.4297 308.833 li
clp
2 lw
2 lc
64.4297 206.918 mo
66.8682 206.869 li
69.3067 206.829 li
71.7452 206.582 li
74.1837 206.582 li
76.6221 206.505 li
79.0606 206.367 li
81.4991 206.329 li
83.9376 206.223 li
86.3761 206.134 li
88.8146 206.093 li
91.2531 206.033 li
93.6915 205.979 li
96.13 205.908 li
98.5685 205.838 li
101.007 205.702 li
103.445 205.737 li
105.884 205.626 li
108.322 205.525 li
110.761 205.398 li
113.199 205.308 li
115.638 205.183 li
118.076 205.14 li
120.515 205.039 li
122.953 204.936 li
125.392 204.844 li
127.83 203.888 li
130.269 204.507 li
132.707 204.635 li
135.146 204.608 li
137.584 204.572 li
140.023 204.507 li
142.461 204.366 li
144.9 308.834 li
147.338 308.657 li
149.777 308.424 li
152.215 308.38 li
154.654 308.258 li
157.092 308.025 li
159.531 307.821 li
161.969 307.596 li
164.408 307.31 li
166.846 307.12 li
169.285 306.882 li
171.723 306.507 li
174.162 306.113 li
176.6 305.901 li
179.039 305.592 li
181.477 305.367 li
183.916 305.136 li
186.354 304.935 li
188.792 304.631 li
191.231 304.403 li
193.669 304.232 li
196.108 304.061 li
198.546 303.846 li
200.985 303.656 li
203.423 303.436 li
205.862 303.184 li
208.3 302.882 li
210.739 302.646 li
213.177 302.451 li
215.616 302.233 li
218.054 302.014 li
220.493 301.851 li
222.931 301.549 li
225.37 301.234 li
227.808 300.808 li
230.247 300.469 li
232.685 300.023 li
235.124 299.749 li
237.562 299.366 li
240.001 299.038 li
242.439 298.666 li
244.878 298.392 li
247.316 298.042 li
249.755 297.792 li
252.193 297.414 li
254.632 297.086 li
257.07 296.736 li
259.509 296.326 li
261.947 296 li
264.386 295.707 li
266.824 295.375 li
269.263 295.155 li
271.701 294.838 li
274.139 294.545 li
276.578 294.151 li
279.016 293.768 li
281.455 293.211 li
283.893 291.843 li
286.332 291.887 li
288.77 308.834 li
291.209 308.448 li
293.647 308.111 li
296.086 307.685 li
298.524 307.384 li
300.963 307.015 li
303.401 306.721 li
305.84 306.377 li
308.278 306.124 li
310.717 305.763 li
313.155 305.448 li
315.594 305.005 li
318.032 304.704 li
320.471 304.313 li
322.909 303.919 li
325.348 303.556 li
327.786 303.257 li
330.225 302.904 li
332.663 302.641 li
335.102 302.301 li
337.54 302.035 li
339.979 301.845 li
@
grestore
2 lc
0 lj
64.4297 308.834 mo
64.4297 200.234 li
@
357.048 308.834 mo
357.048 200.234 li
@
64.4297 308.834 mo
357.048 308.834 li
@
64.4297 200.234 mo
357.048 200.234 li
@
204.871 198.446 mo
204.871 198.835 li
203.791 198.295 202.905 197.668 202.214 196.955 cv
201.177 195.919 200.399 194.731 199.859 193.37 cv
199.298 191.987 199.039 190.562 199.039 189.05 cv
199.039 186.89 199.557 184.903 200.637 183.088 cv
201.717 181.295 203.121 180.021 204.871 179.243 cv
204.871 179.675 li
203.985 180.151 203.272 180.82 202.711 181.641 cv
202.149 182.483 201.739 183.542 201.479 184.795 cv
201.199 186.069 201.069 187.408 201.069 188.791 cv
201.069 190.303 201.177 191.663 201.415 192.873 cv
201.587 193.845 201.825 194.601 202.084 195.184 cv
202.343 195.767 202.689 196.329 203.121 196.891 cv
203.553 197.431 204.136 197.949 204.871 198.446 cv
f
208.672 186.242 mo
209.601 184.946 210.616 184.298 211.696 184.298 cv
212.69 184.298 213.554 184.73 214.288 185.572 cv
215.022 186.415 215.39 187.559 215.39 189.028 cv
215.39 190.756 214.806 192.139 213.683 193.175 cv
212.69 194.083 211.61 194.515 210.422 194.515 cv
209.86 194.515 209.277 194.407 208.694 194.212 cv
208.11 194.018 207.527 193.715 206.922 193.305 cv
206.922 183.304 li
206.922 182.203 206.879 181.533 206.836 181.274 cv
206.793 181.015 206.706 180.842 206.598 180.755 cv
206.469 180.669 206.339 180.626 206.188 180.626 cv
205.972 180.626 205.734 180.691 205.432 180.777 cv
205.324 180.41 li
208.197 179.243 li
208.672 179.243 li
208.672 186.242 li
208.672 186.911 mo
208.672 192.7 li
209.018 193.046 209.385 193.327 209.774 193.499 cv
210.162 193.672 210.551 193.759 210.962 193.759 cv
211.588 193.759 212.171 193.413 212.733 192.7 cv
213.294 192.009 213.575 190.972 213.575 189.633 cv
213.575 188.402 213.294 187.451 212.733 186.782 cv
212.171 186.134 211.545 185.788 210.854 185.788 cv
210.465 185.788 210.098 185.896 209.752 186.069 cv
209.45 186.22 209.104 186.501 208.672 186.911 cv
f
216.621 179.675 mo
216.621 179.243 li
217.701 179.762 218.586 180.388 219.299 181.101 cv
220.293 182.138 221.07 183.326 221.632 184.708 cv
222.172 186.091 222.453 187.538 222.453 189.028 cv
222.453 191.231 221.913 193.219 220.833 194.99 cv
219.753 196.761 218.349 198.057 216.621 198.835 cv
216.621 198.446 li
217.485 197.949 218.198 197.279 218.759 196.459 cv
219.321 195.638 219.731 194.579 220.012 193.327 cv
220.271 192.074 220.422 190.735 220.422 189.352 cv
220.422 187.862 220.293 186.501 220.077 185.248 cv
219.882 184.298 219.666 183.52 219.407 182.937 cv
219.148 182.354 218.781 181.792 218.349 181.231 cv
217.917 180.691 217.334 180.172 216.621 179.675 cv
f
344.448 265.021 mo
308.678 265.021 li
308.678 254.934 li
347.548 254.934 li
347.548 261.921 li
347.546 263.045 347.271 263.792 346.794 264.268 cv
346.319 264.744 345.571 265.02 344.448 265.021 cv
307.878 265.021 mo
259.909 265.021 li
259.909 254.934 li
307.878 254.934 li
307.878 265.021 li
259.109 265.021 mo
211.139 265.021 li
211.139 254.934 li
259.109 254.934 li
259.109 265.021 li
210.339 265.021 mo
207.364 265.021 li
206.24 265.02 205.493 264.744 205.017 264.268 cv
204.541 263.792 204.265 263.045 204.264 261.921 cv
204.264 254.934 li
210.339 254.934 li
210.339 265.021 li
1 /1 /CSD get_res sepcs
0 sep
f
211.139 265.021 mo
210.339 265.021 li
210.339 254.934 li
211.139 254.934 li
211.139 265.021 li
1 /1 /CSD get_res sepcs
.0627451 sep
f
259.909 265.021 mo
259.109 265.021 li
259.109 254.934 li
259.909 254.934 li
259.909 265.021 li
f
308.678 265.021 mo
307.878 265.021 li
307.878 254.934 li
308.678 254.934 li
308.678 265.021 li
f
347.548 254.134 mo
308.678 254.134 li
308.678 227.784 li
347.548 227.784 li
347.548 254.134 li
307.878 254.134 mo
259.909 254.134 li
259.909 227.784 li
307.878 227.784 li
307.878 254.134 li
259.109 254.134 mo
211.139 254.134 li
211.139 227.784 li
259.109 227.784 li
259.109 254.134 li
210.339 254.134 mo
204.264 254.134 li
204.264 227.784 li
210.339 227.784 li
210.339 254.134 li
1 /1 /CSD get_res sepcs
0 sep
f
211.139 254.134 mo
210.339 254.134 li
210.339 227.784 li
211.139 227.784 li
211.139 254.134 li
1 /1 /CSD get_res sepcs
.0627451 sep
f
259.909 254.134 mo
259.109 254.134 li
259.109 227.784 li
259.909 227.784 li
259.909 254.134 li
f
308.678 254.134 mo
307.878 254.134 li
307.878 227.784 li
308.678 227.784 li
308.678 254.134 li
f
347.548 226.984 mo
308.678 226.984 li
308.678 209.734 li
344.448 209.734 li
345.571 209.736 346.319 210.011 346.794 210.487 cv
347.271 210.963 347.546 211.711 347.548 212.834 cv
347.548 226.984 li
307.878 226.984 mo
259.909 226.984 li
259.909 209.734 li
307.878 209.734 li
307.878 226.984 li
259.109 226.984 mo
211.139 226.984 li
211.139 209.734 li
259.109 209.734 li
259.109 226.984 li
210.339 226.984 mo
204.264 226.984 li
204.264 212.834 li
204.265 211.711 204.541 210.963 205.017 210.487 cv
205.493 210.011 206.24 209.736 207.364 209.734 cv
210.339 209.734 li
210.339 226.984 li
1 /1 /CSD get_res sepcs
0 sep
f
211.139 226.984 mo
210.339 226.984 li
210.339 209.734 li
211.139 209.734 li
211.139 226.984 li
1 /1 /CSD get_res sepcs
.0627451 sep
f
259.909 226.984 mo
259.109 226.984 li
259.109 209.734 li
259.909 209.734 li
259.909 226.984 li
f
308.678 226.984 mo
307.878 226.984 li
307.878 209.734 li
308.678 209.734 li
308.678 226.984 li
f
347.548 254.934 mo
308.678 254.934 li
307.878 254.934 li
259.909 254.934 li
259.109 254.934 li
211.139 254.934 li
210.339 254.934 li
204.264 254.934 li
204.264 254.134 li
210.339 254.134 li
211.139 254.134 li
259.109 254.134 li
259.909 254.134 li
307.878 254.134 li
308.678 254.134 li
347.548 254.134 li
347.548 254.934 li
f
347.548 227.784 mo
308.678 227.784 li
307.878 227.784 li
259.909 227.784 li
259.109 227.784 li
211.139 227.784 li
210.339 227.784 li
204.264 227.784 li
204.264 226.984 li
210.339 226.984 li
211.139 226.984 li
259.109 226.984 li
259.909 226.984 li
307.878 226.984 li
308.678 226.984 li
347.548 226.984 li
347.548 227.784 li
f
344.459 266.021 mo
344.455 266.021 344.452 266.021 344.448 266.021 cv
308.678 266.021 li
308.678 265.021 li
344.448 265.021 li
345.571 265.02 346.319 264.744 346.794 264.268 cv
347.271 263.792 347.546 263.045 347.548 261.921 cv
347.548 254.934 li
348.548 254.934 li
348.548 261.921 li
348.55 263.198 348.225 264.251 347.501 264.975 cv
346.779 265.697 345.731 266.021 344.459 266.021 cv
207.353 266.021 mo
206.081 266.021 205.032 265.697 204.31 264.975 cv
203.586 264.251 203.262 263.198 203.264 261.921 cv
203.264 254.934 li
204.264 254.934 li
204.264 261.921 li
204.265 263.045 204.541 263.792 205.017 264.268 cv
205.493 264.744 206.24 265.02 207.364 265.021 cv
207.364 265.021 li
210.339 265.021 li
210.339 266.021 li
207.364 266.021 li
207.36 266.021 207.356 266.021 207.353 266.021 cv
259.109 266.021 mo
211.139 266.021 li
211.139 265.021 li
259.109 265.021 li
259.109 266.021 li
1 /1 /CSD get_res sepcs
.160784 sep
f
211.139 266.021 mo
210.339 266.021 li
210.339 265.021 li
211.139 265.021 li
211.139 266.021 li
1 /1 /CSD get_res sepcs
.223529 sep
f
307.878 266.021 mo
259.909 266.021 li
259.909 265.021 li
307.878 265.021 li
307.878 266.021 li
1 /1 /CSD get_res sepcs
.160784 sep
f
259.909 266.021 mo
259.109 266.021 li
259.109 265.021 li
259.909 265.021 li
259.909 266.021 li
1 /1 /CSD get_res sepcs
.223529 sep
f
308.678 266.021 mo
307.878 266.021 li
307.878 265.021 li
308.678 265.021 li
308.678 266.021 li
f
348.548 254.134 mo
347.548 254.134 li
347.548 227.784 li
348.548 227.784 li
348.548 254.134 li
204.264 254.134 mo
203.264 254.134 li
203.264 227.784 li
204.264 227.784 li
204.264 254.134 li
348.548 226.984 mo
347.548 226.984 li
347.548 212.834 li
347.546 211.711 347.271 210.963 346.794 210.487 cv
346.319 210.011 345.571 209.736 344.448 209.734 cv
308.678 209.734 li
308.678 208.734 li
344.448 208.734 li
344.451 208.734 344.455 208.734 344.458 208.734 cv
345.73 208.734 346.779 209.058 347.501 209.78 cv
348.225 210.504 348.55 211.557 348.548 212.834 cv
348.548 226.984 li
204.264 226.984 mo
203.264 226.984 li
203.264 212.834 li
203.262 211.557 203.586 210.504 204.31 209.78 cv
205.032 209.058 206.081 208.734 207.353 208.734 cv
207.357 208.734 207.36 208.734 207.364 208.734 cv
210.339 208.734 li
210.339 209.734 li
207.364 209.734 li
206.24 209.736 205.493 210.011 205.017 210.487 cv
204.541 210.963 204.265 211.711 204.264 212.834 cv
204.264 226.984 li
259.109 209.734 mo
211.139 209.734 li
211.139 208.734 li
259.109 208.734 li
259.109 209.734 li
1 /1 /CSD get_res sepcs
.160784 sep
f
211.139 209.734 mo
210.339 209.734 li
210.339 208.734 li
211.139 208.734 li
211.139 209.734 li
1 /1 /CSD get_res sepcs
.223529 sep
f
307.878 209.734 mo
259.909 209.734 li
259.909 208.734 li
307.878 208.734 li
307.878 209.734 li
1 /1 /CSD get_res sepcs
.160784 sep
f
259.909 209.734 mo
259.109 209.734 li
259.109 208.734 li
259.909 208.734 li
259.909 209.734 li
1 /1 /CSD get_res sepcs
.223529 sep
f
308.678 209.734 mo
307.878 209.734 li
307.878 208.734 li
308.678 208.734 li
308.678 209.734 li
f
348.548 254.934 mo
347.548 254.934 li
347.548 254.134 li
348.548 254.134 li
348.548 254.934 li
204.264 254.934 mo
203.264 254.934 li
203.264 254.134 li
204.264 254.134 li
204.264 254.934 li
f
348.548 227.784 mo
347.548 227.784 li
347.548 226.984 li
348.548 226.984 li
348.548 227.784 li
204.264 227.784 mo
203.264 227.784 li
203.264 226.984 li
204.264 226.984 li
204.264 227.784 li
f
2 lw
0 lc
1 lj
[7.4 3.2 ] 0 dsh
210.964 222.734 mo
246.964 222.734 li
1 /0 /CSD get_res sepcs
1 sep
@
269.68 222.95 mo
270.508 223.13 271.12 223.418 271.534 223.796 cv
272.092 224.336 272.38 225.002 272.38 225.776 cv
272.38 226.37 272.182 226.928 271.822 227.468 cv
271.444 228.008 270.922 228.404 270.274 228.656 cv
269.626 228.908 268.618 229.034 267.286 229.034 cv
261.67 229.034 li
261.67 228.71 li
262.12 228.71 li
262.606 228.71 262.966 228.566 263.182 228.242 cv
263.308 228.026 263.38 227.594 263.38 226.928 cv
263.38 219.224 li
263.38 218.504 263.29 218.036 263.128 217.82 cv
262.894 217.568 262.552 217.442 262.12 217.442 cv
261.67 217.442 li
261.67 217.118 li
266.818 217.118 li
267.772 217.118 268.546 217.19 269.122 217.334 cv
269.986 217.55 270.67 217.91 271.138 218.45 cv
271.606 218.99 271.84 219.62 271.84 220.304 cv
271.84 220.898 271.642 221.438 271.282 221.906 cv
270.922 222.374 270.382 222.734 269.68 222.95 cv
265.072 222.482 mo
265.288 222.518 265.522 222.554 265.81 222.572 cv
266.098 222.608 266.404 222.608 266.728 222.608 cv
267.592 222.608 268.222 222.518 268.654 222.338 cv
269.086 222.158 269.41 221.87 269.644 221.474 cv
269.86 221.096 269.986 220.682 269.986 220.232 cv
269.986 219.548 269.698 218.954 269.14 218.45 cv
268.564 217.964 267.736 217.712 266.656 217.712 cv
266.062 217.712 265.54 217.784 265.072 217.892 cv
265.072 222.482 li
265.072 228.17 mo
265.756 228.332 266.422 228.404 267.088 228.404 cv
268.132 228.404 268.942 228.17 269.5 227.702 cv
270.058 227.234 270.346 226.64 270.346 225.92 cv
270.346 225.47 270.22 225.02 269.968 224.588 cv
269.716 224.156 269.302 223.832 268.726 223.58 cv
268.15 223.328 267.448 223.202 266.62 223.202 cv
266.26 223.202 265.936 223.22 265.684 223.22 cv
265.432 223.238 265.216 223.256 265.072 223.292 cv
265.072 228.17 li
f
278.5 227.882 mo
277.672 228.53 277.15 228.89 276.934 228.98 cv
276.61 229.106 276.286 229.178 275.926 229.178 cv
275.368 229.178 274.918 228.998 274.558 228.62 cv
274.198 228.26 274.018 227.756 274.018 227.126 cv
274.018 226.73 274.09 226.388 274.27 226.1 cv
274.504 225.704 274.918 225.344 275.512 224.984 cv
276.106 224.642 277.096 224.21 278.5 223.706 cv
278.5 223.382 li
278.5 222.59 278.356 222.032 278.104 221.726 cv
277.852 221.438 277.474 221.276 277.006 221.276 cv
276.628 221.276 276.34 221.384 276.124 221.582 cv
275.89 221.798 275.782 222.014 275.782 222.266 cv
275.8 222.77 li
275.8 223.058 275.728 223.256 275.584 223.4 cv
275.44 223.544 275.278 223.616 275.062 223.616 cv
274.846 223.616 274.666 223.544 274.522 223.4 cv
274.378 223.256 274.324 223.04 274.324 222.77 cv
274.324 222.266 274.576 221.816 275.098 221.384 cv
275.602 220.97 276.322 220.754 277.258 220.754 cv
277.978 220.754 278.554 220.88 279.022 221.114 cv
279.364 221.294 279.616 221.582 279.778 221.96 cv
279.886 222.212 279.94 222.734 279.94 223.508 cv
279.94 226.244 li
279.94 227.018 279.94 227.486 279.976 227.648 cv
280.012 227.828 280.048 227.936 280.12 227.99 cv
280.192 228.062 280.264 228.08 280.372 228.08 cv
280.606 228.026 li
280.732 227.954 280.966 227.738 281.326 227.378 cv
281.326 227.882 li
280.66 228.746 280.03 229.178 279.436 229.178 cv
279.148 229.178 278.914 229.07 278.752 228.89 cv
278.572 228.71 278.5 228.368 278.5 227.882 cv
278.5 227.306 mo
278.5 224.228 li
277.6 224.588 277.024 224.84 276.772 224.984 cv
276.304 225.236 275.98 225.506 275.782 225.794 cv
275.584 226.082 275.494 226.388 275.494 226.712 cv
275.494 227.144 275.62 227.486 275.872 227.774 cv
276.124 228.062 276.412 228.188 276.736 228.188 cv
277.168 228.188 277.762 227.9 278.5 227.306 cv
f
287.122 220.754 mo
287.122 223.49 li
286.834 223.49 li
286.618 222.626 286.33 222.05 285.988 221.726 cv
285.628 221.42 285.196 221.258 284.656 221.258 cv
284.224 221.258 283.9 221.366 283.648 221.582 cv
283.396 221.798 283.27 222.05 283.27 222.302 cv
283.27 222.644 283.36 222.932 283.558 223.148 cv
283.738 223.4 284.098 223.652 284.674 223.922 cv
285.952 224.534 li
287.14 225.128 287.734 225.902 287.734 226.838 cv
287.734 227.576 287.446 228.17 286.906 228.602 cv
286.348 229.034 285.736 229.268 285.052 229.268 cv
284.548 229.268 283.99 229.178 283.36 229.016 cv
283.162 228.962 283 228.926 282.874 228.926 cv
282.73 228.926 282.64 228.998 282.568 229.142 cv
282.28 229.142 li
282.28 226.28 li
282.568 226.28 li
282.73 227.108 283.036 227.738 283.504 228.152 cv
283.972 228.566 284.494 228.764 285.07 228.764 cv
285.466 228.764 285.79 228.656 286.042 228.404 cv
286.294 228.17 286.438 227.882 286.438 227.54 cv
286.438 227.144 286.294 226.82 286.006 226.532 cv
285.718 226.262 285.142 225.92 284.296 225.488 cv
283.45 225.074 282.892 224.696 282.64 224.336 cv
282.37 224.012 282.244 223.58 282.244 223.076 cv
282.244 222.428 282.46 221.87 282.928 221.42 cv
283.378 220.988 283.972 220.754 284.692 220.754 cv
284.998 220.754 285.376 220.826 285.844 220.952 cv
286.132 221.042 286.33 221.078 286.438 221.078 cv
286.528 221.078 286.6 221.06 286.654 221.024 cv
286.69 220.988 286.762 220.898 286.834 220.754 cv
287.122 220.754 li
f
290.974 216.542 mo
291.226 216.542 291.424 216.632 291.604 216.794 cv
291.766 216.974 291.856 217.172 291.856 217.424 cv
291.856 217.676 291.766 217.874 291.604 218.054 cv
291.424 218.234 291.226 218.324 290.974 218.324 cv
290.722 218.324 290.524 218.234 290.344 218.054 cv
290.164 217.874 290.074 217.676 290.074 217.424 cv
290.074 217.172 290.146 216.974 290.326 216.794 cv
290.506 216.632 290.722 216.542 290.974 216.542 cv
291.712 220.754 mo
291.712 227.216 li
291.712 227.72 291.748 228.062 291.82 228.224 cv
291.892 228.404 292 228.53 292.144 228.602 cv
292.288 228.674 292.54 228.71 292.918 228.71 cv
292.918 229.034 li
289.012 229.034 li
289.012 228.71 li
289.408 228.71 289.66 228.674 289.804 228.602 cv
289.93 228.53 290.038 228.404 290.11 228.224 cv
290.182 228.044 290.236 227.72 290.236 227.216 cv
290.236 224.12 li
290.236 223.256 290.2 222.68 290.164 222.41 cv
290.128 222.23 290.056 222.104 289.966 222.032 cv
289.876 221.96 289.75 221.906 289.606 221.906 cv
289.444 221.906 289.246 221.96 289.012 222.05 cv
288.886 221.726 li
291.316 220.754 li
291.712 220.754 li
f
300.766 225.974 mo
300.55 227.036 300.118 227.846 299.488 228.422 cv
298.858 228.998 298.156 229.268 297.4 229.268 cv
296.464 229.268 295.672 228.89 294.988 228.134 cv
294.304 227.378 293.98 226.334 293.98 225.02 cv
293.98 223.76 294.358 222.734 295.114 221.942 cv
295.87 221.15 296.77 220.754 297.832 220.754 cv
298.606 220.754 299.254 220.97 299.758 221.384 cv
300.262 221.798 300.532 222.23 300.532 222.68 cv
300.532 222.914 300.46 223.094 300.316 223.22 cv
300.172 223.364 299.974 223.418 299.722 223.418 cv
299.362 223.418 299.11 223.31 298.948 223.094 cv
298.84 222.986 298.768 222.752 298.732 222.392 cv
298.696 222.05 298.588 221.78 298.39 221.6 cv
298.174 221.42 297.886 221.33 297.526 221.33 cv
296.95 221.33 296.482 221.546 296.122 221.978 cv
295.636 222.554 295.402 223.328 295.402 224.264 cv
295.402 225.236 295.636 226.082 296.104 226.802 cv
296.572 227.54 297.22 227.9 298.03 227.9 cv
298.606 227.9 299.11 227.72 299.578 227.324 cv
299.902 227.054 300.208 226.568 300.514 225.848 cv
300.766 225.974 li
f
309.55 223.454 mo
309.55 226.928 li
309.55 227.684 309.622 228.134 309.802 228.314 cv
310.018 228.584 310.342 228.71 310.81 228.71 cv
311.26 228.71 li
311.26 229.034 li
306.166 229.034 li
306.166 228.71 li
306.616 228.71 li
307.102 228.71 307.462 228.548 307.696 228.224 cv
307.804 228.044 307.858 227.612 307.858 226.928 cv
307.858 219.224 li
307.858 218.486 307.768 218.018 307.624 217.82 cv
307.39 217.568 307.048 217.442 306.616 217.442 cv
306.166 217.442 li
306.166 217.118 li
310.522 217.118 li
311.584 217.118 312.43 217.244 313.042 217.46 cv
313.654 217.676 314.176 218.054 314.608 218.558 cv
315.022 219.08 315.238 219.692 315.238 220.412 cv
315.238 221.384 314.914 222.176 314.266 222.788 cv
313.618 223.4 312.718 223.706 311.548 223.706 cv
311.26 223.706 310.936 223.688 310.612 223.652 cv
310.288 223.616 309.928 223.544 309.55 223.454 cv
309.55 222.95 mo
309.856 223.022 310.126 223.058 310.378 223.094 cv
310.612 223.13 310.81 223.13 310.99 223.13 cv
311.602 223.13 312.124 222.896 312.574 222.428 cv
313.006 221.96 313.24 221.348 313.24 220.592 cv
313.24 220.088 313.132 219.602 312.916 219.152 cv
312.7 218.72 312.412 218.378 312.016 218.162 cv
311.62 217.946 311.188 217.82 310.702 217.82 cv
310.396 217.82 310.018 217.892 309.55 218 cv
309.55 222.95 li
f
316.174 229.034 mo
316.174 228.71 li
316.624 228.71 li
317.128 228.71 317.488 228.548 317.704 228.224 cv
317.812 228.044 317.884 227.612 317.884 226.928 cv
317.884 219.224 li
317.884 218.486 317.794 218.018 317.65 217.82 cv
317.416 217.568 317.074 217.442 316.624 217.442 cv
316.174 217.442 li
316.174 217.118 li
321.034 217.118 li
322.798 217.118 324.148 217.334 325.084 217.73 cv
326.02 218.126 326.758 218.81 327.334 219.746 cv
327.892 220.682 328.18 221.78 328.18 223.022 cv
328.18 224.678 327.676 226.064 326.668 227.162 cv
325.534 228.422 323.806 229.034 321.502 229.034 cv
316.174 229.034 li
319.576 228.17 mo
320.314 228.35 320.944 228.422 321.448 228.422 cv
322.798 228.422 323.932 227.954 324.832 227 cv
325.732 226.046 326.182 224.75 326.182 223.094 cv
326.182 221.456 325.732 220.16 324.832 219.206 cv
323.932 218.27 322.78 217.784 321.376 217.784 cv
320.836 217.784 320.242 217.874 319.576 218.036 cv
319.576 228.17 li
f
341.032 229.034 mo
337.846 229.034 li
333.814 223.454 li
333.508 223.472 333.256 223.472 333.076 223.472 cv
332.824 223.472 li
332.572 223.454 li
332.572 226.928 li
332.572 227.684 332.644 228.134 332.806 228.314 cv
333.022 228.584 333.364 228.71 333.814 228.71 cv
334.282 228.71 li
334.282 229.034 li
329.17 229.034 li
329.17 228.71 li
329.62 228.71 li
330.124 228.71 330.484 228.548 330.7 228.224 cv
330.808 228.044 330.88 227.612 330.88 226.928 cv
330.88 219.224 li
330.88 218.486 330.79 218.018 330.646 217.82 cv
330.412 217.568 330.07 217.442 329.62 217.442 cv
329.17 217.442 li
329.17 217.118 li
333.508 217.118 li
334.768 217.118 335.704 217.226 336.316 217.406 cv
336.91 217.586 337.414 217.928 337.846 218.414 cv
338.26 218.918 338.476 219.494 338.476 220.178 cv
338.476 220.916 338.224 221.546 337.756 222.086 cv
337.27 222.626 336.532 223.022 335.542 223.238 cv
337.99 226.658 li
338.548 227.45 339.034 227.972 339.448 228.224 cv
339.844 228.476 340.384 228.638 341.032 228.71 cv
341.032 229.034 li
332.572 222.914 mo
332.68 222.914 332.77 222.914 332.86 222.914 cv
333.058 222.914 li
334.192 222.914 335.056 222.68 335.632 222.176 cv
336.208 221.69 336.496 221.06 336.496 220.304 cv
336.496 219.566 336.262 218.954 335.794 218.486 cv
335.326 218.018 334.696 217.784 333.94 217.784 cv
333.598 217.784 333.148 217.838 332.572 217.946 cv
332.572 222.914 li
f
2 lc
[] 0 dsh
210.964 248.178 mo
246.964 248.178 li
@
269.608 250.482 mo
264.982 250.482 li
264.172 252.372 li
263.974 252.84 263.884 253.182 263.884 253.398 cv
263.884 253.596 263.956 253.758 264.136 253.902 cv
264.298 254.046 264.676 254.118 265.252 254.154 cv
265.252 254.478 li
261.508 254.478 li
261.508 254.154 li
261.994 254.082 262.318 253.956 262.48 253.812 cv
262.768 253.524 263.092 252.966 263.47 252.102 cv
267.664 242.292 li
267.97 242.292 li
272.11 252.21 li
272.434 253.002 272.74 253.524 273.01 253.758 cv
273.28 253.992 273.658 254.118 274.162 254.154 cv
274.162 254.478 li
269.464 254.478 li
269.464 254.154 li
269.932 254.136 270.238 254.064 270.418 253.92 cv
270.58 253.794 270.67 253.632 270.67 253.416 cv
270.67 253.164 270.544 252.768 270.328 252.21 cv
269.608 250.482 li
269.356 249.834 mo
267.34 245.028 li
265.252 249.834 li
269.356 249.834 li
f
276.97 241.986 mo
277.222 241.986 277.42 242.076 277.6 242.238 cv
277.762 242.418 277.852 242.616 277.852 242.868 cv
277.852 243.12 277.762 243.318 277.6 243.498 cv
277.42 243.678 277.222 243.768 276.97 243.768 cv
276.718 243.768 276.52 243.678 276.34 243.498 cv
276.16 243.318 276.07 243.12 276.07 242.868 cv
276.07 242.616 276.142 242.418 276.322 242.238 cv
276.502 242.076 276.718 241.986 276.97 241.986 cv
277.708 246.198 mo
277.708 252.66 li
277.708 253.164 277.744 253.506 277.816 253.668 cv
277.888 253.848 277.996 253.974 278.14 254.046 cv
278.284 254.118 278.536 254.154 278.914 254.154 cv
278.914 254.478 li
275.008 254.478 li
275.008 254.154 li
275.404 254.154 275.656 254.118 275.8 254.046 cv
275.926 253.974 276.034 253.848 276.106 253.668 cv
276.178 253.488 276.232 253.164 276.232 252.66 cv
276.232 249.564 li
276.232 248.7 276.196 248.124 276.16 247.854 cv
276.124 247.674 276.052 247.548 275.962 247.476 cv
275.872 247.404 275.746 247.35 275.602 247.35 cv
275.44 247.35 275.242 247.404 275.008 247.494 cv
274.882 247.17 li
277.312 246.198 li
277.708 246.198 li
f
283.054 243.21 mo
283.054 247.89 li
285.214 247.89 li
285.718 247.89 286.078 247.782 286.312 247.566 cv
286.528 247.35 286.69 246.918 286.78 246.252 cv
287.104 246.252 li
287.104 250.302 li
286.78 250.302 li
286.762 249.834 286.69 249.492 286.582 249.276 cv
286.474 249.06 286.312 248.898 286.114 248.79 cv
285.898 248.682 285.61 248.628 285.214 248.628 cv
283.054 248.628 li
283.054 252.372 li
283.054 252.984 283.09 253.38 283.162 253.56 cv
283.216 253.704 283.342 253.83 283.522 253.938 cv
283.774 254.082 284.044 254.154 284.332 254.154 cv
284.764 254.154 li
284.764 254.478 li
279.652 254.478 li
279.652 254.154 li
280.084 254.154 li
280.57 254.154 280.93 254.01 281.146 253.722 cv
281.29 253.542 281.362 253.092 281.362 252.372 cv
281.362 244.668 li
281.362 244.074 281.308 243.678 281.236 243.48 cv
281.182 243.336 281.056 243.21 280.876 243.102 cv
280.624 242.958 280.354 242.886 280.084 242.886 cv
279.652 242.886 li
279.652 242.562 li
288.526 242.562 li
288.634 245.172 li
288.328 245.172 li
288.166 244.632 287.986 244.218 287.788 243.966 cv
287.59 243.714 287.338 243.516 287.05 243.39 cv
286.744 243.282 286.294 243.21 285.682 243.21 cv
283.054 243.21 li
f
291.982 241.986 mo
292.234 241.986 292.432 242.076 292.612 242.238 cv
292.774 242.418 292.864 242.616 292.864 242.868 cv
292.864 243.12 292.774 243.318 292.612 243.498 cv
292.432 243.678 292.234 243.768 291.982 243.768 cv
291.73 243.768 291.532 243.678 291.352 243.498 cv
291.172 243.318 291.082 243.12 291.082 242.868 cv
291.082 242.616 291.154 242.418 291.334 242.238 cv
291.514 242.076 291.73 241.986 291.982 241.986 cv
292.72 246.198 mo
292.72 252.66 li
292.72 253.164 292.756 253.506 292.828 253.668 cv
292.9 253.848 293.008 253.974 293.152 254.046 cv
293.296 254.118 293.548 254.154 293.926 254.154 cv
293.926 254.478 li
290.02 254.478 li
290.02 254.154 li
290.416 254.154 290.668 254.118 290.812 254.046 cv
290.938 253.974 291.046 253.848 291.118 253.668 cv
291.19 253.488 291.244 253.164 291.244 252.66 cv
291.244 249.564 li
291.244 248.7 291.208 248.124 291.172 247.854 cv
291.136 247.674 291.064 247.548 290.974 247.476 cv
290.884 247.404 290.758 247.35 290.614 247.35 cv
290.452 247.35 290.254 247.404 290.02 247.494 cv
289.894 247.17 li
292.324 246.198 li
292.72 246.198 li
f
301.738 254.478 mo
297.13 244.452 li
297.13 252.408 li
297.13 253.146 297.202 253.596 297.382 253.776 cv
297.598 254.028 297.94 254.154 298.408 254.154 cv
298.822 254.154 li
298.822 254.478 li
294.682 254.478 li
294.682 254.154 li
295.096 254.154 li
295.6 254.154 295.96 254.01 296.176 253.704 cv
296.284 253.524 296.356 253.092 296.356 252.408 cv
296.356 244.632 li
296.356 244.11 296.302 243.732 296.194 243.48 cv
296.104 243.318 295.942 243.174 295.726 243.066 cv
295.51 242.958 295.15 242.886 294.682 242.886 cv
294.682 242.562 li
298.048 242.562 li
302.368 251.886 li
306.634 242.562 li
310 242.562 li
310 242.886 li
309.586 242.886 li
309.082 242.886 308.722 243.048 308.506 243.336 cv
308.362 243.534 308.308 243.966 308.308 244.632 cv
308.308 252.408 li
308.308 253.146 308.38 253.596 308.56 253.776 cv
308.776 254.028 309.118 254.154 309.586 254.154 cv
310 254.154 li
310 254.478 li
304.942 254.478 li
304.942 254.154 li
305.356 254.154 li
305.86 254.154 306.22 254.01 306.436 253.704 cv
306.562 253.524 306.634 253.092 306.634 252.408 cv
306.634 244.452 li
302.026 254.478 li
301.738 254.478 li
f
315.508 253.326 mo
314.68 253.974 314.158 254.334 313.942 254.424 cv
313.618 254.55 313.294 254.622 312.934 254.622 cv
312.376 254.622 311.926 254.442 311.566 254.064 cv
311.206 253.704 311.026 253.2 311.026 252.57 cv
311.026 252.174 311.098 251.832 311.278 251.544 cv
311.512 251.148 311.926 250.788 312.52 250.428 cv
313.114 250.086 314.104 249.654 315.508 249.15 cv
315.508 248.826 li
315.508 248.034 315.364 247.476 315.112 247.17 cv
314.86 246.882 314.482 246.72 314.014 246.72 cv
313.636 246.72 313.348 246.828 313.132 247.026 cv
312.898 247.242 312.79 247.458 312.79 247.71 cv
312.808 248.214 li
312.808 248.502 312.736 248.7 312.592 248.844 cv
312.448 248.988 312.286 249.06 312.07 249.06 cv
311.854 249.06 311.674 248.988 311.53 248.844 cv
311.386 248.7 311.332 248.484 311.332 248.214 cv
311.332 247.71 311.584 247.26 312.106 246.828 cv
312.61 246.414 313.33 246.198 314.266 246.198 cv
314.986 246.198 315.562 246.324 316.03 246.558 cv
316.372 246.738 316.624 247.026 316.786 247.404 cv
316.894 247.656 316.948 248.178 316.948 248.952 cv
316.948 251.688 li
316.948 252.462 316.948 252.93 316.984 253.092 cv
317.02 253.272 317.056 253.38 317.128 253.434 cv
317.2 253.506 317.272 253.524 317.38 253.524 cv
317.614 253.47 li
317.74 253.398 317.974 253.182 318.334 252.822 cv
318.334 253.326 li
317.668 254.19 317.038 254.622 316.444 254.622 cv
316.156 254.622 315.922 254.514 315.76 254.334 cv
315.58 254.154 315.508 253.812 315.508 253.326 cv
315.508 252.75 mo
315.508 249.672 li
314.608 250.032 314.032 250.284 313.78 250.428 cv
313.312 250.68 312.988 250.95 312.79 251.238 cv
312.592 251.526 312.502 251.832 312.502 252.156 cv
312.502 252.588 312.628 252.93 312.88 253.218 cv
313.132 253.506 313.42 253.632 313.744 253.632 cv
314.176 253.632 314.77 253.344 315.508 252.75 cv
f
321.268 243.786 mo
321.268 246.432 li
323.158 246.432 li
323.158 247.044 li
321.268 247.044 li
321.268 252.264 li
321.268 252.786 321.34 253.146 321.484 253.326 cv
321.628 253.506 321.826 253.596 322.078 253.596 cv
322.258 253.596 322.456 253.542 322.636 253.416 cv
322.816 253.308 322.942 253.128 323.05 252.876 cv
323.392 252.876 li
323.176 253.452 322.888 253.884 322.528 254.172 cv
322.15 254.46 321.772 254.586 321.376 254.586 cv
321.088 254.586 320.818 254.514 320.566 254.37 cv
320.314 254.226 320.116 254.028 320.008 253.74 cv
319.882 253.47 319.828 253.038 319.828 252.462 cv
319.828 247.044 li
318.55 247.044 li
318.55 246.756 li
318.874 246.63 319.198 246.414 319.54 246.108 cv
319.864 245.802 320.17 245.442 320.44 245.01 cv
320.566 244.794 320.746 244.38 320.998 243.786 cv
321.268 243.786 li
f
330.772 251.418 mo
330.556 252.48 330.124 253.29 329.494 253.866 cv
328.864 254.442 328.162 254.712 327.406 254.712 cv
326.47 254.712 325.678 254.334 324.994 253.578 cv
324.31 252.822 323.986 251.778 323.986 250.464 cv
323.986 249.204 324.364 248.178 325.12 247.386 cv
325.876 246.594 326.776 246.198 327.838 246.198 cv
328.612 246.198 329.26 246.414 329.764 246.828 cv
330.268 247.242 330.538 247.674 330.538 248.124 cv
330.538 248.358 330.466 248.538 330.322 248.664 cv
330.178 248.808 329.98 248.862 329.728 248.862 cv
329.368 248.862 329.116 248.754 328.954 248.538 cv
328.846 248.43 328.774 248.196 328.738 247.836 cv
328.702 247.494 328.594 247.224 328.396 247.044 cv
328.18 246.864 327.892 246.774 327.532 246.774 cv
326.956 246.774 326.488 246.99 326.128 247.422 cv
325.642 247.998 325.408 248.772 325.408 249.708 cv
325.408 250.68 325.642 251.526 326.11 252.246 cv
326.578 252.984 327.226 253.344 328.036 253.344 cv
328.612 253.344 329.116 253.164 329.584 252.768 cv
329.908 252.498 330.214 252.012 330.52 251.292 cv
330.772 251.418 li
f
334.3 241.986 mo
334.3 247.872 li
334.948 247.152 335.452 246.702 335.83 246.504 cv
336.208 246.306 336.586 246.198 336.982 246.198 cv
337.432 246.198 337.828 246.324 338.152 246.576 cv
338.476 246.828 338.728 247.224 338.89 247.746 cv
338.998 248.142 339.052 248.826 339.052 249.816 cv
339.052 252.66 li
339.052 253.164 339.088 253.524 339.178 253.704 cv
339.232 253.848 339.322 253.974 339.466 254.046 cv
339.61 254.118 339.862 254.154 340.258 254.154 cv
340.258 254.478 li
336.298 254.478 li
336.298 254.154 li
336.478 254.154 li
336.838 254.154 337.108 254.1 337.252 253.992 cv
337.396 253.884 337.504 253.704 337.576 253.488 cv
337.576 253.398 337.594 253.128 337.594 252.66 cv
337.594 249.816 li
337.594 248.934 337.54 248.358 337.45 248.088 cv
337.36 247.818 337.216 247.62 337.018 247.476 cv
336.82 247.332 336.586 247.26 336.298 247.26 cv
336.01 247.26 335.704 247.35 335.398 247.494 cv
335.092 247.638 334.732 247.944 334.3 248.412 cv
334.3 252.66 li
334.3 253.218 334.318 253.56 334.39 253.686 cv
334.444 253.83 334.552 253.938 334.732 254.028 cv
334.894 254.118 335.182 254.154 335.596 254.154 cv
335.596 254.478 li
331.6 254.478 li
331.6 254.154 li
331.96 254.154 332.23 254.1 332.446 253.992 cv
332.554 253.938 332.662 253.83 332.734 253.668 cv
332.806 253.506 332.842 253.164 332.842 252.66 cv
332.842 245.37 li
332.842 244.452 332.806 243.894 332.77 243.678 cv
332.716 243.462 332.644 243.318 332.554 243.246 cv
332.464 243.174 332.338 243.138 332.194 243.138 cv
332.068 243.138 331.87 243.192 331.6 243.264 cv
331.474 242.958 li
333.886 241.986 li
334.3 241.986 li
f
64.4297 489.833 mo
357.048 489.833 li
357.048 381.233 li
64.4297 381.233 li
64.4297 489.833 li
1 /0 /CSD get_res sepcs
0 sep
f
gsave
64.4297 489.833 mo
357.048 489.833 li
357.048 381.233 li
64.4297 381.233 li
64.4297 489.833 li
clp
.8 lw
64.4297 489.833 mo
64.4297 381.233 li
1 /0 /CSD get_res sepcs
.309804 sep
@
grestore
64.4297 489.833 mo
64.4297 493.333 li
1 /0 /CSD get_res sepcs
1 sep
f
.8 lw
0 lc
64.4297 489.833 mo
64.4297 493.333 li
@
60.5777 503.447 mo
60.5777 502.097 60.7757 500.927 61.1897 499.937 cv
61.5857 498.965 62.1437 498.227 62.8277 497.741 cv
63.3497 497.363 63.8897 497.165 64.4657 497.165 cv
65.3657 497.165 66.1937 497.633 66.9317 498.569 cv
67.8317 499.721 68.2817 501.287 68.2817 503.267 cv
68.2817 504.653 68.0837 505.823 67.6877 506.795 cv
67.2917 507.767 66.7697 508.451 66.1577 508.883 cv
65.5457 509.315 64.9517 509.531 64.3757 509.531 cv
63.2237 509.531 62.2877 508.865 61.5317 507.533 cv
60.8837 506.417 60.5777 505.049 60.5777 503.447 cv
62.3057 503.663 mo
62.3057 505.319 62.5037 506.651 62.9177 507.677 cv
63.2417 508.559 63.7277 508.991 64.4117 508.991 cv
64.7177 508.991 65.0417 508.865 65.3837 508.577 cv
65.7257 508.289 65.9777 507.821 66.1577 507.137 cv
66.4277 506.129 66.5717 504.707 66.5717 502.871 cv
66.5717 501.521 66.4277 500.387 66.1397 499.469 cv
65.9237 498.803 65.6537 498.335 65.3297 498.047 cv
65.0777 497.849 64.7897 497.741 64.4477 497.741 cv
64.0517 497.741 63.6917 497.921 63.3857 498.281 cv
62.9537 498.785 62.6657 499.541 62.5217 500.585 cv
62.3777 501.629 62.3057 502.655 62.3057 503.663 cv
f
gsave
64.4297 489.833 mo
357.048 489.833 li
357.048 381.233 li
64.4297 381.233 li
64.4297 489.833 li
clp
2 lc
122.953 489.833 mo
122.953 381.233 li
1 /0 /CSD get_res sepcs
.309804 sep
@
grestore
122.953 489.833 mo
122.953 493.333 li
f
122.953 489.833 mo
122.953 493.333 li
@
121.765 497.417 mo
121.081 498.911 li
117.499 498.911 li
116.707 500.513 li
118.255 500.747 119.497 501.323 120.397 502.241 cv
121.171 503.033 121.567 503.969 121.567 505.049 cv
121.567 505.679 121.441 506.255 121.189 506.795 cv
120.937 507.335 120.613 507.785 120.217 508.163 cv
119.821 508.541 119.407 508.847 118.939 509.063 cv
118.255 509.369 117.571 509.531 116.869 509.531 cv
116.149 509.531 115.627 509.405 115.303 509.171 cv
114.979 508.937 114.817 508.667 114.817 508.379 cv
114.817 508.217 114.871 508.073 115.015 507.947 cv
115.141 507.821 115.303 507.749 115.519 507.749 cv
115.663 507.749 115.807 507.785 115.915 507.821 cv
116.023 507.875 116.221 508.001 116.509 508.181 cv
116.941 508.487 117.391 508.631 117.841 508.631 cv
118.525 508.631 119.119 508.379 119.641 507.857 cv
120.163 507.353 120.433 506.723 120.433 505.967 cv
120.433 505.247 120.199 504.581 119.731 503.951 cv
119.263 503.339 118.633 502.853 117.823 502.511 cv
117.175 502.259 116.311 502.097 115.213 502.043 cv
117.499 497.417 li
121.765 497.417 li
f
123.601 503.447 mo
123.601 502.097 123.799 500.927 124.213 499.937 cv
124.609 498.965 125.167 498.227 125.851 497.741 cv
126.373 497.363 126.913 497.165 127.489 497.165 cv
128.389 497.165 129.217 497.633 129.955 498.569 cv
130.855 499.721 131.305 501.287 131.305 503.267 cv
131.305 504.653 131.107 505.823 130.711 506.795 cv
130.315 507.767 129.793 508.451 129.181 508.883 cv
128.569 509.315 127.975 509.531 127.399 509.531 cv
126.247 509.531 125.311 508.865 124.555 507.533 cv
123.907 506.417 123.601 505.049 123.601 503.447 cv
125.329 503.663 mo
125.329 505.319 125.527 506.651 125.941 507.677 cv
126.265 508.559 126.751 508.991 127.435 508.991 cv
127.741 508.991 128.065 508.865 128.407 508.577 cv
128.749 508.289 129.001 507.821 129.181 507.137 cv
129.451 506.129 129.595 504.707 129.595 502.871 cv
129.595 501.521 129.451 500.387 129.163 499.469 cv
128.947 498.803 128.677 498.335 128.353 498.047 cv
128.101 497.849 127.813 497.741 127.471 497.741 cv
127.075 497.741 126.715 497.921 126.409 498.281 cv
125.977 498.785 125.689 499.541 125.545 500.585 cv
125.401 501.629 125.329 502.655 125.329 503.663 cv
f
gsave
64.4297 489.833 mo
357.048 489.833 li
357.048 381.233 li
64.4297 381.233 li
64.4297 489.833 li
clp
2 lc
181.477 489.833 mo
181.477 381.233 li
1 /0 /CSD get_res sepcs
.309804 sep
@
grestore
181.477 489.833 mo
181.477 493.333 li
f
181.477 489.833 mo
181.477 493.333 li
@
170.083 498.587 mo
172.981 497.165 li
173.269 497.165 li
173.269 507.227 li
173.269 507.911 173.287 508.325 173.359 508.487 cv
173.413 508.649 173.521 508.775 173.701 508.865 cv
173.881 508.955 174.241 509.009 174.781 509.009 cv
174.781 509.333 li
170.299 509.333 li
170.299 509.009 li
170.857 509.009 171.217 508.955 171.379 508.865 cv
171.541 508.793 171.649 508.667 171.721 508.523 cv
171.793 508.379 171.829 507.947 171.829 507.227 cv
171.829 500.801 li
171.829 499.937 171.793 499.379 171.739 499.127 cv
171.703 498.947 171.631 498.803 171.523 498.713 cv
171.415 498.641 171.271 498.587 171.127 498.587 cv
170.911 498.587 170.605 498.677 170.227 498.857 cv
170.083 498.587 li
f
177.625 503.447 mo
177.625 502.097 177.823 500.927 178.237 499.937 cv
178.633 498.965 179.191 498.227 179.875 497.741 cv
180.397 497.363 180.937 497.165 181.513 497.165 cv
182.413 497.165 183.241 497.633 183.979 498.569 cv
184.879 499.721 185.329 501.287 185.329 503.267 cv
185.329 504.653 185.131 505.823 184.735 506.795 cv
184.339 507.767 183.817 508.451 183.205 508.883 cv
182.593 509.315 181.999 509.531 181.423 509.531 cv
180.271 509.531 179.335 508.865 178.579 507.533 cv
177.931 506.417 177.625 505.049 177.625 503.447 cv
179.353 503.663 mo
179.353 505.319 179.551 506.651 179.965 507.677 cv
180.289 508.559 180.775 508.991 181.459 508.991 cv
181.765 508.991 182.089 508.865 182.431 508.577 cv
182.773 508.289 183.025 507.821 183.205 507.137 cv
183.475 506.129 183.619 504.707 183.619 502.871 cv
183.619 501.521 183.475 500.387 183.187 499.469 cv
182.971 498.803 182.701 498.335 182.377 498.047 cv
182.125 497.849 181.837 497.741 181.495 497.741 cv
181.099 497.741 180.739 497.921 180.433 498.281 cv
180.001 498.785 179.713 499.541 179.569 500.585 cv
179.425 501.629 179.353 502.655 179.353 503.663 cv
f
186.625 503.447 mo
186.625 502.097 186.823 500.927 187.237 499.937 cv
187.633 498.965 188.191 498.227 188.875 497.741 cv
189.397 497.363 189.937 497.165 190.513 497.165 cv
191.413 497.165 192.241 497.633 192.979 498.569 cv
193.879 499.721 194.329 501.287 194.329 503.267 cv
194.329 504.653 194.131 505.823 193.735 506.795 cv
193.339 507.767 192.817 508.451 192.205 508.883 cv
191.593 509.315 190.999 509.531 190.423 509.531 cv
189.271 509.531 188.335 508.865 187.579 507.533 cv
186.931 506.417 186.625 505.049 186.625 503.447 cv
188.353 503.663 mo
188.353 505.319 188.551 506.651 188.965 507.677 cv
189.289 508.559 189.775 508.991 190.459 508.991 cv
190.765 508.991 191.089 508.865 191.431 508.577 cv
191.773 508.289 192.025 507.821 192.205 507.137 cv
192.475 506.129 192.619 504.707 192.619 502.871 cv
192.619 501.521 192.475 500.387 192.187 499.469 cv
191.971 498.803 191.701 498.335 191.377 498.047 cv
191.125 497.849 190.837 497.741 190.495 497.741 cv
190.099 497.741 189.739 497.921 189.433 498.281 cv
189.001 498.785 188.713 499.541 188.569 500.585 cv
188.425 501.629 188.353 502.655 188.353 503.663 cv
f
gsave
64.4297 489.833 mo
357.048 489.833 li
357.048 381.233 li
64.4297 381.233 li
64.4297 489.833 li
clp
239.601 490.233 mo
239.601 380.833 li
240.401 380.833 li
240.401 490.233 li
239.601 490.233 li
1 /0 /CSD get_res sepcs
.309804 sep
f
grestore
240.001 489.833 mo
240.001 493.333 li
f
240.001 489.833 mo
240.001 493.333 li
@
228.607 498.587 mo
231.505 497.165 li
231.793 497.165 li
231.793 507.227 li
231.793 507.911 231.811 508.325 231.883 508.487 cv
231.937 508.649 232.045 508.775 232.225 508.865 cv
232.405 508.955 232.765 509.009 233.305 509.009 cv
233.305 509.333 li
228.823 509.333 li
228.823 509.009 li
229.381 509.009 229.741 508.955 229.903 508.865 cv
230.065 508.793 230.173 508.667 230.245 508.523 cv
230.317 508.379 230.353 507.947 230.353 507.227 cv
230.353 500.801 li
230.353 499.937 230.317 499.379 230.263 499.127 cv
230.227 498.947 230.155 498.803 230.047 498.713 cv
229.939 498.641 229.795 498.587 229.651 498.587 cv
229.435 498.587 229.129 498.677 228.751 498.857 cv
228.607 498.587 li
f
243.313 497.417 mo
242.629 498.911 li
239.047 498.911 li
238.255 500.513 li
239.803 500.747 241.045 501.323 241.945 502.241 cv
242.719 503.033 243.115 503.969 243.115 505.049 cv
243.115 505.679 242.989 506.255 242.737 506.795 cv
242.485 507.335 242.161 507.785 241.765 508.163 cv
241.369 508.541 240.955 508.847 240.487 509.063 cv
239.803 509.369 239.119 509.531 238.417 509.531 cv
237.697 509.531 237.175 509.405 236.851 509.171 cv
236.527 508.937 236.365 508.667 236.365 508.379 cv
236.365 508.217 236.419 508.073 236.563 507.947 cv
236.689 507.821 236.851 507.749 237.067 507.749 cv
237.211 507.749 237.355 507.785 237.463 507.821 cv
237.571 507.875 237.769 508.001 238.057 508.181 cv
238.489 508.487 238.939 508.631 239.389 508.631 cv
240.073 508.631 240.667 508.379 241.189 507.857 cv
241.711 507.353 241.981 506.723 241.981 505.967 cv
241.981 505.247 241.747 504.581 241.279 503.951 cv
240.811 503.339 240.181 502.853 239.371 502.511 cv
238.723 502.259 237.859 502.097 236.761 502.043 cv
239.047 497.417 li
243.313 497.417 li
f
245.149 503.447 mo
245.149 502.097 245.347 500.927 245.761 499.937 cv
246.157 498.965 246.715 498.227 247.399 497.741 cv
247.921 497.363 248.461 497.165 249.037 497.165 cv
249.937 497.165 250.765 497.633 251.503 498.569 cv
252.403 499.721 252.853 501.287 252.853 503.267 cv
252.853 504.653 252.655 505.823 252.259 506.795 cv
251.863 507.767 251.341 508.451 250.729 508.883 cv
250.117 509.315 249.523 509.531 248.947 509.531 cv
247.795 509.531 246.859 508.865 246.103 507.533 cv
245.455 506.417 245.149 505.049 245.149 503.447 cv
246.877 503.663 mo
246.877 505.319 247.075 506.651 247.489 507.677 cv
247.813 508.559 248.299 508.991 248.983 508.991 cv
249.289 508.991 249.613 508.865 249.955 508.577 cv
250.297 508.289 250.549 507.821 250.729 507.137 cv
250.999 506.129 251.143 504.707 251.143 502.871 cv
251.143 501.521 250.999 500.387 250.711 499.469 cv
250.495 498.803 250.225 498.335 249.901 498.047 cv
249.649 497.849 249.361 497.741 249.019 497.741 cv
248.623 497.741 248.263 497.921 247.957 498.281 cv
247.525 498.785 247.237 499.541 247.093 500.585 cv
246.949 501.629 246.877 502.655 246.877 503.663 cv
f
gsave
64.4297 489.833 mo
357.048 489.833 li
357.048 381.233 li
64.4297 381.233 li
64.4297 489.833 li
clp
298.124 490.233 mo
298.124 380.833 li
298.924 380.833 li
298.924 490.233 li
298.124 490.233 li
1 /0 /CSD get_res sepcs
.309804 sep
f
grestore
298.524 489.833 mo
298.524 493.333 li
f
298.524 489.833 mo
298.524 493.333 li
@
293.268 507.047 mo
292.44 509.333 li
285.402 509.333 li
285.402 509.009 li
287.472 507.137 288.93 505.589 289.776 504.383 cv
290.604 503.195 291.036 502.097 291.036 501.107 cv
291.036 500.351 290.802 499.739 290.334 499.253 cv
289.866 498.767 289.326 498.515 288.696 498.515 cv
288.102 498.515 287.58 498.695 287.112 499.037 cv
286.644 499.379 286.302 499.883 286.086 500.531 cv
285.762 500.531 li
285.906 499.451 286.266 498.623 286.878 498.047 cv
287.49 497.471 288.246 497.165 289.146 497.165 cv
290.118 497.165 290.928 497.489 291.576 498.101 cv
292.224 498.731 292.548 499.469 292.548 500.297 cv
292.548 500.909 292.404 501.503 292.134 502.115 cv
291.684 503.069 290.982 504.077 290.01 505.121 cv
288.552 506.723 287.634 507.677 287.274 508.001 cv
290.388 508.001 li
291.018 508.001 291.468 507.983 291.72 507.929 cv
291.972 507.893 292.206 507.803 292.422 507.659 cv
292.62 507.515 292.8 507.317 292.944 507.047 cv
293.268 507.047 li
f
294.672 503.447 mo
294.672 502.097 294.87 500.927 295.284 499.937 cv
295.68 498.965 296.238 498.227 296.922 497.741 cv
297.444 497.363 297.984 497.165 298.56 497.165 cv
299.46 497.165 300.288 497.633 301.026 498.569 cv
301.926 499.721 302.376 501.287 302.376 503.267 cv
302.376 504.653 302.178 505.823 301.782 506.795 cv
301.386 507.767 300.864 508.451 300.252 508.883 cv
299.64 509.315 299.046 509.531 298.47 509.531 cv
297.318 509.531 296.382 508.865 295.626 507.533 cv
294.978 506.417 294.672 505.049 294.672 503.447 cv
296.4 503.663 mo
296.4 505.319 296.598 506.651 297.012 507.677 cv
297.336 508.559 297.822 508.991 298.506 508.991 cv
298.812 508.991 299.136 508.865 299.478 508.577 cv
299.82 508.289 300.072 507.821 300.252 507.137 cv
300.522 506.129 300.666 504.707 300.666 502.871 cv
300.666 501.521 300.522 500.387 300.234 499.469 cv
300.018 498.803 299.748 498.335 299.424 498.047 cv
299.172 497.849 298.884 497.741 298.542 497.741 cv
298.146 497.741 297.786 497.921 297.48 498.281 cv
297.048 498.785 296.76 499.541 296.616 500.585 cv
296.472 501.629 296.4 502.655 296.4 503.663 cv
f
303.672 503.447 mo
303.672 502.097 303.87 500.927 304.284 499.937 cv
304.68 498.965 305.238 498.227 305.922 497.741 cv
306.444 497.363 306.984 497.165 307.56 497.165 cv
308.46 497.165 309.288 497.633 310.026 498.569 cv
310.926 499.721 311.376 501.287 311.376 503.267 cv
311.376 504.653 311.178 505.823 310.782 506.795 cv
310.386 507.767 309.864 508.451 309.252 508.883 cv
308.64 509.315 308.046 509.531 307.47 509.531 cv
306.318 509.531 305.382 508.865 304.626 507.533 cv
303.978 506.417 303.672 505.049 303.672 503.447 cv
305.4 503.663 mo
305.4 505.319 305.598 506.651 306.012 507.677 cv
306.336 508.559 306.822 508.991 307.506 508.991 cv
307.812 508.991 308.136 508.865 308.478 508.577 cv
308.82 508.289 309.072 507.821 309.252 507.137 cv
309.522 506.129 309.666 504.707 309.666 502.871 cv
309.666 501.521 309.522 500.387 309.234 499.469 cv
309.018 498.803 308.748 498.335 308.424 498.047 cv
308.172 497.849 307.884 497.741 307.542 497.741 cv
307.146 497.741 306.786 497.921 306.48 498.281 cv
306.048 498.785 305.76 499.541 305.616 500.585 cv
305.472 501.629 305.4 502.655 305.4 503.663 cv
f
gsave
64.4297 489.833 mo
357.048 489.833 li
357.048 381.233 li
64.4297 381.233 li
64.4297 489.833 li
clp
2 lc
357.048 489.833 mo
357.048 381.233 li
1 /0 /CSD get_res sepcs
.309804 sep
@
grestore
357.048 489.833 mo
357.048 493.333 li
f
357.048 489.833 mo
357.048 493.333 li
@
351.792 507.047 mo
350.964 509.333 li
343.926 509.333 li
343.926 509.009 li
345.996 507.137 347.454 505.589 348.3 504.383 cv
349.128 503.195 349.56 502.097 349.56 501.107 cv
349.56 500.351 349.326 499.739 348.858 499.253 cv
348.39 498.767 347.85 498.515 347.22 498.515 cv
346.626 498.515 346.104 498.695 345.636 499.037 cv
345.168 499.379 344.826 499.883 344.61 500.531 cv
344.286 500.531 li
344.43 499.451 344.79 498.623 345.402 498.047 cv
346.014 497.471 346.77 497.165 347.67 497.165 cv
348.642 497.165 349.452 497.489 350.1 498.101 cv
350.748 498.731 351.072 499.469 351.072 500.297 cv
351.072 500.909 350.928 501.503 350.658 502.115 cv
350.208 503.069 349.506 504.077 348.534 505.121 cv
347.076 506.723 346.158 507.677 345.798 508.001 cv
348.912 508.001 li
349.542 508.001 349.992 507.983 350.244 507.929 cv
350.496 507.893 350.73 507.803 350.946 507.659 cv
351.144 507.515 351.324 507.317 351.468 507.047 cv
351.792 507.047 li
f
360.36 497.417 mo
359.676 498.911 li
356.094 498.911 li
355.302 500.513 li
356.85 500.747 358.092 501.323 358.992 502.241 cv
359.766 503.033 360.162 503.969 360.162 505.049 cv
360.162 505.679 360.036 506.255 359.784 506.795 cv
359.532 507.335 359.208 507.785 358.812 508.163 cv
358.416 508.541 358.002 508.847 357.534 509.063 cv
356.85 509.369 356.166 509.531 355.464 509.531 cv
354.744 509.531 354.222 509.405 353.898 509.171 cv
353.574 508.937 353.412 508.667 353.412 508.379 cv
353.412 508.217 353.466 508.073 353.61 507.947 cv
353.736 507.821 353.898 507.749 354.114 507.749 cv
354.258 507.749 354.402 507.785 354.51 507.821 cv
354.618 507.875 354.816 508.001 355.104 508.181 cv
355.536 508.487 355.986 508.631 356.436 508.631 cv
357.12 508.631 357.714 508.379 358.236 507.857 cv
358.758 507.353 359.028 506.723 359.028 505.967 cv
359.028 505.247 358.794 504.581 358.326 503.951 cv
357.858 503.339 357.228 502.853 356.418 502.511 cv
355.77 502.259 354.906 502.097 353.808 502.043 cv
356.094 497.417 li
360.36 497.417 li
f
362.196 503.447 mo
362.196 502.097 362.394 500.927 362.808 499.937 cv
363.204 498.965 363.762 498.227 364.446 497.741 cv
364.968 497.363 365.508 497.165 366.084 497.165 cv
366.984 497.165 367.812 497.633 368.55 498.569 cv
369.45 499.721 369.9 501.287 369.9 503.267 cv
369.9 504.653 369.702 505.823 369.306 506.795 cv
368.91 507.767 368.388 508.451 367.776 508.883 cv
367.164 509.315 366.57 509.531 365.994 509.531 cv
364.842 509.531 363.906 508.865 363.15 507.533 cv
362.502 506.417 362.196 505.049 362.196 503.447 cv
363.924 503.663 mo
363.924 505.319 364.122 506.651 364.536 507.677 cv
364.86 508.559 365.346 508.991 366.03 508.991 cv
366.336 508.991 366.66 508.865 367.002 508.577 cv
367.344 508.289 367.596 507.821 367.776 507.137 cv
368.046 506.129 368.19 504.707 368.19 502.871 cv
368.19 501.521 368.046 500.387 367.758 499.469 cv
367.542 498.803 367.272 498.335 366.948 498.047 cv
366.696 497.849 366.408 497.741 366.066 497.741 cv
365.67 497.741 365.31 497.921 365.004 498.281 cv
364.572 498.785 364.284 499.541 364.14 500.585 cv
363.996 501.629 363.924 502.655 363.924 503.663 cv
f
171.241 517.491 mo
171.241 521.613 li
170.917 521.613 li
170.809 520.821 170.629 520.191 170.359 519.723 cv
170.071 519.255 169.693 518.895 169.189 518.607 cv
168.685 518.337 168.163 518.193 167.623 518.193 cv
167.011 518.193 166.507 518.391 166.111 518.751 cv
165.715 519.129 165.517 519.543 165.517 520.011 cv
165.517 520.389 165.643 520.731 165.895 521.019 cv
166.255 521.451 167.119 522.045 168.487 522.765 cv
169.603 523.377 170.359 523.827 170.773 524.151 cv
171.169 524.475 171.493 524.853 171.709 525.285 cv
171.925 525.717 172.033 526.167 172.033 526.635 cv
172.033 527.535 171.673 528.309 170.989 528.957 cv
170.287 529.605 169.387 529.929 168.289 529.929 cv
167.929 529.929 167.605 529.893 167.317 529.857 cv
167.137 529.821 166.759 529.713 166.183 529.551 cv
165.607 529.371 165.247 529.281 165.103 529.281 cv
164.941 529.281 164.815 529.335 164.743 529.407 cv
164.653 529.497 164.599 529.677 164.563 529.929 cv
164.239 529.929 li
164.239 525.861 li
164.563 525.861 li
164.707 526.725 164.923 527.355 165.175 527.787 cv
165.427 528.219 165.823 528.561 166.363 528.849 cv
166.885 529.137 167.461 529.263 168.109 529.263 cv
168.829 529.263 169.405 529.083 169.837 528.687 cv
170.269 528.309 170.485 527.859 170.485 527.319 cv
170.485 527.031 170.395 526.725 170.233 526.419 cv
170.071 526.131 169.819 525.843 169.477 525.591 cv
169.243 525.411 168.613 525.051 167.605 524.475 cv
166.579 523.899 165.859 523.449 165.427 523.107 cv
164.995 522.765 164.671 522.387 164.455 521.973 cv
164.239 521.577 164.131 521.127 164.131 520.623 cv
164.131 519.777 164.455 519.039 165.103 518.427 cv
165.751 517.815 166.597 517.491 167.605 517.491 cv
168.235 517.491 168.901 517.653 169.621 517.959 cv
169.945 518.103 170.179 518.175 170.323 518.175 cv
170.467 518.175 170.575 518.139 170.683 518.049 cv
170.791 517.959 170.863 517.779 170.917 517.491 cv
171.241 517.491 li
f
175.903 518.985 mo
175.903 521.631 li
177.793 521.631 li
177.793 522.243 li
175.903 522.243 li
175.903 527.463 li
175.903 527.985 175.975 528.345 176.119 528.525 cv
176.263 528.705 176.461 528.795 176.713 528.795 cv
176.893 528.795 177.091 528.741 177.271 528.615 cv
177.451 528.507 177.577 528.327 177.685 528.075 cv
178.027 528.075 li
177.811 528.651 177.523 529.083 177.163 529.371 cv
176.785 529.659 176.407 529.785 176.011 529.785 cv
175.723 529.785 175.453 529.713 175.201 529.569 cv
174.949 529.425 174.751 529.227 174.643 528.939 cv
174.517 528.669 174.463 528.237 174.463 527.661 cv
174.463 522.243 li
173.185 522.243 li
173.185 521.955 li
173.509 521.829 173.833 521.613 174.175 521.307 cv
174.499 521.001 174.805 520.641 175.075 520.209 cv
175.201 519.993 175.381 519.579 175.633 518.985 cv
175.903 518.985 li
f
179.917 524.655 mo
179.917 525.861 180.205 526.797 180.799 527.463 cv
181.375 528.147 182.077 528.489 182.869 528.489 cv
183.373 528.489 183.823 528.345 184.219 528.057 cv
184.615 527.769 184.939 527.283 185.209 526.563 cv
185.497 526.743 li
185.353 527.553 184.993 528.291 184.417 528.939 cv
183.823 529.587 183.085 529.911 182.185 529.911 cv
181.213 529.911 180.385 529.551 179.701 528.795 cv
179.017 528.039 178.675 527.031 178.675 525.753 cv
178.675 524.385 179.017 523.305 179.737 522.531 cv
180.439 521.775 181.321 521.379 182.401 521.379 cv
183.301 521.379 184.039 521.685 184.615 522.279 cv
185.191 522.873 185.497 523.665 185.497 524.655 cv
179.917 524.655 li
179.917 524.151 mo
183.643 524.151 li
183.607 523.647 183.553 523.269 183.463 523.053 cv
183.319 522.729 183.103 522.477 182.815 522.297 cv
182.527 522.117 182.221 522.009 181.897 522.009 cv
181.411 522.009 180.979 522.207 180.601 522.585 cv
180.205 522.963 179.989 523.485 179.917 524.151 cv
f
186.001 522.423 mo
188.467 521.433 li
188.791 521.433 li
188.791 523.305 li
189.205 522.603 189.619 522.117 190.051 521.829 cv
190.465 521.541 190.897 521.397 191.365 521.397 cv
192.175 521.397 192.859 521.721 193.399 522.333 cv
194.047 523.125 194.389 524.133 194.389 525.357 cv
194.389 526.761 193.975 527.913 193.183 528.813 cv
192.535 529.551 191.707 529.911 190.717 529.911 cv
190.285 529.911 189.907 529.839 189.583 529.713 cv
189.349 529.641 189.079 529.479 188.791 529.209 cv
188.791 531.639 li
188.791 532.179 188.827 532.539 188.899 532.683 cv
188.971 532.827 189.079 532.953 189.241 533.043 cv
189.403 533.133 189.709 533.187 190.159 533.187 cv
190.159 533.511 li
185.965 533.511 li
185.965 533.187 li
186.163 533.187 li
186.487 533.187 186.757 533.115 186.991 533.007 cv
187.099 532.935 187.171 532.827 187.243 532.683 cv
187.297 532.539 187.333 532.161 187.333 531.585 cv
187.333 524.007 li
187.333 523.485 187.297 523.161 187.261 523.017 cv
187.207 522.873 187.135 522.765 187.027 522.693 cv
186.919 522.621 186.793 522.585 186.631 522.585 cv
186.487 522.585 186.307 522.639 186.091 522.711 cv
186.001 522.423 li
188.791 523.827 mo
188.791 526.833 li
188.791 527.481 188.809 527.913 188.881 528.111 cv
188.953 528.453 189.151 528.759 189.475 529.011 cv
189.799 529.263 190.195 529.389 190.681 529.389 cv
191.257 529.389 191.743 529.173 192.103 528.705 cv
192.571 528.111 192.823 527.265 192.823 526.185 cv
192.823 524.961 192.553 524.025 192.013 523.341 cv
191.635 522.891 191.185 522.657 190.681 522.657 cv
190.393 522.657 190.105 522.729 189.835 522.873 cv
189.619 522.981 189.277 523.305 188.791 523.827 cv
f
199.285 517.761 mo
202.507 517.761 li
209.779 526.689 li
209.779 519.831 li
209.779 519.111 209.689 518.643 209.545 518.445 cv
209.329 518.211 208.969 518.085 208.501 518.085 cv
208.105 518.085 li
208.105 517.761 li
212.245 517.761 li
212.245 518.085 li
211.831 518.085 li
211.327 518.085 210.967 518.247 210.751 518.535 cv
210.607 518.733 210.553 519.165 210.553 519.831 cv
210.553 529.857 li
210.247 529.857 li
202.381 520.281 li
202.381 527.607 li
202.381 528.345 202.453 528.795 202.615 528.975 cv
202.831 529.227 203.173 529.353 203.641 529.353 cv
204.073 529.353 li
204.073 529.677 li
199.915 529.677 li
199.915 529.353 li
200.329 529.353 li
200.833 529.353 201.193 529.209 201.409 528.903 cv
201.535 528.723 201.607 528.291 201.607 527.607 cv
201.607 519.327 li
201.247 518.931 200.995 518.661 200.815 518.535 cv
200.635 518.409 200.383 518.283 200.041 518.157 cv
199.861 518.121 199.609 518.085 199.285 518.085 cv
199.285 517.761 li
f
220.111 521.631 mo
220.111 526.509 li
220.111 527.445 220.129 528.003 220.183 528.219 cv
220.219 528.435 220.291 528.579 220.399 528.651 cv
220.489 528.741 220.597 528.777 220.741 528.777 cv
220.921 528.777 221.119 528.723 221.353 528.615 cv
221.479 528.921 li
219.067 529.911 li
218.671 529.911 li
218.671 528.219 li
217.969 528.975 217.447 529.443 217.087 529.623 cv
216.727 529.803 216.331 529.911 215.935 529.911 cv
215.467 529.911 215.071 529.785 214.747 529.533 cv
214.423 529.281 214.189 528.939 214.063 528.525 cv
213.937 528.129 213.883 527.535 213.883 526.779 cv
213.883 523.197 li
213.883 522.819 213.829 522.549 213.757 522.405 cv
213.667 522.261 213.541 522.135 213.379 522.063 cv
213.217 521.991 212.929 521.955 212.515 521.955 cv
212.515 521.631 li
215.341 521.631 li
215.341 527.013 li
215.341 527.769 215.467 528.273 215.719 528.507 cv
215.971 528.741 216.295 528.849 216.673 528.849 cv
216.925 528.849 217.195 528.777 217.519 528.615 cv
217.843 528.453 218.221 528.147 218.671 527.697 cv
218.671 523.143 li
218.671 522.693 218.581 522.387 218.419 522.225 cv
218.239 522.063 217.897 521.973 217.375 521.955 cv
217.375 521.631 li
220.111 521.631 li
f
224.449 523.107 mo
225.025 522.531 225.385 522.189 225.493 522.099 cv
225.745 521.883 226.033 521.703 226.339 521.577 cv
226.627 521.469 226.933 521.397 227.239 521.397 cv
227.743 521.397 228.175 521.541 228.535 521.829 cv
228.895 522.117 229.147 522.549 229.273 523.107 cv
229.867 522.405 230.371 521.937 230.803 521.721 cv
231.217 521.505 231.649 521.397 232.081 521.397 cv
232.513 521.397 232.891 521.505 233.215 521.721 cv
233.539 521.937 233.809 522.297 234.007 522.801 cv
234.133 523.143 234.205 523.683 234.205 524.403 cv
234.205 527.859 li
234.205 528.363 234.241 528.723 234.313 528.903 cv
234.367 529.029 234.475 529.137 234.637 529.227 cv
234.799 529.317 235.051 529.353 235.411 529.353 cv
235.411 529.677 li
231.451 529.677 li
231.451 529.353 li
231.613 529.353 li
231.955 529.353 232.225 529.299 232.423 529.155 cv
232.549 529.065 232.639 528.921 232.711 528.705 cv
232.729 528.615 232.747 528.327 232.747 527.859 cv
232.747 524.403 li
232.747 523.755 232.657 523.287 232.513 522.999 cv
232.279 522.639 231.919 522.441 231.415 522.441 cv
231.091 522.441 230.785 522.531 230.479 522.675 cv
230.155 522.837 229.777 523.125 229.345 523.539 cv
229.327 523.647 li
229.345 524.025 li
229.345 527.859 li
229.345 528.417 229.363 528.759 229.435 528.885 cv
229.489 529.029 229.597 529.137 229.777 529.227 cv
229.939 529.317 230.227 529.353 230.641 529.353 cv
230.641 529.677 li
226.573 529.677 li
226.573 529.353 li
227.005 529.353 227.311 529.317 227.491 529.209 cv
227.653 529.101 227.779 528.939 227.851 528.723 cv
227.869 528.633 227.887 528.345 227.887 527.859 cv
227.887 524.403 li
227.887 523.755 227.779 523.269 227.599 522.981 cv
227.329 522.621 226.969 522.423 226.519 522.423 cv
226.195 522.423 225.871 522.513 225.583 522.675 cv
225.079 522.927 224.701 523.215 224.449 523.539 cv
224.449 527.859 li
224.449 528.399 224.485 528.741 224.557 528.885 cv
224.629 529.047 224.737 529.173 224.881 529.245 cv
225.025 529.317 225.313 529.353 225.763 529.353 cv
225.763 529.677 li
221.785 529.677 li
221.785 529.353 li
222.145 529.353 222.397 529.317 222.541 529.245 cv
222.685 529.173 222.811 529.047 222.883 528.867 cv
222.955 528.687 222.991 528.363 222.991 527.859 cv
222.991 524.781 li
222.991 523.899 222.955 523.323 222.919 523.071 cv
222.883 522.891 222.811 522.747 222.721 522.675 cv
222.631 522.603 222.505 522.549 222.361 522.549 cv
222.199 522.549 222.001 522.603 221.785 522.693 cv
221.641 522.369 li
224.071 521.397 li
224.449 521.397 li
224.449 523.107 li
f
238.273 523.017 mo
239.047 521.937 239.893 521.397 240.793 521.397 cv
241.621 521.397 242.341 521.757 242.953 522.459 cv
243.565 523.161 243.871 524.115 243.871 525.339 cv
243.871 526.779 243.385 527.931 242.449 528.795 cv
241.621 529.551 240.721 529.911 239.731 529.911 cv
239.263 529.911 238.777 529.821 238.291 529.659 cv
237.805 529.497 237.319 529.245 236.815 528.903 cv
236.815 520.569 li
236.815 519.651 236.779 519.093 236.743 518.877 cv
236.707 518.661 236.635 518.517 236.545 518.445 cv
236.437 518.373 236.329 518.337 236.203 518.337 cv
236.023 518.337 235.825 518.391 235.573 518.463 cv
235.483 518.157 li
237.877 517.185 li
238.273 517.185 li
238.273 523.017 li
238.273 523.575 mo
238.273 528.399 li
238.561 528.687 238.867 528.921 239.191 529.065 cv
239.515 529.209 239.839 529.281 240.181 529.281 cv
240.703 529.281 241.189 528.993 241.657 528.399 cv
242.125 527.823 242.359 526.959 242.359 525.843 cv
242.359 524.817 242.125 524.025 241.657 523.467 cv
241.189 522.927 240.667 522.639 240.091 522.639 cv
239.767 522.639 239.461 522.729 239.173 522.873 cv
238.921 522.999 238.633 523.233 238.273 523.575 cv
f
246.409 524.655 mo
246.409 525.861 246.697 526.797 247.291 527.463 cv
247.867 528.147 248.569 528.489 249.361 528.489 cv
249.865 528.489 250.315 528.345 250.711 528.057 cv
251.107 527.769 251.431 527.283 251.701 526.563 cv
251.989 526.743 li
251.845 527.553 251.485 528.291 250.909 528.939 cv
250.315 529.587 249.577 529.911 248.677 529.911 cv
247.705 529.911 246.877 529.551 246.193 528.795 cv
245.509 528.039 245.167 527.031 245.167 525.753 cv
245.167 524.385 245.509 523.305 246.229 522.531 cv
246.931 521.775 247.813 521.379 248.893 521.379 cv
249.793 521.379 250.531 521.685 251.107 522.279 cv
251.683 522.873 251.989 523.665 251.989 524.655 cv
246.409 524.655 li
246.409 524.151 mo
250.135 524.151 li
250.099 523.647 250.045 523.269 249.955 523.053 cv
249.811 522.729 249.595 522.477 249.307 522.297 cv
249.019 522.117 248.713 522.009 248.389 522.009 cv
247.903 522.009 247.471 522.207 247.093 522.585 cv
246.697 522.963 246.481 523.485 246.409 524.151 cv
f
255.409 521.397 mo
255.409 523.197 li
256.075 522.009 256.759 521.397 257.479 521.397 cv
257.803 521.397 258.055 521.505 258.271 521.685 cv
258.487 521.883 258.595 522.117 258.595 522.369 cv
258.595 522.603 258.505 522.801 258.361 522.945 cv
258.217 523.107 258.037 523.179 257.821 523.179 cv
257.605 523.179 257.389 523.089 257.137 522.873 cv
256.885 522.675 256.687 522.567 256.579 522.567 cv
256.471 522.567 256.345 522.639 256.237 522.747 cv
255.967 522.999 255.697 523.395 255.409 523.935 cv
255.409 527.805 li
255.409 528.255 255.463 528.597 255.571 528.813 cv
255.643 528.975 255.787 529.101 255.985 529.209 cv
256.165 529.317 256.453 529.353 256.813 529.353 cv
256.813 529.677 li
252.691 529.677 li
252.691 529.353 li
253.087 529.353 253.393 529.299 253.609 529.173 cv
253.753 529.083 253.843 528.939 253.915 528.723 cv
253.951 528.615 253.969 528.327 253.969 527.859 cv
253.969 524.745 li
253.969 523.809 253.933 523.251 253.897 523.071 cv
253.861 522.891 253.789 522.765 253.681 522.675 cv
253.573 522.603 253.447 522.549 253.303 522.549 cv
253.123 522.549 252.907 522.603 252.691 522.693 cv
252.601 522.369 li
255.049 521.397 li
255.409 521.397 li
f
gsave
64.4297 489.833 mo
357.048 489.833 li
357.048 381.233 li
64.4297 381.233 li
64.4297 489.833 li
clp
2 lc
64.4297 489.833 mo
357.048 489.833 li
1 /0 /CSD get_res sepcs
.309804 sep
@
grestore
64.4297 489.833 mo
60.9297 489.833 li
f
64.4297 489.833 mo
60.9297 489.833 li
@
35.5777 490.197 mo
35.5777 488.847 35.7757 487.677 36.1897 486.687 cv
36.5857 485.715 37.1437 484.977 37.8277 484.491 cv
38.3497 484.113 38.8897 483.915 39.4657 483.915 cv
40.3657 483.915 41.1937 484.383 41.9317 485.319 cv
42.8317 486.471 43.2817 488.037 43.2817 490.017 cv
43.2817 491.403 43.0837 492.573 42.6877 493.545 cv
42.2917 494.517 41.7697 495.201 41.1577 495.633 cv
40.5457 496.065 39.9517 496.281 39.3757 496.281 cv
38.2237 496.281 37.2877 495.615 36.5317 494.283 cv
35.8837 493.167 35.5777 491.799 35.5777 490.197 cv
37.3057 490.413 mo
37.3057 492.069 37.5037 493.401 37.9177 494.427 cv
38.2417 495.309 38.7277 495.741 39.4117 495.741 cv
39.7177 495.741 40.0417 495.615 40.3837 495.327 cv
40.7257 495.039 40.9777 494.571 41.1577 493.887 cv
41.4277 492.879 41.5717 491.457 41.5717 489.621 cv
41.5717 488.271 41.4277 487.137 41.1397 486.219 cv
40.9237 485.553 40.6537 485.085 40.3297 484.797 cv
40.0777 484.599 39.7897 484.491 39.4477 484.491 cv
39.0517 484.491 38.6917 484.671 38.3857 485.031 cv
37.9537 485.535 37.6657 486.291 37.5217 487.335 cv
37.3777 488.379 37.3057 489.405 37.3057 490.413 cv
f
46.1797 494.373 mo
46.4497 494.373 46.6837 494.481 46.8637 494.661 cv
47.0437 494.859 47.1517 495.093 47.1517 495.345 cv
47.1517 495.633 47.0437 495.867 46.8637 496.047 cv
46.6657 496.227 46.4317 496.317 46.1797 496.317 cv
45.9097 496.317 45.6757 496.227 45.4957 496.047 cv
45.2977 495.867 45.2077 495.633 45.2077 495.345 cv
45.2077 495.093 45.2977 494.859 45.4957 494.661 cv
45.6757 494.481 45.9097 494.373 46.1797 494.373 cv
f
49.0777 490.197 mo
49.0777 488.847 49.2757 487.677 49.6897 486.687 cv
50.0857 485.715 50.6437 484.977 51.3277 484.491 cv
51.8497 484.113 52.3897 483.915 52.9657 483.915 cv
53.8657 483.915 54.6937 484.383 55.4317 485.319 cv
56.3317 486.471 56.7817 488.037 56.7817 490.017 cv
56.7817 491.403 56.5837 492.573 56.1877 493.545 cv
55.7917 494.517 55.2697 495.201 54.6577 495.633 cv
54.0457 496.065 53.4517 496.281 52.8757 496.281 cv
51.7237 496.281 50.7877 495.615 50.0317 494.283 cv
49.3837 493.167 49.0777 491.799 49.0777 490.197 cv
50.8057 490.413 mo
50.8057 492.069 51.0037 493.401 51.4177 494.427 cv
51.7417 495.309 52.2277 495.741 52.9117 495.741 cv
53.2177 495.741 53.5417 495.615 53.8837 495.327 cv
54.2257 495.039 54.4777 494.571 54.6577 493.887 cv
54.9277 492.879 55.0717 491.457 55.0717 489.621 cv
55.0717 488.271 54.9277 487.137 54.6397 486.219 cv
54.4237 485.553 54.1537 485.085 53.8297 484.797 cv
53.5777 484.599 53.2897 484.491 52.9477 484.491 cv
52.5517 484.491 52.1917 484.671 51.8857 485.031 cv
51.4537 485.535 51.1657 486.291 51.0217 487.335 cv
50.8777 488.379 50.8057 489.405 50.8057 490.413 cv
f
gsave
64.4297 489.833 mo
357.048 489.833 li
357.048 381.233 li
64.4297 381.233 li
64.4297 489.833 li
clp
2 lc
64.4297 462.683 mo
357.048 462.683 li
1 /0 /CSD get_res sepcs
.309804 sep
@
grestore
64.4297 462.683 mo
60.9297 462.683 li
f
64.4297 462.683 mo
60.9297 462.683 li
@
28.0357 458.187 mo
30.9337 456.765 li
31.2217 456.765 li
31.2217 466.827 li
31.2217 467.511 31.2397 467.925 31.3117 468.087 cv
31.3657 468.249 31.4737 468.375 31.6537 468.465 cv
31.8337 468.555 32.1937 468.609 32.7337 468.609 cv
32.7337 468.933 li
28.2517 468.933 li
28.2517 468.609 li
28.8097 468.609 29.1697 468.555 29.3317 468.465 cv
29.4937 468.393 29.6017 468.267 29.6737 468.123 cv
29.7457 467.979 29.7817 467.547 29.7817 466.827 cv
29.7817 460.401 li
29.7817 459.537 29.7457 458.979 29.6917 458.727 cv
29.6557 458.547 29.5837 458.403 29.4757 458.313 cv
29.3677 458.241 29.2237 458.187 29.0797 458.187 cv
28.8637 458.187 28.5577 458.277 28.1797 458.457 cv
28.0357 458.187 li
f
35.5777 463.047 mo
35.5777 461.697 35.7757 460.527 36.1897 459.537 cv
36.5857 458.565 37.1437 457.827 37.8277 457.341 cv
38.3497 456.963 38.8897 456.765 39.4657 456.765 cv
40.3657 456.765 41.1937 457.233 41.9317 458.169 cv
42.8317 459.321 43.2817 460.887 43.2817 462.867 cv
43.2817 464.253 43.0837 465.423 42.6877 466.395 cv
42.2917 467.367 41.7697 468.051 41.1577 468.483 cv
40.5457 468.915 39.9517 469.131 39.3757 469.131 cv
38.2237 469.131 37.2877 468.465 36.5317 467.133 cv
35.8837 466.017 35.5777 464.649 35.5777 463.047 cv
37.3057 463.263 mo
37.3057 464.919 37.5037 466.251 37.9177 467.277 cv
38.2417 468.159 38.7277 468.591 39.4117 468.591 cv
39.7177 468.591 40.0417 468.465 40.3837 468.177 cv
40.7257 467.889 40.9777 467.421 41.1577 466.737 cv
41.4277 465.729 41.5717 464.307 41.5717 462.471 cv
41.5717 461.121 41.4277 459.987 41.1397 459.069 cv
40.9237 458.403 40.6537 457.935 40.3297 457.647 cv
40.0777 457.449 39.7897 457.341 39.4477 457.341 cv
39.0517 457.341 38.6917 457.521 38.3857 457.881 cv
37.9537 458.385 37.6657 459.141 37.5217 460.185 cv
37.3777 461.229 37.3057 462.255 37.3057 463.263 cv
f
46.1797 467.223 mo
46.4497 467.223 46.6837 467.331 46.8637 467.511 cv
47.0437 467.709 47.1517 467.943 47.1517 468.195 cv
47.1517 468.483 47.0437 468.717 46.8637 468.897 cv
46.6657 469.077 46.4317 469.167 46.1797 469.167 cv
45.9097 469.167 45.6757 469.077 45.4957 468.897 cv
45.2977 468.717 45.2077 468.483 45.2077 468.195 cv
45.2077 467.943 45.2977 467.709 45.4957 467.511 cv
45.6757 467.331 45.9097 467.223 46.1797 467.223 cv
f
49.0777 463.047 mo
49.0777 461.697 49.2757 460.527 49.6897 459.537 cv
50.0857 458.565 50.6437 457.827 51.3277 457.341 cv
51.8497 456.963 52.3897 456.765 52.9657 456.765 cv
53.8657 456.765 54.6937 457.233 55.4317 458.169 cv
56.3317 459.321 56.7817 460.887 56.7817 462.867 cv
56.7817 464.253 56.5837 465.423 56.1877 466.395 cv
55.7917 467.367 55.2697 468.051 54.6577 468.483 cv
54.0457 468.915 53.4517 469.131 52.8757 469.131 cv
51.7237 469.131 50.7877 468.465 50.0317 467.133 cv
49.3837 466.017 49.0777 464.649 49.0777 463.047 cv
50.8057 463.263 mo
50.8057 464.919 51.0037 466.251 51.4177 467.277 cv
51.7417 468.159 52.2277 468.591 52.9117 468.591 cv
53.2177 468.591 53.5417 468.465 53.8837 468.177 cv
54.2257 467.889 54.4777 467.421 54.6577 466.737 cv
54.9277 465.729 55.0717 464.307 55.0717 462.471 cv
55.0717 461.121 54.9277 459.987 54.6397 459.069 cv
54.4237 458.403 54.1537 457.935 53.8297 457.647 cv
53.5777 457.449 53.2897 457.341 52.9477 457.341 cv
52.5517 457.341 52.1917 457.521 51.8857 457.881 cv
51.4537 458.385 51.1657 459.141 51.0217 460.185 cv
50.8777 461.229 50.8057 462.255 50.8057 463.263 cv
f
gsave
64.4297 489.833 mo
357.048 489.833 li
357.048 381.233 li
64.4297 381.233 li
64.4297 489.833 li
clp
64.0297 435.133 mo
357.448 435.133 li
357.448 435.933 li
64.0297 435.933 li
64.0297 435.133 li
1 /0 /CSD get_res sepcs
.309804 sep
f
grestore
64.4297 435.533 mo
60.9297 435.533 li
f
64.4297 435.533 mo
60.9297 435.533 li
@
34.1737 439.497 mo
33.3457 441.783 li
26.3077 441.783 li
26.3077 441.459 li
28.3777 439.587 29.8357 438.039 30.6817 436.833 cv
31.5097 435.645 31.9417 434.547 31.9417 433.557 cv
31.9417 432.801 31.7077 432.189 31.2397 431.703 cv
30.7717 431.217 30.2317 430.965 29.6017 430.965 cv
29.0077 430.965 28.4857 431.145 28.0177 431.487 cv
27.5497 431.829 27.2077 432.333 26.9917 432.981 cv
26.6677 432.981 li
26.8117 431.901 27.1717 431.073 27.7837 430.497 cv
28.3957 429.921 29.1517 429.615 30.0517 429.615 cv
31.0237 429.615 31.8337 429.939 32.4817 430.551 cv
33.1297 431.181 33.4537 431.919 33.4537 432.747 cv
33.4537 433.359 33.3097 433.953 33.0397 434.565 cv
32.5897 435.519 31.8877 436.527 30.9157 437.571 cv
29.4577 439.173 28.5397 440.127 28.1797 440.451 cv
31.2937 440.451 li
31.9237 440.451 32.3737 440.433 32.6257 440.379 cv
32.8777 440.343 33.1117 440.253 33.3277 440.109 cv
33.5257 439.965 33.7057 439.767 33.8497 439.497 cv
34.1737 439.497 li
f
35.5777 435.897 mo
35.5777 434.547 35.7757 433.377 36.1897 432.387 cv
36.5857 431.415 37.1437 430.677 37.8277 430.191 cv
38.3497 429.813 38.8897 429.615 39.4657 429.615 cv
40.3657 429.615 41.1937 430.083 41.9317 431.019 cv
42.8317 432.171 43.2817 433.737 43.2817 435.717 cv
43.2817 437.103 43.0837 438.273 42.6877 439.245 cv
42.2917 440.217 41.7697 440.901 41.1577 441.333 cv
40.5457 441.765 39.9517 441.981 39.3757 441.981 cv
38.2237 441.981 37.2877 441.315 36.5317 439.983 cv
35.8837 438.867 35.5777 437.499 35.5777 435.897 cv
37.3057 436.113 mo
37.3057 437.769 37.5037 439.101 37.9177 440.127 cv
38.2417 441.009 38.7277 441.441 39.4117 441.441 cv
39.7177 441.441 40.0417 441.315 40.3837 441.027 cv
40.7257 440.739 40.9777 440.271 41.1577 439.587 cv
41.4277 438.579 41.5717 437.157 41.5717 435.321 cv
41.5717 433.971 41.4277 432.837 41.1397 431.919 cv
40.9237 431.253 40.6537 430.785 40.3297 430.497 cv
40.0777 430.299 39.7897 430.191 39.4477 430.191 cv
39.0517 430.191 38.6917 430.371 38.3857 430.731 cv
37.9537 431.235 37.6657 431.991 37.5217 433.035 cv
37.3777 434.079 37.3057 435.105 37.3057 436.113 cv
f
46.1797 440.073 mo
46.4497 440.073 46.6837 440.181 46.8637 440.361 cv
47.0437 440.559 47.1517 440.793 47.1517 441.045 cv
47.1517 441.333 47.0437 441.567 46.8637 441.747 cv
46.6657 441.927 46.4317 442.017 46.1797 442.017 cv
45.9097 442.017 45.6757 441.927 45.4957 441.747 cv
45.2977 441.567 45.2077 441.333 45.2077 441.045 cv
45.2077 440.793 45.2977 440.559 45.4957 440.361 cv
45.6757 440.181 45.9097 440.073 46.1797 440.073 cv
f
49.0777 435.897 mo
49.0777 434.547 49.2757 433.377 49.6897 432.387 cv
50.0857 431.415 50.6437 430.677 51.3277 430.191 cv
51.8497 429.813 52.3897 429.615 52.9657 429.615 cv
53.8657 429.615 54.6937 430.083 55.4317 431.019 cv
56.3317 432.171 56.7817 433.737 56.7817 435.717 cv
56.7817 437.103 56.5837 438.273 56.1877 439.245 cv
55.7917 440.217 55.2697 440.901 54.6577 441.333 cv
54.0457 441.765 53.4517 441.981 52.8757 441.981 cv
51.7237 441.981 50.7877 441.315 50.0317 439.983 cv
49.3837 438.867 49.0777 437.499 49.0777 435.897 cv
50.8057 436.113 mo
50.8057 437.769 51.0037 439.101 51.4177 440.127 cv
51.7417 441.009 52.2277 441.441 52.9117 441.441 cv
53.2177 441.441 53.5417 441.315 53.8837 441.027 cv
54.2257 440.739 54.4777 440.271 54.6577 439.587 cv
54.9277 438.579 55.0717 437.157 55.0717 435.321 cv
55.0717 433.971 54.9277 432.837 54.6397 431.919 cv
54.4237 431.253 54.1537 430.785 53.8297 430.497 cv
53.5777 430.299 53.2897 430.191 52.9477 430.191 cv
52.5517 430.191 52.1917 430.371 51.8857 430.731 cv
51.4537 431.235 51.1657 431.991 51.0217 433.035 cv
50.8777 434.079 50.8057 435.105 50.8057 436.113 cv
f
gsave
64.4297 489.833 mo
357.048 489.833 li
357.048 381.233 li
64.4297 381.233 li
64.4297 489.833 li
clp
64.0297 407.983 mo
357.448 407.983 li
357.448 408.783 li
64.0297 408.783 li
64.0297 407.983 li
1 /0 /CSD get_res sepcs
.309804 sep
f
grestore
64.4297 408.383 mo
60.9297 408.383 li
f
64.4297 408.383 mo
60.9297 408.383 li
@
26.8477 404.985 mo
27.1717 404.193 27.6037 403.563 28.1257 403.131 cv
28.6477 402.699 29.2957 402.465 30.0697 402.465 cv
31.0237 402.465 31.7617 402.789 32.2657 403.401 cv
32.6437 403.869 32.8417 404.373 32.8417 404.877 cv
32.8417 405.759 32.2837 406.659 31.2037 407.577 cv
31.9237 407.865 32.4817 408.279 32.8597 408.819 cv
33.2377 409.359 33.4357 409.971 33.4357 410.691 cv
33.4357 411.735 33.0937 412.617 32.4457 413.373 cv
31.5817 414.345 30.3577 414.831 28.7377 414.831 cv
27.9277 414.831 27.3877 414.723 27.0997 414.543 cv
26.8117 414.363 26.6677 414.147 26.6677 413.895 cv
26.6677 413.733 26.7217 413.589 26.8657 413.463 cv
26.9917 413.337 27.1537 413.265 27.3697 413.265 cv
27.5137 413.265 27.6577 413.301 27.8017 413.337 cv
27.9097 413.373 28.1257 413.481 28.4857 413.661 cv
28.8277 413.841 29.0797 413.949 29.2237 413.985 cv
29.4397 414.057 29.6557 414.075 29.9077 414.075 cv
30.5017 414.075 31.0237 413.859 31.4737 413.391 cv
31.9057 412.923 32.1397 412.383 32.1397 411.735 cv
32.1397 411.285 32.0317 410.835 31.8337 410.385 cv
31.6717 410.061 31.5097 409.827 31.3297 409.647 cv
31.0777 409.413 30.7177 409.197 30.2857 408.999 cv
29.8537 408.819 29.4037 408.711 28.9357 408.711 cv
28.6657 408.711 li
28.6657 408.459 li
29.1157 408.405 29.5837 408.243 30.0517 407.955 cv
30.5197 407.685 30.8437 407.361 31.0597 406.965 cv
31.2757 406.587 31.3837 406.155 31.3837 405.687 cv
31.3837 405.093 31.1857 404.607 30.8077 404.229 cv
30.4297 403.869 29.9617 403.671 29.4037 403.671 cv
28.5037 403.671 27.7477 404.157 27.1357 405.129 cv
26.8477 404.985 li
f
35.5777 408.747 mo
35.5777 407.397 35.7757 406.227 36.1897 405.237 cv
36.5857 404.265 37.1437 403.527 37.8277 403.041 cv
38.3497 402.663 38.8897 402.465 39.4657 402.465 cv
40.3657 402.465 41.1937 402.933 41.9317 403.869 cv
42.8317 405.021 43.2817 406.587 43.2817 408.567 cv
43.2817 409.953 43.0837 411.123 42.6877 412.095 cv
42.2917 413.067 41.7697 413.751 41.1577 414.183 cv
40.5457 414.615 39.9517 414.831 39.3757 414.831 cv
38.2237 414.831 37.2877 414.165 36.5317 412.833 cv
35.8837 411.717 35.5777 410.349 35.5777 408.747 cv
37.3057 408.963 mo
37.3057 410.619 37.5037 411.951 37.9177 412.977 cv
38.2417 413.859 38.7277 414.291 39.4117 414.291 cv
39.7177 414.291 40.0417 414.165 40.3837 413.877 cv
40.7257 413.589 40.9777 413.121 41.1577 412.437 cv
41.4277 411.429 41.5717 410.007 41.5717 408.171 cv
41.5717 406.821 41.4277 405.687 41.1397 404.769 cv
40.9237 404.103 40.6537 403.635 40.3297 403.347 cv
40.0777 403.149 39.7897 403.041 39.4477 403.041 cv
39.0517 403.041 38.6917 403.221 38.3857 403.581 cv
37.9537 404.085 37.6657 404.841 37.5217 405.885 cv
37.3777 406.929 37.3057 407.955 37.3057 408.963 cv
f
46.1797 412.923 mo
46.4497 412.923 46.6837 413.031 46.8637 413.211 cv
47.0437 413.409 47.1517 413.643 47.1517 413.895 cv
47.1517 414.183 47.0437 414.417 46.8637 414.597 cv
46.6657 414.777 46.4317 414.867 46.1797 414.867 cv
45.9097 414.867 45.6757 414.777 45.4957 414.597 cv
45.2977 414.417 45.2077 414.183 45.2077 413.895 cv
45.2077 413.643 45.2977 413.409 45.4957 413.211 cv
45.6757 413.031 45.9097 412.923 46.1797 412.923 cv
f
49.0777 408.747 mo
49.0777 407.397 49.2757 406.227 49.6897 405.237 cv
50.0857 404.265 50.6437 403.527 51.3277 403.041 cv
51.8497 402.663 52.3897 402.465 52.9657 402.465 cv
53.8657 402.465 54.6937 402.933 55.4317 403.869 cv
56.3317 405.021 56.7817 406.587 56.7817 408.567 cv
56.7817 409.953 56.5837 411.123 56.1877 412.095 cv
55.7917 413.067 55.2697 413.751 54.6577 414.183 cv
54.0457 414.615 53.4517 414.831 52.8757 414.831 cv
51.7237 414.831 50.7877 414.165 50.0317 412.833 cv
49.3837 411.717 49.0777 410.349 49.0777 408.747 cv
50.8057 408.963 mo
50.8057 410.619 51.0037 411.951 51.4177 412.977 cv
51.7417 413.859 52.2277 414.291 52.9117 414.291 cv
53.2177 414.291 53.5417 414.165 53.8837 413.877 cv
54.2257 413.589 54.4777 413.121 54.6577 412.437 cv
54.9277 411.429 55.0717 410.007 55.0717 408.171 cv
55.0717 406.821 54.9277 405.687 54.6397 404.769 cv
54.4237 404.103 54.1537 403.635 53.8297 403.347 cv
53.5777 403.149 53.2897 403.041 52.9477 403.041 cv
52.5517 403.041 52.1917 403.221 51.8857 403.581 cv
51.4537 404.085 51.1657 404.841 51.0217 405.885 cv
50.8777 406.929 50.8057 407.955 50.8057 408.963 cv
f
gsave
64.4297 489.833 mo
357.048 489.833 li
357.048 381.233 li
64.4297 381.233 li
64.4297 489.833 li
clp
2 lc
64.4297 381.233 mo
357.048 381.233 li
1 /0 /CSD get_res sepcs
.309804 sep
@
grestore
64.4297 381.233 mo
60.9297 381.233 li
f
64.4297 381.233 mo
60.9297 381.233 li
@
34.2997 383.091 mo
34.2997 384.333 li
32.6977 384.333 li
32.6977 387.483 li
31.2577 387.483 li
31.2577 384.333 li
26.2177 384.333 li
26.2177 383.217 li
31.7437 375.315 li
32.6977 375.315 li
32.6977 383.091 li
34.2997 383.091 li
31.2577 383.091 mo
31.2577 377.169 li
27.0637 383.091 li
31.2577 383.091 li
f
35.5777 381.597 mo
35.5777 380.247 35.7757 379.077 36.1897 378.087 cv
36.5857 377.115 37.1437 376.377 37.8277 375.891 cv
38.3497 375.513 38.8897 375.315 39.4657 375.315 cv
40.3657 375.315 41.1937 375.783 41.9317 376.719 cv
42.8317 377.871 43.2817 379.437 43.2817 381.417 cv
43.2817 382.803 43.0837 383.973 42.6877 384.945 cv
42.2917 385.917 41.7697 386.601 41.1577 387.033 cv
40.5457 387.465 39.9517 387.681 39.3757 387.681 cv
38.2237 387.681 37.2877 387.015 36.5317 385.683 cv
35.8837 384.567 35.5777 383.199 35.5777 381.597 cv
37.3057 381.813 mo
37.3057 383.469 37.5037 384.801 37.9177 385.827 cv
38.2417 386.709 38.7277 387.141 39.4117 387.141 cv
39.7177 387.141 40.0417 387.015 40.3837 386.727 cv
40.7257 386.439 40.9777 385.971 41.1577 385.287 cv
41.4277 384.279 41.5717 382.857 41.5717 381.021 cv
41.5717 379.671 41.4277 378.537 41.1397 377.619 cv
40.9237 376.953 40.6537 376.485 40.3297 376.197 cv
40.0777 375.999 39.7897 375.891 39.4477 375.891 cv
39.0517 375.891 38.6917 376.071 38.3857 376.431 cv
37.9537 376.935 37.6657 377.691 37.5217 378.735 cv
37.3777 379.779 37.3057 380.805 37.3057 381.813 cv
f
46.1797 385.773 mo
46.4497 385.773 46.6837 385.881 46.8637 386.061 cv
47.0437 386.259 47.1517 386.493 47.1517 386.745 cv
47.1517 387.033 47.0437 387.267 46.8637 387.447 cv
46.6657 387.627 46.4317 387.717 46.1797 387.717 cv
45.9097 387.717 45.6757 387.627 45.4957 387.447 cv
45.2977 387.267 45.2077 387.033 45.2077 386.745 cv
45.2077 386.493 45.2977 386.259 45.4957 386.061 cv
45.6757 385.881 45.9097 385.773 46.1797 385.773 cv
f
49.0777 381.597 mo
49.0777 380.247 49.2757 379.077 49.6897 378.087 cv
50.0857 377.115 50.6437 376.377 51.3277 375.891 cv
51.8497 375.513 52.3897 375.315 52.9657 375.315 cv
53.8657 375.315 54.6937 375.783 55.4317 376.719 cv
56.3317 377.871 56.7817 379.437 56.7817 381.417 cv
56.7817 382.803 56.5837 383.973 56.1877 384.945 cv
55.7917 385.917 55.2697 386.601 54.6577 387.033 cv
54.0457 387.465 53.4517 387.681 52.8757 387.681 cv
51.7237 387.681 50.7877 387.015 50.0317 385.683 cv
49.3837 384.567 49.0777 383.199 49.0777 381.597 cv
50.8057 381.813 mo
50.8057 383.469 51.0037 384.801 51.4177 385.827 cv
51.7417 386.709 52.2277 387.141 52.9117 387.141 cv
53.2177 387.141 53.5417 387.015 53.8837 386.727 cv
54.2257 386.439 54.4777 385.971 54.6577 385.287 cv
54.9277 384.279 55.0717 382.857 55.0717 381.021 cv
55.0717 379.671 54.9277 378.537 54.6397 377.619 cv
54.4237 376.953 54.1537 376.485 53.8297 376.197 cv
53.5777 375.999 53.2897 375.891 52.9477 375.891 cv
52.5517 375.891 52.1917 376.071 51.8857 376.431 cv
51.4537 376.935 51.1657 377.691 51.0217 378.735 cv
50.8777 379.779 50.8057 380.805 50.8057 381.813 cv
f
12.506 495.601 mo
15.98 495.601 li
16.736 495.601 17.186 495.529 17.366 495.349 cv
17.636 495.133 17.762 494.809 17.762 494.341 cv
17.762 493.891 li
18.086 493.891 li
18.086 498.985 li
17.762 498.985 li
17.762 498.535 li
17.762 498.049 17.6 497.689 17.276 497.455 cv
17.096 497.347 16.664 497.293 15.98 497.293 cv
8.27596 497.293 li
7.53796 497.293 7.06996 497.383 6.87196 497.527 cv
6.61996 497.761 6.49396 498.103 6.49396 498.535 cv
6.49396 498.985 li
6.16996 498.985 li
6.16996 494.629 li
6.16996 493.567 6.29596 492.721 6.51196 492.109 cv
6.72796 491.497 7.10596 490.975 7.60996 490.543 cv
8.13196 490.129 8.74396 489.913 9.46396 489.913 cv
10.436 489.913 11.228 490.237 11.84 490.885 cv
12.452 491.533 12.758 492.433 12.758 493.603 cv
12.758 493.891 12.74 494.215 12.704 494.539 cv
12.668 494.863 12.596 495.223 12.506 495.601 cv
12.002 495.601 mo
12.074 495.295 12.11 495.025 12.146 494.773 cv
12.182 494.539 12.182 494.341 12.182 494.161 cv
12.182 493.549 11.948 493.027 11.48 492.577 cv
11.012 492.145 10.4 491.911 9.64396 491.911 cv
9.13996 491.911 8.65396 492.019 8.20396 492.235 cv
7.77196 492.451 7.42996 492.739 7.21396 493.135 cv
6.99796 493.531 6.87196 493.963 6.87196 494.449 cv
6.87196 494.755 6.94396 495.133 7.05196 495.601 cv
12.002 495.601 li
f
9.80596 484.783 mo
9.80596 483.559 10.274 482.587 11.192 481.849 cv
11.984 481.237 12.902 480.913 13.91 480.913 cv
14.63 480.913 15.368 481.093 16.106 481.435 cv
16.844 481.777 17.402 482.245 17.762 482.857 cv
18.122 483.469 18.32 484.135 18.32 484.873 cv
18.32 486.097 17.852 487.051 16.88 487.771 cv
16.07 488.383 15.152 488.671 14.144 488.671 cv
13.406 488.671 12.668 488.491 11.948 488.131 cv
11.228 487.771 10.688 487.285 10.328 486.691 cv
9.98596 486.097 9.80596 485.467 9.80596 484.783 cv
10.364 485.053 mo
10.364 485.377 10.472 485.683 10.652 485.989 cv
10.832 486.313 11.156 486.565 11.624 486.745 cv
12.092 486.943 12.686 487.033 13.406 487.033 cv
14.576 487.033 15.584 486.817 16.43 486.349 cv
17.294 485.881 17.708 485.269 17.708 484.495 cv
17.708 483.937 17.474 483.469 17.006 483.091 cv
16.538 482.731 15.746 482.533 14.594 482.533 cv
13.172 482.533 12.038 482.857 11.21 483.469 cv
10.652 483.883 10.364 484.405 10.364 485.053 cv
f
9.80596 474.523 mo
12.542 474.523 li
12.542 474.811 li
11.678 475.027 11.102 475.315 10.778 475.657 cv
10.472 476.017 10.31 476.449 10.31 476.989 cv
10.31 477.421 10.418 477.745 10.634 477.997 cv
10.85 478.249 11.102 478.375 11.354 478.375 cv
11.696 478.375 11.984 478.285 12.2 478.087 cv
12.452 477.907 12.704 477.547 12.974 476.971 cv
13.586 475.693 li
14.18 474.505 14.954 473.911 15.89 473.911 cv
16.628 473.911 17.222 474.199 17.654 474.739 cv
18.086 475.297 18.32 475.909 18.32 476.593 cv
18.32 477.097 18.23 477.655 18.068 478.285 cv
18.014 478.483 17.978 478.645 17.978 478.771 cv
17.978 478.915 18.05 479.005 18.194 479.077 cv
18.194 479.365 li
15.332 479.365 li
15.332 479.077 li
16.16 478.915 16.79 478.609 17.204 478.141 cv
17.618 477.673 17.816 477.151 17.816 476.575 cv
17.816 476.179 17.708 475.855 17.456 475.603 cv
17.222 475.351 16.934 475.207 16.592 475.207 cv
16.196 475.207 15.872 475.351 15.584 475.639 cv
15.314 475.927 14.972 476.503 14.54 477.349 cv
14.126 478.195 13.748 478.753 13.388 479.005 cv
13.064 479.275 12.632 479.401 12.128 479.401 cv
11.48 479.401 10.922 479.185 10.472 478.717 cv
10.04 478.267 9.80596 477.673 9.80596 476.953 cv
9.80596 476.647 9.87796 476.269 10.004 475.801 cv
10.094 475.513 10.13 475.315 10.13 475.207 cv
10.13 475.117 10.112 475.045 10.076 474.991 cv
10.04 474.955 9.94996 474.883 9.80596 474.811 cv
9.80596 474.523 li
f
5.59396 470.671 mo
5.59396 470.419 5.68396 470.221 5.84596 470.041 cv
6.02596 469.879 6.22396 469.789 6.47596 469.789 cv
6.72796 469.789 6.92596 469.879 7.10596 470.041 cv
7.28596 470.221 7.37596 470.419 7.37596 470.671 cv
7.37596 470.923 7.28596 471.121 7.10596 471.301 cv
6.92596 471.481 6.72796 471.571 6.47596 471.571 cv
6.22396 471.571 6.02596 471.499 5.84596 471.319 cv
5.68396 471.139 5.59396 470.923 5.59396 470.671 cv
9.80596 469.933 mo
16.268 469.933 li
16.772 469.933 17.114 469.897 17.276 469.825 cv
17.456 469.753 17.582 469.645 17.654 469.501 cv
17.726 469.357 17.762 469.105 17.762 468.727 cv
18.086 468.727 li
18.086 472.633 li
17.762 472.633 li
17.762 472.237 17.726 471.985 17.654 471.841 cv
17.582 471.715 17.456 471.607 17.276 471.535 cv
17.096 471.463 16.772 471.409 16.268 471.409 cv
13.172 471.409 li
12.308 471.409 11.732 471.445 11.462 471.481 cv
11.282 471.517 11.156 471.589 11.084 471.679 cv
11.012 471.769 10.958 471.895 10.958 472.039 cv
10.958 472.201 11.012 472.399 11.102 472.633 cv
10.778 472.759 li
9.80596 470.329 li
9.80596 469.933 li
f
7.39396 465.379 mo
10.04 465.379 li
10.04 463.489 li
10.652 463.489 li
10.652 465.379 li
15.872 465.379 li
16.394 465.379 16.754 465.307 16.934 465.163 cv
17.114 465.019 17.204 464.821 17.204 464.569 cv
17.204 464.389 17.15 464.191 17.024 464.011 cv
16.916 463.831 16.736 463.705 16.484 463.597 cv
16.484 463.255 li
17.06 463.471 17.492 463.759 17.78 464.119 cv
18.068 464.497 18.194 464.875 18.194 465.271 cv
18.194 465.559 18.122 465.829 17.978 466.081 cv
17.834 466.333 17.636 466.531 17.348 466.639 cv
17.078 466.765 16.646 466.819 16.07 466.819 cv
10.652 466.819 li
10.652 468.097 li
10.364 468.097 li
10.238 467.773 10.022 467.449 9.71596 467.107 cv
9.40996 466.783 9.04996 466.477 8.61796 466.207 cv
8.40196 466.081 7.98796 465.901 7.39396 465.649 cv
7.39396 465.379 li
f
5.59396 460.663 mo
5.59396 460.411 5.68396 460.213 5.84596 460.033 cv
6.02596 459.871 6.22396 459.781 6.47596 459.781 cv
6.72796 459.781 6.92596 459.871 7.10596 460.033 cv
7.28596 460.213 7.37596 460.411 7.37596 460.663 cv
7.37596 460.915 7.28596 461.113 7.10596 461.293 cv
6.92596 461.473 6.72796 461.563 6.47596 461.563 cv
6.22396 461.563 6.02596 461.491 5.84596 461.311 cv
5.68396 461.131 5.59396 460.915 5.59396 460.663 cv
9.80596 459.925 mo
16.268 459.925 li
16.772 459.925 17.114 459.889 17.276 459.817 cv
17.456 459.745 17.582 459.637 17.654 459.493 cv
17.726 459.349 17.762 459.097 17.762 458.719 cv
18.086 458.719 li
18.086 462.625 li
17.762 462.625 li
17.762 462.229 17.726 461.977 17.654 461.833 cv
17.582 461.707 17.456 461.599 17.276 461.527 cv
17.096 461.455 16.772 461.401 16.268 461.401 cv
13.172 461.401 li
12.308 461.401 11.732 461.437 11.462 461.473 cv
11.282 461.509 11.156 461.581 11.084 461.671 cv
11.012 461.761 10.958 461.887 10.958 462.031 cv
10.958 462.193 11.012 462.391 11.102 462.625 cv
10.778 462.751 li
9.80596 460.321 li
9.80596 459.925 li
f
9.80596 453.769 mo
9.80596 452.545 10.274 451.573 11.192 450.835 cv
11.984 450.223 12.902 449.899 13.91 449.899 cv
14.63 449.899 15.368 450.079 16.106 450.421 cv
16.844 450.763 17.402 451.231 17.762 451.843 cv
18.122 452.455 18.32 453.121 18.32 453.859 cv
18.32 455.083 17.852 456.037 16.88 456.757 cv
16.07 457.369 15.152 457.657 14.144 457.657 cv
13.406 457.657 12.668 457.477 11.948 457.117 cv
11.228 456.757 10.688 456.271 10.328 455.677 cv
9.98596 455.083 9.80596 454.453 9.80596 453.769 cv
10.364 454.039 mo
10.364 454.363 10.472 454.669 10.652 454.975 cv
10.832 455.299 11.156 455.551 11.624 455.731 cv
12.092 455.929 12.686 456.019 13.406 456.019 cv
14.576 456.019 15.584 455.803 16.43 455.335 cv
17.294 454.867 17.708 454.255 17.708 453.481 cv
17.708 452.923 17.474 452.455 17.006 452.077 cv
16.538 451.717 15.746 451.519 14.594 451.519 cv
13.172 451.519 12.038 451.843 11.21 452.455 cv
10.652 452.869 10.364 453.391 10.364 454.039 cv
f
11.498 446.353 mo
10.382 445.417 9.80596 444.517 9.80596 443.653 cv
9.80596 443.221 9.91396 442.861 10.13 442.537 cv
10.346 442.213 10.706 441.961 11.21 441.763 cv
11.57 441.655 12.11 441.583 12.83 441.583 cv
16.268 441.583 li
16.772 441.583 17.132 441.547 17.312 441.457 cv
17.456 441.403 17.582 441.295 17.654 441.151 cv
17.726 441.007 17.762 440.737 17.762 440.341 cv
18.086 440.341 li
18.086 444.337 li
17.762 444.337 li
17.762 444.157 li
17.762 443.797 17.708 443.527 17.6 443.383 cv
17.492 443.239 17.312 443.131 17.096 443.059 cv
17.006 443.041 16.736 443.023 16.268 443.023 cv
12.974 443.023 li
12.254 443.023 11.714 443.131 11.39 443.311 cv
11.066 443.509 10.886 443.833 10.886 444.283 cv
10.886 444.985 11.264 445.669 12.02 446.353 cv
16.268 446.353 li
16.808 446.353 17.15 446.335 17.276 446.263 cv
17.456 446.191 17.582 446.065 17.654 445.921 cv
17.726 445.777 17.762 445.489 17.762 445.057 cv
18.086 445.057 li
18.086 449.035 li
17.762 449.035 li
17.762 448.855 li
17.762 448.459 17.672 448.171 17.456 448.027 cv
17.258 447.883 16.862 447.811 16.268 447.811 cv
13.28 447.811 li
12.308 447.811 11.732 447.847 11.516 447.883 cv
11.3 447.919 11.156 447.991 11.084 448.081 cv
11.012 448.171 10.958 448.297 10.958 448.441 cv
10.958 448.621 11.012 448.819 11.102 449.035 cv
10.778 449.161 li
9.80596 446.731 li
9.80596 446.353 li
11.498 446.353 li
f
6.81796 432.007 mo
11.534 432.007 li
11.534 429.397 li
11.534 428.713 11.444 428.263 11.228 428.029 cv
10.958 427.723 10.49 427.561 9.80596 427.525 cv
9.80596 427.183 li
13.946 427.183 li
13.946 427.525 li
13.37 427.597 13.01 427.687 12.83 427.759 cv
12.632 427.867 12.47 428.047 12.344 428.281 cv
12.236 428.533 12.164 428.893 12.164 429.397 cv
12.164 432.007 li
16.106 432.007 li
16.646 432.007 16.97 431.989 17.078 431.935 cv
17.186 431.899 17.276 431.809 17.348 431.701 cv
17.42 431.593 17.438 431.359 17.438 431.017 cv
17.438 429.001 li
17.438 428.335 17.402 427.849 17.294 427.543 cv
17.204 427.237 17.024 426.949 16.736 426.661 cv
16.376 426.301 15.836 425.923 15.098 425.545 cv
15.098 425.185 li
18.086 426.211 li
18.086 435.391 li
17.762 435.391 li
17.762 434.977 li
17.762 434.707 17.708 434.437 17.564 434.185 cv
17.474 434.005 17.33 433.879 17.15 433.807 cv
16.97 433.735 16.574 433.699 15.98 433.699 cv
8.23996 433.699 li
7.48396 433.699 7.01596 433.771 6.83596 433.915 cv
6.61996 434.131 6.49396 434.491 6.49396 434.977 cv
6.49396 435.391 li
6.16996 435.391 li
6.16996 426.211 li
8.77996 426.085 li
8.77996 426.427 li
8.16796 426.553 7.73596 426.697 7.50196 426.841 cv
7.26796 426.985 7.08796 427.219 6.94396 427.507 cv
6.87196 427.741 6.81796 428.155 6.81796 428.731 cv
6.81796 432.007 li
f
9.80596 421.855 mo
11.606 421.855 li
10.418 421.189 9.80596 420.505 9.80596 419.785 cv
9.80596 419.461 9.91396 419.209 10.094 418.993 cv
10.292 418.777 10.526 418.669 10.778 418.669 cv
11.012 418.669 11.21 418.759 11.354 418.903 cv
11.516 419.047 11.588 419.227 11.588 419.443 cv
11.588 419.659 11.498 419.875 11.282 420.127 cv
11.084 420.379 10.976 420.577 10.976 420.685 cv
10.976 420.793 11.048 420.919 11.156 421.027 cv
11.408 421.297 11.804 421.567 12.344 421.855 cv
16.214 421.855 li
16.664 421.855 17.006 421.801 17.222 421.693 cv
17.384 421.621 17.51 421.477 17.618 421.279 cv
17.726 421.099 17.762 420.811 17.762 420.451 cv
18.086 420.451 li
18.086 424.573 li
17.762 424.573 li
17.762 424.177 17.708 423.871 17.582 423.655 cv
17.492 423.511 17.348 423.421 17.132 423.349 cv
17.024 423.313 16.736 423.295 16.268 423.295 cv
13.154 423.295 li
12.218 423.295 11.66 423.331 11.48 423.367 cv
11.3 423.403 11.174 423.475 11.084 423.583 cv
11.012 423.691 10.958 423.817 10.958 423.961 cv
10.958 424.141 11.012 424.357 11.102 424.573 cv
10.778 424.663 li
9.80596 422.215 li
9.80596 421.855 li
f
9.80596 415.861 mo
11.606 415.861 li
10.418 415.195 9.80596 414.511 9.80596 413.791 cv
9.80596 413.467 9.91396 413.215 10.094 412.999 cv
10.292 412.783 10.526 412.675 10.778 412.675 cv
11.012 412.675 11.21 412.765 11.354 412.909 cv
11.516 413.053 11.588 413.233 11.588 413.449 cv
11.588 413.665 11.498 413.881 11.282 414.133 cv
11.084 414.385 10.976 414.583 10.976 414.691 cv
10.976 414.799 11.048 414.925 11.156 415.033 cv
11.408 415.303 11.804 415.573 12.344 415.861 cv
16.214 415.861 li
16.664 415.861 17.006 415.807 17.222 415.699 cv
17.384 415.627 17.51 415.483 17.618 415.285 cv
17.726 415.105 17.762 414.817 17.762 414.457 cv
18.086 414.457 li
18.086 418.579 li
17.762 418.579 li
17.762 418.183 17.708 417.877 17.582 417.661 cv
17.492 417.517 17.348 417.427 17.132 417.355 cv
17.024 417.319 16.736 417.301 16.268 417.301 cv
13.154 417.301 li
12.218 417.301 11.66 417.337 11.48 417.373 cv
11.3 417.409 11.174 417.481 11.084 417.589 cv
11.012 417.697 10.958 417.823 10.958 417.967 cv
10.958 418.147 11.012 418.363 11.102 418.579 cv
10.778 418.669 li
9.80596 416.221 li
9.80596 415.861 li
f
9.80596 408.283 mo
9.80596 407.059 10.274 406.087 11.192 405.349 cv
11.984 404.737 12.902 404.413 13.91 404.413 cv
14.63 404.413 15.368 404.593 16.106 404.935 cv
16.844 405.277 17.402 405.745 17.762 406.357 cv
18.122 406.969 18.32 407.635 18.32 408.373 cv
18.32 409.597 17.852 410.551 16.88 411.271 cv
16.07 411.883 15.152 412.171 14.144 412.171 cv
13.406 412.171 12.668 411.991 11.948 411.631 cv
11.228 411.271 10.688 410.785 10.328 410.191 cv
9.98596 409.597 9.80596 408.967 9.80596 408.283 cv
10.364 408.553 mo
10.364 408.877 10.472 409.183 10.652 409.489 cv
10.832 409.813 11.156 410.065 11.624 410.245 cv
12.092 410.443 12.686 410.533 13.406 410.533 cv
14.576 410.533 15.584 410.317 16.43 409.849 cv
17.294 409.381 17.708 408.769 17.708 407.995 cv
17.708 407.437 17.474 406.969 17.006 406.591 cv
16.538 406.231 15.746 406.033 14.594 406.033 cv
13.172 406.033 12.038 406.357 11.21 406.969 cv
10.652 407.383 10.364 407.905 10.364 408.553 cv
f
9.80596 400.867 mo
11.606 400.867 li
10.418 400.201 9.80596 399.517 9.80596 398.797 cv
9.80596 398.473 9.91396 398.221 10.094 398.005 cv
10.292 397.789 10.526 397.681 10.778 397.681 cv
11.012 397.681 11.21 397.771 11.354 397.915 cv
11.516 398.059 11.588 398.239 11.588 398.455 cv
11.588 398.671 11.498 398.887 11.282 399.139 cv
11.084 399.391 10.976 399.589 10.976 399.697 cv
10.976 399.805 11.048 399.931 11.156 400.039 cv
11.408 400.309 11.804 400.579 12.344 400.867 cv
16.214 400.867 li
16.664 400.867 17.006 400.813 17.222 400.705 cv
17.384 400.633 17.51 400.489 17.618 400.291 cv
17.726 400.111 17.762 399.823 17.762 399.463 cv
18.086 399.463 li
18.086 403.585 li
17.762 403.585 li
17.762 403.189 17.708 402.883 17.582 402.667 cv
17.492 402.523 17.348 402.433 17.132 402.361 cv
17.024 402.325 16.736 402.307 16.268 402.307 cv
13.154 402.307 li
12.218 402.307 11.66 402.343 11.48 402.379 cv
11.3 402.415 11.174 402.487 11.084 402.595 cv
11.012 402.703 10.958 402.829 10.958 402.973 cv
10.958 403.153 11.012 403.369 11.102 403.585 cv
10.778 403.675 li
9.80596 401.227 li
9.80596 400.867 li
f
21.596 392.191 mo
21.92 392.191 li
21.47 393.091 20.948 393.829 20.354 394.405 cv
19.49 395.27 18.5 395.917 17.366 396.367 cv
16.214 396.835 15.026 397.051 13.766 397.051 cv
11.966 397.051 10.31 396.619 8.79796 395.719 cv
7.30396 394.819 6.24196 393.649 5.59396 392.191 cv
5.95396 392.191 li
6.34996 392.93 6.90796 393.523 7.59196 393.991 cv
8.29396 394.46 9.17596 394.801 10.22 395.017 cv
11.282 395.251 12.398 395.359 13.55 395.359 cv
14.81 395.359 15.944 395.27 16.952 395.072 cv
17.762 394.927 18.392 394.729 18.878 394.513 cv
19.364 394.297 19.832 394.009 20.3 393.649 cv
20.75 393.289 21.182 392.803 21.596 392.191 cv
f
11.516 388.844 mo
10.94 388.268 10.598 387.908 10.508 387.8 cv
10.292 387.548 10.112 387.26 9.98596 386.954 cv
9.87796 386.666 9.80596 386.36 9.80596 386.054 cv
9.80596 385.55 9.94996 385.118 10.238 384.758 cv
10.526 384.398 10.958 384.146 11.516 384.02 cv
10.814 383.426 10.346 382.922 10.13 382.49 cv
9.91396 382.076 9.80596 381.644 9.80596 381.212 cv
9.80596 380.78 9.91396 380.402 10.13 380.078 cv
10.346 379.754 10.706 379.484 11.21 379.286 cv
11.552 379.16 12.092 379.088 12.812 379.088 cv
16.268 379.088 li
16.772 379.088 17.132 379.052 17.312 378.98 cv
17.438 378.926 17.546 378.818 17.636 378.656 cv
17.726 378.494 17.762 378.242 17.762 377.882 cv
18.086 377.882 li
18.086 381.842 li
17.762 381.842 li
17.762 381.68 li
17.762 381.338 17.708 381.068 17.564 380.87 cv
17.474 380.744 17.33 380.654 17.114 380.582 cv
17.024 380.564 16.736 380.546 16.268 380.546 cv
12.812 380.546 li
12.164 380.546 11.696 380.636 11.408 380.78 cv
11.048 381.014 10.85 381.374 10.85 381.878 cv
10.85 382.202 10.94 382.508 11.084 382.814 cv
11.246 383.138 11.534 383.516 11.948 383.948 cv
12.056 383.966 li
12.434 383.948 li
16.268 383.948 li
16.826 383.948 17.168 383.93 17.294 383.858 cv
17.438 383.804 17.546 383.696 17.636 383.516 cv
17.726 383.354 17.762 383.066 17.762 382.652 cv
18.086 382.652 li
18.086 386.72 li
17.762 386.72 li
17.762 386.288 17.726 385.982 17.618 385.802 cv
17.51 385.64 17.348 385.514 17.132 385.442 cv
17.042 385.424 16.754 385.406 16.268 385.406 cv
12.812 385.406 li
12.164 385.406 11.678 385.514 11.39 385.694 cv
11.03 385.964 10.832 386.324 10.832 386.774 cv
10.832 387.098 10.922 387.422 11.084 387.71 cv
11.336 388.214 11.624 388.592 11.948 388.844 cv
16.268 388.844 li
16.808 388.844 17.15 388.808 17.294 388.736 cv
17.456 388.664 17.582 388.556 17.654 388.412 cv
17.726 388.268 17.762 387.98 17.762 387.53 cv
18.086 387.53 li
18.086 391.508 li
17.762 391.508 li
17.762 391.148 17.726 390.896 17.654 390.752 cv
17.582 390.608 17.456 390.482 17.276 390.41 cv
17.096 390.338 16.772 390.302 16.268 390.302 cv
13.19 390.302 li
12.308 390.302 11.732 390.338 11.48 390.374 cv
11.3 390.41 11.156 390.482 11.084 390.572 cv
11.012 390.662 10.958 390.788 10.958 390.932 cv
10.958 391.094 11.012 391.292 11.102 391.508 cv
10.778 391.652 li
9.80596 389.222 li
9.80596 388.844 li
11.516 388.844 li
f
5.95396 377.396 mo
5.59396 377.396 li
6.02596 376.496 6.54796 375.758 7.14196 375.164 cv
8.00596 374.336 8.99596 373.688 10.148 373.22 cv
11.3 372.77 12.506 372.536 13.748 372.536 cv
15.584 372.536 17.24 372.986 18.716 373.886 cv
20.192 374.786 21.272 375.956 21.92 377.396 cv
21.596 377.396 li
21.182 376.676 20.624 376.082 19.94 375.614 cv
19.256 375.146 18.374 374.804 17.33 374.57 cv
16.286 374.354 15.17 374.228 14.018 374.228 cv
12.776 374.228 11.642 374.336 10.598 374.516 cv
9.80596 374.678 9.15796 374.858 8.67196 375.074 cv
8.18596 375.29 7.71796 375.596 7.24996 375.956 cv
6.79996 376.316 6.36796 376.802 5.95396 377.396 cv
f
gsave
64.4297 489.833 mo
357.048 489.833 li
357.048 381.233 li
64.4297 381.233 li
64.4297 489.833 li
clp
2 lw
[7.4 3.2 ] 0 dsh
64.4297 489.833 mo
66.7707 489.559 li
71.4526 489.073 li
72.623 488.877 li
74.964 488.666 li
77.3049 488.326 li
78.4754 489.206 li
79.6459 489.412 li
81.9868 489.258 li
86.6687 489.038 li
91.3506 488.617 li
93.6915 488.334 li
96.0325 488.106 li
98.3734 487.702 li
105.396 486.524 li
107.737 486.377 li
113.59 485.587 li
114.76 485.505 li
117.101 485.055 li
121.783 484.395 li
122.953 484.104 li
124.124 483.942 li
126.465 483.447 li
133.488 482.337 li
139.34 481.561 li
148.704 480.393 li
149.874 479.611 li
151.045 480.217 li
152.215 480.523 li
154.556 480.608 li
160.409 480.567 li
166.261 480.542 li
168.602 480.437 li
169.772 480.453 li
170.943 480.583 li
172.113 480.51 li
183.818 481.308 li
187.329 481.691 li
188.5 481.585 li
190.841 481.753 li
195.523 481.854 li
196.693 481.474 li
197.864 479.627 li
199.034 478.922 li
203.716 479.125 li
208.398 479.052 li
211.909 478.979 li
214.25 478.924 li
220.103 478.52 li
221.273 478.612 li
234.148 478.248 li
240.001 477.803 li
241.171 477.822 li
244.683 477.428 li
245.853 478.281 li
247.024 478.639 li
250.535 478.984 li
251.705 479.18 li
254.046 479.337 li
255.217 479.532 li
259.899 479.76 li
262.24 480.01 li
266.922 480.572 li
269.263 480.754 li
275.115 481.419 li
277.456 481.647 li
278.626 481.656 li
282.138 482.161 li
285.649 482.573 li
297.354 483.686 li
298.524 483.711 li
303.206 484.229 li
306.718 484.506 li
311.4 485.082 li
313.741 485.432 li
316.081 485.744 li
317.252 486.165 li
318.422 485.071 li
319.593 484.911 li
320.763 484.867 li
323.104 484.914 li
328.957 485.123 li
330.127 485.256 li
331.298 485.223 li
@
grestore
gsave
64.4297 489.833 mo
357.048 489.833 li
357.048 381.233 li
64.4297 381.233 li
64.4297 489.833 li
clp
2 lw
2 lc
64.4297 394.322 mo
66.7707 394.434 li
69.1116 394.629 li
71.4526 394.936 li
72.623 395.183 li
74.964 395.368 li
76.1344 395.555 li
77.3049 395.362 li
78.4754 394.855 li
79.6459 398.311 li
83.1573 398.284 li
91.3506 397.627 li
92.5211 397.442 li
94.862 397.328 li
96.0325 397.203 li
97.203 396.923 li
101.885 396.228 li
103.055 395.957 li
106.567 395.677 li
108.908 395.484 li
110.078 395.273 li
114.76 394.901 li
118.271 394.322 li
120.612 394.056 li
121.783 393.942 li
125.294 393.223 li
132.317 392.159 li
141.681 391.13 li
142.851 391.089 li
144.022 390.91 li
147.533 390.684 li
148.704 390.494 li
149.874 389.674 li
152.215 390.054 li
153.386 489.659 li
154.556 489.668 li
158.068 489.114 li
161.579 488.945 li
163.92 488.59 li
166.261 488.343 li
168.602 488.001 li
175.625 487.775 li
179.136 487.718 li
189.67 487.55 li
190.841 487.398 li
192.011 487.487 li
195.523 487.224 li
196.693 486.437 li
197.864 485.038 li
199.034 484.365 li
200.205 485.256 li
202.546 485.264 li
208.398 485.53 li
217.762 485.853 li
221.273 485.918 li
225.955 486.013 li
228.296 486.084 li
232.978 486.062 li
236.489 486.29 li
244.683 486.676 li
245.853 485.647 li
247.024 487.555 li
254.046 486.961 li
255.217 486.79 li
256.387 486.743 li
261.069 486.038 li
263.41 485.877 li
293.842 482.69 li
299.695 481.878 li
303.206 481.525 li
309.059 480.765 li
311.4 480.583 li
313.741 480.401 li
316.081 480.206 li
317.252 480.306 li
318.422 481.159 li
319.593 489.676 li
323.104 489.372 li
328.957 488.522 li
330.127 488.275 li
331.298 488.158 li
@
grestore
2 lc
0 lj
64.4297 489.833 mo
64.4297 381.233 li
@
357.048 489.833 mo
357.048 381.233 li
@
64.4297 489.833 mo
357.048 489.833 li
@
64.4297 381.233 mo
357.048 381.233 li
@
205.48 379.445 mo
205.48 379.834 li
204.4 379.294 203.514 378.668 202.823 377.955 cv
201.786 376.918 201.009 375.73 200.469 374.369 cv
199.907 372.987 199.648 371.561 199.648 370.049 cv
199.648 367.889 200.166 365.902 201.246 364.088 cv
202.326 362.295 203.73 361.021 205.48 360.243 cv
205.48 360.675 li
204.594 361.15 203.882 361.82 203.32 362.641 cv
202.758 363.483 202.348 364.541 202.089 365.794 cv
201.808 367.069 201.678 368.408 201.678 369.79 cv
201.678 371.302 201.786 372.663 202.024 373.873 cv
202.197 374.845 202.434 375.601 202.693 376.184 cv
202.953 376.767 203.298 377.329 203.73 377.89 cv
204.162 378.43 204.745 378.949 205.48 379.445 cv
f
214.833 371.561 mo
214.573 372.836 214.055 373.808 213.299 374.499 cv
212.543 375.19 211.701 375.514 210.793 375.514 cv
209.67 375.514 208.72 375.061 207.899 374.153 cv
207.078 373.246 206.689 371.993 206.689 370.417 cv
206.689 368.905 207.143 367.673 208.05 366.723 cv
208.957 365.773 210.037 365.297 211.312 365.297 cv
212.241 365.297 213.018 365.557 213.623 366.053 cv
214.228 366.55 214.552 367.069 214.552 367.609 cv
214.552 367.889 214.465 368.105 214.293 368.257 cv
214.12 368.429 213.882 368.494 213.58 368.494 cv
213.148 368.494 212.845 368.365 212.651 368.105 cv
212.521 367.976 212.435 367.695 212.392 367.263 cv
212.349 366.853 212.219 366.529 211.981 366.313 cv
211.722 366.097 211.377 365.989 210.945 365.989 cv
210.253 365.989 209.692 366.248 209.26 366.766 cv
208.677 367.457 208.396 368.386 208.396 369.509 cv
208.396 370.676 208.677 371.691 209.238 372.555 cv
209.8 373.441 210.577 373.873 211.549 373.873 cv
212.241 373.873 212.845 373.657 213.407 373.181 cv
213.796 372.857 214.163 372.274 214.53 371.41 cv
214.833 371.561 li
f
216.021 360.675 mo
216.021 360.243 li
217.101 360.761 217.986 361.388 218.699 362.101 cv
219.693 363.137 220.47 364.325 221.032 365.708 cv
221.572 367.09 221.853 368.537 221.853 370.028 cv
221.853 372.231 221.313 374.218 220.233 375.989 cv
219.153 377.761 217.749 379.057 216.021 379.834 cv
216.021 379.445 li
216.885 378.949 217.597 378.279 218.159 377.458 cv
218.721 376.637 219.131 375.579 219.412 374.326 cv
219.671 373.073 219.822 371.734 219.822 370.352 cv
219.822 368.861 219.693 367.501 219.477 366.248 cv
219.282 365.297 219.066 364.52 218.807 363.937 cv
218.548 363.353 218.181 362.792 217.749 362.23 cv
217.317 361.69 216.733 361.172 216.021 360.675 cv
f
344.448 446.021 mo
298.924 446.021 li
298.924 435.933 li
347.548 435.933 li
347.548 442.921 li
347.546 444.044 347.271 444.792 346.794 445.267 cv
346.319 445.744 345.571 446.019 344.448 446.021 cv
298.124 446.021 mo
240.401 446.021 li
240.401 435.933 li
298.124 435.933 li
298.124 446.021 li
239.601 446.021 mo
207.364 446.021 li
206.24 446.019 205.493 445.744 205.017 445.267 cv
204.541 444.792 204.265 444.044 204.264 442.921 cv
204.264 435.933 li
239.601 435.933 li
239.601 446.021 li
1 /1 /CSD get_res sepcs
0 sep
f
240.401 446.021 mo
239.601 446.021 li
239.601 435.933 li
240.401 435.933 li
240.401 446.021 li
1 /1 /CSD get_res sepcs
.0627451 sep
f
298.924 446.021 mo
298.124 446.021 li
298.124 435.933 li
298.924 435.933 li
298.924 446.021 li
f
347.548 435.133 mo
298.924 435.133 li
298.924 408.783 li
347.548 408.783 li
347.548 435.133 li
298.124 435.133 mo
240.401 435.133 li
240.401 408.783 li
298.124 408.783 li
298.124 435.133 li
239.601 435.133 mo
204.264 435.133 li
204.264 408.783 li
239.601 408.783 li
239.601 435.133 li
1 /1 /CSD get_res sepcs
0 sep
f
240.401 435.133 mo
239.601 435.133 li
239.601 408.783 li
240.401 408.783 li
240.401 435.133 li
1 /1 /CSD get_res sepcs
.0627451 sep
f
298.924 435.133 mo
298.124 435.133 li
298.124 408.783 li
298.924 408.783 li
298.924 435.133 li
f
347.548 407.983 mo
298.924 407.983 li
298.924 390.733 li
344.448 390.733 li
345.571 390.735 346.319 391.011 346.794 391.487 cv
347.271 391.963 347.546 392.71 347.548 393.833 cv
347.548 407.983 li
298.124 407.983 mo
240.401 407.983 li
240.401 390.733 li
298.124 390.733 li
298.124 407.983 li
239.601 407.983 mo
204.264 407.983 li
204.264 393.833 li
204.265 392.71 204.541 391.963 205.017 391.487 cv
205.493 391.011 206.24 390.735 207.364 390.733 cv
239.601 390.733 li
239.601 407.983 li
1 /1 /CSD get_res sepcs
0 sep
f
240.401 407.983 mo
239.601 407.983 li
239.601 390.733 li
240.401 390.733 li
240.401 407.983 li
1 /1 /CSD get_res sepcs
.0627451 sep
f
298.924 407.983 mo
298.124 407.983 li
298.124 390.733 li
298.924 390.733 li
298.924 407.983 li
f
347.548 435.933 mo
298.924 435.933 li
298.124 435.933 li
240.401 435.933 li
239.601 435.933 li
204.264 435.933 li
204.264 435.133 li
239.601 435.133 li
240.401 435.133 li
298.124 435.133 li
298.924 435.133 li
347.548 435.133 li
347.548 435.933 li
f
347.548 408.783 mo
298.924 408.783 li
298.124 408.783 li
240.401 408.783 li
239.601 408.783 li
204.264 408.783 li
204.264 407.983 li
239.601 407.983 li
240.401 407.983 li
298.124 407.983 li
298.924 407.983 li
347.548 407.983 li
347.548 408.783 li
f
344.459 447.021 mo
344.455 447.021 344.452 447.021 344.448 447.021 cv
298.924 447.021 li
298.924 446.021 li
344.448 446.021 li
345.571 446.019 346.319 445.744 346.794 445.267 cv
347.271 444.792 347.546 444.044 347.548 442.921 cv
347.548 435.933 li
348.548 435.933 li
348.548 442.921 li
348.55 444.198 348.225 445.25 347.501 445.975 cv
346.779 446.696 345.731 447.021 344.459 447.021 cv
207.353 447.021 mo
206.081 447.021 205.032 446.696 204.31 445.975 cv
203.586 445.25 203.262 444.198 203.264 442.921 cv
203.264 435.933 li
204.264 435.933 li
204.264 442.921 li
204.265 444.044 204.541 444.792 205.017 445.267 cv
205.493 445.744 206.24 446.019 207.364 446.021 cv
207.364 446.021 li
239.601 446.021 li
239.601 447.021 li
207.364 447.021 li
207.36 447.021 207.356 447.021 207.353 447.021 cv
298.124 447.021 mo
240.401 447.021 li
240.401 446.021 li
298.124 446.021 li
298.124 447.021 li
1 /1 /CSD get_res sepcs
.160784 sep
f
240.401 447.021 mo
239.601 447.021 li
239.601 446.021 li
240.401 446.021 li
240.401 447.021 li
1 /1 /CSD get_res sepcs
.223529 sep
f
298.924 447.021 mo
298.124 447.021 li
298.124 446.021 li
298.924 446.021 li
298.924 447.021 li
f
348.548 435.133 mo
347.548 435.133 li
347.548 408.783 li
348.548 408.783 li
348.548 435.133 li
204.264 435.133 mo
203.264 435.133 li
203.264 408.783 li
204.264 408.783 li
204.264 435.133 li
348.548 407.983 mo
347.548 407.983 li
347.548 393.833 li
347.546 392.71 347.271 391.963 346.794 391.487 cv
346.319 391.011 345.571 390.735 344.448 390.733 cv
298.924 390.733 li
298.924 389.733 li
344.448 389.733 li
344.452 389.733 344.455 389.733 344.459 389.733 cv
345.731 389.733 346.779 390.058 347.501 390.78 cv
348.225 391.504 348.55 392.557 348.548 393.833 cv
348.548 407.983 li
204.264 407.983 mo
203.264 407.983 li
203.264 393.833 li
203.262 392.557 203.586 391.504 204.31 390.78 cv
205.032 390.058 206.081 389.733 207.353 389.733 cv
207.356 389.733 207.36 389.733 207.364 389.733 cv
239.601 389.733 li
239.601 390.733 li
207.364 390.733 li
206.24 390.735 205.493 391.011 205.017 391.487 cv
204.541 391.963 204.265 392.71 204.264 393.833 cv
204.264 407.983 li
298.124 390.733 mo
240.401 390.733 li
240.401 389.733 li
298.124 389.733 li
298.124 390.733 li
1 /1 /CSD get_res sepcs
.160784 sep
f
240.401 390.733 mo
239.601 390.733 li
239.601 389.733 li
240.401 389.733 li
240.401 390.733 li
1 /1 /CSD get_res sepcs
.223529 sep
f
298.924 390.733 mo
298.124 390.733 li
298.124 389.733 li
298.924 389.733 li
298.924 390.733 li
f
348.548 435.933 mo
347.548 435.933 li
347.548 435.133 li
348.548 435.133 li
348.548 435.933 li
204.264 435.933 mo
203.264 435.933 li
203.264 435.133 li
204.264 435.133 li
204.264 435.933 li
f
348.548 408.783 mo
347.548 408.783 li
347.548 407.983 li
348.548 407.983 li
348.548 408.783 li
204.264 408.783 mo
203.264 408.783 li
203.264 407.983 li
204.264 407.983 li
204.264 408.783 li
f
2 lw
0 lc
1 lj
[7.4 3.2 ] 0 dsh
210.964 403.733 mo
246.964 403.733 li
1 /0 /CSD get_res sepcs
1 sep
@
269.68 403.949 mo
270.508 404.129 271.12 404.417 271.534 404.795 cv
272.092 405.335 272.38 406.001 272.38 406.775 cv
272.38 407.369 272.182 407.927 271.822 408.467 cv
271.444 409.007 270.922 409.403 270.274 409.655 cv
269.626 409.907 268.618 410.033 267.286 410.033 cv
261.67 410.033 li
261.67 409.709 li
262.12 409.709 li
262.606 409.709 262.966 409.565 263.182 409.241 cv
263.308 409.025 263.38 408.593 263.38 407.927 cv
263.38 400.223 li
263.38 399.503 263.29 399.035 263.128 398.819 cv
262.894 398.567 262.552 398.441 262.12 398.441 cv
261.67 398.441 li
261.67 398.117 li
266.818 398.117 li
267.772 398.117 268.546 398.189 269.122 398.333 cv
269.986 398.549 270.67 398.909 271.138 399.449 cv
271.606 399.989 271.84 400.619 271.84 401.303 cv
271.84 401.897 271.642 402.437 271.282 402.905 cv
270.922 403.373 270.382 403.733 269.68 403.949 cv
265.072 403.481 mo
265.288 403.517 265.522 403.553 265.81 403.571 cv
266.098 403.607 266.404 403.607 266.728 403.607 cv
267.592 403.607 268.222 403.517 268.654 403.337 cv
269.086 403.157 269.41 402.869 269.644 402.473 cv
269.86 402.095 269.986 401.681 269.986 401.231 cv
269.986 400.547 269.698 399.953 269.14 399.449 cv
268.564 398.963 267.736 398.711 266.656 398.711 cv
266.062 398.711 265.54 398.783 265.072 398.891 cv
265.072 403.481 li
265.072 409.169 mo
265.756 409.331 266.422 409.403 267.088 409.403 cv
268.132 409.403 268.942 409.169 269.5 408.701 cv
270.058 408.233 270.346 407.639 270.346 406.919 cv
270.346 406.469 270.22 406.019 269.968 405.587 cv
269.716 405.155 269.302 404.831 268.726 404.579 cv
268.15 404.327 267.448 404.201 266.62 404.201 cv
266.26 404.201 265.936 404.219 265.684 404.219 cv
265.432 404.237 265.216 404.255 265.072 404.291 cv
265.072 409.169 li
f
278.5 408.881 mo
277.672 409.529 277.15 409.889 276.934 409.979 cv
276.61 410.105 276.286 410.177 275.926 410.177 cv
275.368 410.177 274.918 409.997 274.558 409.619 cv
274.198 409.259 274.018 408.755 274.018 408.125 cv
274.018 407.729 274.09 407.387 274.27 407.099 cv
274.504 406.703 274.918 406.343 275.512 405.983 cv
276.106 405.641 277.096 405.209 278.5 404.705 cv
278.5 404.381 li
278.5 403.589 278.356 403.031 278.104 402.725 cv
277.852 402.437 277.474 402.275 277.006 402.275 cv
276.628 402.275 276.34 402.383 276.124 402.581 cv
275.89 402.797 275.782 403.013 275.782 403.265 cv
275.8 403.769 li
275.8 404.057 275.728 404.255 275.584 404.399 cv
275.44 404.543 275.278 404.615 275.062 404.615 cv
274.846 404.615 274.666 404.543 274.522 404.399 cv
274.378 404.255 274.324 404.039 274.324 403.769 cv
274.324 403.265 274.576 402.815 275.098 402.383 cv
275.602 401.969 276.322 401.753 277.258 401.753 cv
277.978 401.753 278.554 401.879 279.022 402.113 cv
279.364 402.293 279.616 402.581 279.778 402.959 cv
279.886 403.211 279.94 403.733 279.94 404.507 cv
279.94 407.243 li
279.94 408.017 279.94 408.485 279.976 408.647 cv
280.012 408.827 280.048 408.935 280.12 408.989 cv
280.192 409.061 280.264 409.079 280.372 409.079 cv
280.606 409.025 li
280.732 408.953 280.966 408.737 281.326 408.377 cv
281.326 408.881 li
280.66 409.745 280.03 410.177 279.436 410.177 cv
279.148 410.177 278.914 410.069 278.752 409.889 cv
278.572 409.709 278.5 409.367 278.5 408.881 cv
278.5 408.305 mo
278.5 405.227 li
277.6 405.587 277.024 405.839 276.772 405.983 cv
276.304 406.235 275.98 406.505 275.782 406.793 cv
275.584 407.081 275.494 407.387 275.494 407.711 cv
275.494 408.143 275.62 408.485 275.872 408.773 cv
276.124 409.061 276.412 409.187 276.736 409.187 cv
277.168 409.187 277.762 408.899 278.5 408.305 cv
f
287.122 401.753 mo
287.122 404.489 li
286.834 404.489 li
286.618 403.625 286.33 403.049 285.988 402.725 cv
285.628 402.419 285.196 402.257 284.656 402.257 cv
284.224 402.257 283.9 402.365 283.648 402.581 cv
283.396 402.797 283.27 403.049 283.27 403.301 cv
283.27 403.643 283.36 403.931 283.558 404.147 cv
283.738 404.399 284.098 404.651 284.674 404.921 cv
285.952 405.533 li
287.14 406.127 287.734 406.901 287.734 407.837 cv
287.734 408.575 287.446 409.169 286.906 409.601 cv
286.348 410.033 285.736 410.267 285.052 410.267 cv
284.548 410.267 283.99 410.177 283.36 410.015 cv
283.162 409.961 283 409.925 282.874 409.925 cv
282.73 409.925 282.64 409.997 282.568 410.141 cv
282.28 410.141 li
282.28 407.279 li
282.568 407.279 li
282.73 408.107 283.036 408.737 283.504 409.151 cv
283.972 409.565 284.494 409.763 285.07 409.763 cv
285.466 409.763 285.79 409.655 286.042 409.403 cv
286.294 409.169 286.438 408.881 286.438 408.539 cv
286.438 408.143 286.294 407.819 286.006 407.531 cv
285.718 407.261 285.142 406.919 284.296 406.487 cv
283.45 406.073 282.892 405.695 282.64 405.335 cv
282.37 405.011 282.244 404.579 282.244 404.075 cv
282.244 403.427 282.46 402.869 282.928 402.419 cv
283.378 401.987 283.972 401.753 284.692 401.753 cv
284.998 401.753 285.376 401.825 285.844 401.951 cv
286.132 402.041 286.33 402.077 286.438 402.077 cv
286.528 402.077 286.6 402.059 286.654 402.023 cv
286.69 401.987 286.762 401.897 286.834 401.753 cv
287.122 401.753 li
f
290.974 397.541 mo
291.226 397.541 291.424 397.631 291.604 397.793 cv
291.766 397.973 291.856 398.171 291.856 398.423 cv
291.856 398.675 291.766 398.873 291.604 399.053 cv
291.424 399.233 291.226 399.323 290.974 399.323 cv
290.722 399.323 290.524 399.233 290.344 399.053 cv
290.164 398.873 290.074 398.675 290.074 398.423 cv
290.074 398.171 290.146 397.973 290.326 397.793 cv
290.506 397.631 290.722 397.541 290.974 397.541 cv
291.712 401.753 mo
291.712 408.215 li
291.712 408.719 291.748 409.061 291.82 409.223 cv
291.892 409.403 292 409.529 292.144 409.601 cv
292.288 409.673 292.54 409.709 292.918 409.709 cv
292.918 410.033 li
289.012 410.033 li
289.012 409.709 li
289.408 409.709 289.66 409.673 289.804 409.601 cv
289.93 409.529 290.038 409.403 290.11 409.223 cv
290.182 409.043 290.236 408.719 290.236 408.215 cv
290.236 405.119 li
290.236 404.255 290.2 403.679 290.164 403.409 cv
290.128 403.229 290.056 403.103 289.966 403.031 cv
289.876 402.959 289.75 402.905 289.606 402.905 cv
289.444 402.905 289.246 402.959 289.012 403.049 cv
288.886 402.725 li
291.316 401.753 li
291.712 401.753 li
f
300.766 406.973 mo
300.55 408.035 300.118 408.845 299.488 409.421 cv
298.858 409.997 298.156 410.267 297.4 410.267 cv
296.464 410.267 295.672 409.889 294.988 409.133 cv
294.304 408.377 293.98 407.333 293.98 406.019 cv
293.98 404.759 294.358 403.733 295.114 402.941 cv
295.87 402.149 296.77 401.753 297.832 401.753 cv
298.606 401.753 299.254 401.969 299.758 402.383 cv
300.262 402.797 300.532 403.229 300.532 403.679 cv
300.532 403.913 300.46 404.093 300.316 404.219 cv
300.172 404.363 299.974 404.417 299.722 404.417 cv
299.362 404.417 299.11 404.309 298.948 404.093 cv
298.84 403.985 298.768 403.751 298.732 403.391 cv
298.696 403.049 298.588 402.779 298.39 402.599 cv
298.174 402.419 297.886 402.329 297.526 402.329 cv
296.95 402.329 296.482 402.545 296.122 402.977 cv
295.636 403.553 295.402 404.327 295.402 405.263 cv
295.402 406.235 295.636 407.081 296.104 407.801 cv
296.572 408.539 297.22 408.899 298.03 408.899 cv
298.606 408.899 299.11 408.719 299.578 408.323 cv
299.902 408.053 300.208 407.567 300.514 406.847 cv
300.766 406.973 li
f
309.55 404.453 mo
309.55 407.927 li
309.55 408.683 309.622 409.133 309.802 409.313 cv
310.018 409.583 310.342 409.709 310.81 409.709 cv
311.26 409.709 li
311.26 410.033 li
306.166 410.033 li
306.166 409.709 li
306.616 409.709 li
307.102 409.709 307.462 409.547 307.696 409.223 cv
307.804 409.043 307.858 408.611 307.858 407.927 cv
307.858 400.223 li
307.858 399.485 307.768 399.017 307.624 398.819 cv
307.39 398.567 307.048 398.441 306.616 398.441 cv
306.166 398.441 li
306.166 398.117 li
310.522 398.117 li
311.584 398.117 312.43 398.243 313.042 398.459 cv
313.654 398.675 314.176 399.053 314.608 399.557 cv
315.022 400.079 315.238 400.691 315.238 401.411 cv
315.238 402.383 314.914 403.175 314.266 403.787 cv
313.618 404.399 312.718 404.705 311.548 404.705 cv
311.26 404.705 310.936 404.687 310.612 404.651 cv
310.288 404.615 309.928 404.543 309.55 404.453 cv
309.55 403.949 mo
309.856 404.021 310.126 404.057 310.378 404.093 cv
310.612 404.129 310.81 404.129 310.99 404.129 cv
311.602 404.129 312.124 403.895 312.574 403.427 cv
313.006 402.959 313.24 402.347 313.24 401.591 cv
313.24 401.087 313.132 400.601 312.916 400.151 cv
312.7 399.719 312.412 399.377 312.016 399.161 cv
311.62 398.945 311.188 398.819 310.702 398.819 cv
310.396 398.819 310.018 398.891 309.55 398.999 cv
309.55 403.949 li
f
316.174 410.033 mo
316.174 409.709 li
316.624 409.709 li
317.128 409.709 317.488 409.547 317.704 409.223 cv
317.812 409.043 317.884 408.611 317.884 407.927 cv
317.884 400.223 li
317.884 399.485 317.794 399.017 317.65 398.819 cv
317.416 398.567 317.074 398.441 316.624 398.441 cv
316.174 398.441 li
316.174 398.117 li
321.034 398.117 li
322.798 398.117 324.148 398.333 325.084 398.729 cv
326.02 399.125 326.758 399.809 327.334 400.745 cv
327.892 401.681 328.18 402.779 328.18 404.021 cv
328.18 405.677 327.676 407.063 326.668 408.161 cv
325.534 409.421 323.806 410.033 321.502 410.033 cv
316.174 410.033 li
319.576 409.169 mo
320.314 409.349 320.944 409.421 321.448 409.421 cv
322.798 409.421 323.932 408.953 324.832 407.999 cv
325.732 407.045 326.182 405.749 326.182 404.093 cv
326.182 402.455 325.732 401.159 324.832 400.205 cv
323.932 399.269 322.78 398.783 321.376 398.783 cv
320.836 398.783 320.242 398.873 319.576 399.035 cv
319.576 409.169 li
f
341.032 410.033 mo
337.846 410.033 li
333.814 404.453 li
333.508 404.471 333.256 404.471 333.076 404.471 cv
332.824 404.471 li
332.572 404.453 li
332.572 407.927 li
332.572 408.683 332.644 409.133 332.806 409.313 cv
333.022 409.583 333.364 409.709 333.814 409.709 cv
334.282 409.709 li
334.282 410.033 li
329.17 410.033 li
329.17 409.709 li
329.62 409.709 li
330.124 409.709 330.484 409.547 330.7 409.223 cv
330.808 409.043 330.88 408.611 330.88 407.927 cv
330.88 400.223 li
330.88 399.485 330.79 399.017 330.646 398.819 cv
330.412 398.567 330.07 398.441 329.62 398.441 cv
329.17 398.441 li
329.17 398.117 li
333.508 398.117 li
334.768 398.117 335.704 398.225 336.316 398.405 cv
336.91 398.585 337.414 398.927 337.846 399.413 cv
338.26 399.917 338.476 400.493 338.476 401.177 cv
338.476 401.915 338.224 402.545 337.756 403.085 cv
337.27 403.625 336.532 404.021 335.542 404.237 cv
337.99 407.657 li
338.548 408.449 339.034 408.971 339.448 409.223 cv
339.844 409.475 340.384 409.637 341.032 409.709 cv
341.032 410.033 li
332.572 403.913 mo
332.68 403.913 332.77 403.913 332.86 403.913 cv
333.058 403.913 li
334.192 403.913 335.056 403.679 335.632 403.175 cv
336.208 402.689 336.496 402.059 336.496 401.303 cv
336.496 400.565 336.262 399.953 335.794 399.485 cv
335.326 399.017 334.696 398.783 333.94 398.783 cv
333.598 398.783 333.148 398.837 332.572 398.945 cv
332.572 403.913 li
f
2 lc
[] 0 dsh
210.964 429.177 mo
246.964 429.177 li
@
269.608 431.481 mo
264.982 431.481 li
264.172 433.371 li
263.974 433.839 263.884 434.181 263.884 434.397 cv
263.884 434.595 263.956 434.757 264.136 434.901 cv
264.298 435.045 264.676 435.117 265.252 435.153 cv
265.252 435.477 li
261.508 435.477 li
261.508 435.153 li
261.994 435.081 262.318 434.955 262.48 434.811 cv
262.768 434.523 263.092 433.965 263.47 433.101 cv
267.664 423.291 li
267.97 423.291 li
272.11 433.209 li
272.434 434.001 272.74 434.523 273.01 434.757 cv
273.28 434.991 273.658 435.117 274.162 435.153 cv
274.162 435.477 li
269.464 435.477 li
269.464 435.153 li
269.932 435.135 270.238 435.063 270.418 434.919 cv
270.58 434.793 270.67 434.631 270.67 434.415 cv
270.67 434.163 270.544 433.767 270.328 433.209 cv
269.608 431.481 li
269.356 430.833 mo
267.34 426.027 li
265.252 430.833 li
269.356 430.833 li
f
276.97 422.985 mo
277.222 422.985 277.42 423.075 277.6 423.237 cv
277.762 423.417 277.852 423.615 277.852 423.867 cv
277.852 424.119 277.762 424.317 277.6 424.497 cv
277.42 424.677 277.222 424.767 276.97 424.767 cv
276.718 424.767 276.52 424.677 276.34 424.497 cv
276.16 424.317 276.07 424.119 276.07 423.867 cv
276.07 423.615 276.142 423.417 276.322 423.237 cv
276.502 423.075 276.718 422.985 276.97 422.985 cv
277.708 427.197 mo
277.708 433.659 li
277.708 434.163 277.744 434.505 277.816 434.667 cv
277.888 434.847 277.996 434.973 278.14 435.045 cv
278.284 435.117 278.536 435.153 278.914 435.153 cv
278.914 435.477 li
275.008 435.477 li
275.008 435.153 li
275.404 435.153 275.656 435.117 275.8 435.045 cv
275.926 434.973 276.034 434.847 276.106 434.667 cv
276.178 434.487 276.232 434.163 276.232 433.659 cv
276.232 430.563 li
276.232 429.699 276.196 429.123 276.16 428.853 cv
276.124 428.673 276.052 428.547 275.962 428.475 cv
275.872 428.403 275.746 428.349 275.602 428.349 cv
275.44 428.349 275.242 428.403 275.008 428.493 cv
274.882 428.169 li
277.312 427.197 li
277.708 427.197 li
f
283.054 424.209 mo
283.054 428.889 li
285.214 428.889 li
285.718 428.889 286.078 428.781 286.312 428.565 cv
286.528 428.349 286.69 427.917 286.78 427.251 cv
287.104 427.251 li
287.104 431.301 li
286.78 431.301 li
286.762 430.833 286.69 430.491 286.582 430.275 cv
286.474 430.059 286.312 429.897 286.114 429.789 cv
285.898 429.681 285.61 429.627 285.214 429.627 cv
283.054 429.627 li
283.054 433.371 li
283.054 433.983 283.09 434.379 283.162 434.559 cv
283.216 434.703 283.342 434.829 283.522 434.937 cv
283.774 435.081 284.044 435.153 284.332 435.153 cv
284.764 435.153 li
284.764 435.477 li
279.652 435.477 li
279.652 435.153 li
280.084 435.153 li
280.57 435.153 280.93 435.009 281.146 434.721 cv
281.29 434.541 281.362 434.091 281.362 433.371 cv
281.362 425.667 li
281.362 425.073 281.308 424.677 281.236 424.479 cv
281.182 424.335 281.056 424.209 280.876 424.101 cv
280.624 423.957 280.354 423.885 280.084 423.885 cv
279.652 423.885 li
279.652 423.561 li
288.526 423.561 li
288.634 426.171 li
288.328 426.171 li
288.166 425.631 287.986 425.217 287.788 424.965 cv
287.59 424.713 287.338 424.515 287.05 424.389 cv
286.744 424.281 286.294 424.209 285.682 424.209 cv
283.054 424.209 li
f
291.982 422.985 mo
292.234 422.985 292.432 423.075 292.612 423.237 cv
292.774 423.417 292.864 423.615 292.864 423.867 cv
292.864 424.119 292.774 424.317 292.612 424.497 cv
292.432 424.677 292.234 424.767 291.982 424.767 cv
291.73 424.767 291.532 424.677 291.352 424.497 cv
291.172 424.317 291.082 424.119 291.082 423.867 cv
291.082 423.615 291.154 423.417 291.334 423.237 cv
291.514 423.075 291.73 422.985 291.982 422.985 cv
292.72 427.197 mo
292.72 433.659 li
292.72 434.163 292.756 434.505 292.828 434.667 cv
292.9 434.847 293.008 434.973 293.152 435.045 cv
293.296 435.117 293.548 435.153 293.926 435.153 cv
293.926 435.477 li
290.02 435.477 li
290.02 435.153 li
290.416 435.153 290.668 435.117 290.812 435.045 cv
290.938 434.973 291.046 434.847 291.118 434.667 cv
291.19 434.487 291.244 434.163 291.244 433.659 cv
291.244 430.563 li
291.244 429.699 291.208 429.123 291.172 428.853 cv
291.136 428.673 291.064 428.547 290.974 428.475 cv
290.884 428.403 290.758 428.349 290.614 428.349 cv
290.452 428.349 290.254 428.403 290.02 428.493 cv
289.894 428.169 li
292.324 427.197 li
292.72 427.197 li
f
301.738 435.477 mo
297.13 425.451 li
297.13 433.407 li
297.13 434.145 297.202 434.595 297.382 434.775 cv
297.598 435.027 297.94 435.153 298.408 435.153 cv
298.822 435.153 li
298.822 435.477 li
294.682 435.477 li
294.682 435.153 li
295.096 435.153 li
295.6 435.153 295.96 435.009 296.176 434.703 cv
296.284 434.523 296.356 434.091 296.356 433.407 cv
296.356 425.631 li
296.356 425.109 296.302 424.731 296.194 424.479 cv
296.104 424.317 295.942 424.173 295.726 424.065 cv
295.51 423.957 295.15 423.885 294.682 423.885 cv
294.682 423.561 li
298.048 423.561 li
302.368 432.885 li
306.634 423.561 li
310 423.561 li
310 423.885 li
309.586 423.885 li
309.082 423.885 308.722 424.047 308.506 424.335 cv
308.362 424.533 308.308 424.965 308.308 425.631 cv
308.308 433.407 li
308.308 434.145 308.38 434.595 308.56 434.775 cv
308.776 435.027 309.118 435.153 309.586 435.153 cv
310 435.153 li
310 435.477 li
304.942 435.477 li
304.942 435.153 li
305.356 435.153 li
305.86 435.153 306.22 435.009 306.436 434.703 cv
306.562 434.523 306.634 434.091 306.634 433.407 cv
306.634 425.451 li
302.026 435.477 li
301.738 435.477 li
f
315.508 434.325 mo
314.68 434.973 314.158 435.333 313.942 435.423 cv
313.618 435.549 313.294 435.621 312.934 435.621 cv
312.376 435.621 311.926 435.441 311.566 435.063 cv
311.206 434.703 311.026 434.199 311.026 433.569 cv
311.026 433.173 311.098 432.831 311.278 432.543 cv
311.512 432.147 311.926 431.787 312.52 431.427 cv
313.114 431.085 314.104 430.653 315.508 430.149 cv
315.508 429.825 li
315.508 429.033 315.364 428.475 315.112 428.169 cv
314.86 427.881 314.482 427.719 314.014 427.719 cv
313.636 427.719 313.348 427.827 313.132 428.025 cv
312.898 428.241 312.79 428.457 312.79 428.709 cv
312.808 429.213 li
312.808 429.501 312.736 429.699 312.592 429.843 cv
312.448 429.987 312.286 430.059 312.07 430.059 cv
311.854 430.059 311.674 429.987 311.53 429.843 cv
311.386 429.699 311.332 429.483 311.332 429.213 cv
311.332 428.709 311.584 428.259 312.106 427.827 cv
312.61 427.413 313.33 427.197 314.266 427.197 cv
314.986 427.197 315.562 427.323 316.03 427.557 cv
316.372 427.737 316.624 428.025 316.786 428.403 cv
316.894 428.655 316.948 429.177 316.948 429.951 cv
316.948 432.687 li
316.948 433.461 316.948 433.929 316.984 434.091 cv
317.02 434.271 317.056 434.379 317.128 434.433 cv
317.2 434.505 317.272 434.523 317.38 434.523 cv
317.614 434.469 li
317.74 434.397 317.974 434.181 318.334 433.821 cv
318.334 434.325 li
317.668 435.189 317.038 435.621 316.444 435.621 cv
316.156 435.621 315.922 435.513 315.76 435.333 cv
315.58 435.153 315.508 434.811 315.508 434.325 cv
315.508 433.749 mo
315.508 430.671 li
314.608 431.031 314.032 431.283 313.78 431.427 cv
313.312 431.679 312.988 431.949 312.79 432.237 cv
312.592 432.525 312.502 432.831 312.502 433.155 cv
312.502 433.587 312.628 433.929 312.88 434.217 cv
313.132 434.505 313.42 434.631 313.744 434.631 cv
314.176 434.631 314.77 434.343 315.508 433.749 cv
f
321.268 424.785 mo
321.268 427.431 li
323.158 427.431 li
323.158 428.043 li
321.268 428.043 li
321.268 433.263 li
321.268 433.785 321.34 434.145 321.484 434.325 cv
321.628 434.505 321.826 434.595 322.078 434.595 cv
322.258 434.595 322.456 434.541 322.636 434.415 cv
322.816 434.307 322.942 434.127 323.05 433.875 cv
323.392 433.875 li
323.176 434.451 322.888 434.883 322.528 435.171 cv
322.15 435.459 321.772 435.585 321.376 435.585 cv
321.088 435.585 320.818 435.513 320.566 435.369 cv
320.314 435.225 320.116 435.027 320.008 434.739 cv
319.882 434.469 319.828 434.037 319.828 433.461 cv
319.828 428.043 li
318.55 428.043 li
318.55 427.755 li
318.874 427.629 319.198 427.413 319.54 427.107 cv
319.864 426.801 320.17 426.441 320.44 426.009 cv
320.566 425.793 320.746 425.379 320.998 424.785 cv
321.268 424.785 li
f
330.772 432.417 mo
330.556 433.479 330.124 434.289 329.494 434.865 cv
328.864 435.441 328.162 435.711 327.406 435.711 cv
326.47 435.711 325.678 435.333 324.994 434.577 cv
324.31 433.821 323.986 432.777 323.986 431.463 cv
323.986 430.203 324.364 429.177 325.12 428.385 cv
325.876 427.593 326.776 427.197 327.838 427.197 cv
328.612 427.197 329.26 427.413 329.764 427.827 cv
330.268 428.241 330.538 428.673 330.538 429.123 cv
330.538 429.357 330.466 429.537 330.322 429.663 cv
330.178 429.807 329.98 429.861 329.728 429.861 cv
329.368 429.861 329.116 429.753 328.954 429.537 cv
328.846 429.429 328.774 429.195 328.738 428.835 cv
328.702 428.493 328.594 428.223 328.396 428.043 cv
328.18 427.863 327.892 427.773 327.532 427.773 cv
326.956 427.773 326.488 427.989 326.128 428.421 cv
325.642 428.997 325.408 429.771 325.408 430.707 cv
325.408 431.679 325.642 432.525 326.11 433.245 cv
326.578 433.983 327.226 434.343 328.036 434.343 cv
328.612 434.343 329.116 434.163 329.584 433.767 cv
329.908 433.497 330.214 433.011 330.52 432.291 cv
330.772 432.417 li
f
334.3 422.985 mo
334.3 428.871 li
334.948 428.151 335.452 427.701 335.83 427.503 cv
336.208 427.305 336.586 427.197 336.982 427.197 cv
337.432 427.197 337.828 427.323 338.152 427.575 cv
338.476 427.827 338.728 428.223 338.89 428.745 cv
338.998 429.141 339.052 429.825 339.052 430.815 cv
339.052 433.659 li
339.052 434.163 339.088 434.523 339.178 434.703 cv
339.232 434.847 339.322 434.973 339.466 435.045 cv
339.61 435.117 339.862 435.153 340.258 435.153 cv
340.258 435.477 li
336.298 435.477 li
336.298 435.153 li
336.478 435.153 li
336.838 435.153 337.108 435.099 337.252 434.991 cv
337.396 434.883 337.504 434.703 337.576 434.487 cv
337.576 434.397 337.594 434.127 337.594 433.659 cv
337.594 430.815 li
337.594 429.933 337.54 429.357 337.45 429.087 cv
337.36 428.817 337.216 428.619 337.018 428.475 cv
336.82 428.331 336.586 428.259 336.298 428.259 cv
336.01 428.259 335.704 428.349 335.398 428.493 cv
335.092 428.637 334.732 428.943 334.3 429.411 cv
334.3 433.659 li
334.3 434.217 334.318 434.559 334.39 434.685 cv
334.444 434.829 334.552 434.937 334.732 435.027 cv
334.894 435.117 335.182 435.153 335.596 435.153 cv
335.596 435.477 li
331.6 435.477 li
331.6 435.153 li
331.96 435.153 332.23 435.099 332.446 434.991 cv
332.554 434.937 332.662 434.829 332.734 434.667 cv
332.806 434.505 332.842 434.163 332.842 433.659 cv
332.842 426.369 li
332.842 425.451 332.806 424.893 332.77 424.677 cv
332.716 424.461 332.644 424.317 332.554 424.245 cv
332.464 424.173 332.338 424.137 332.194 424.137 cv
332.068 424.137 331.87 424.191 331.6 424.263 cv
331.474 423.957 li
333.886 422.985 li
334.3 422.985 li
f
grestore
grestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 /1 ]]
[/CSD [/0 /1 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/restore_mysetup gx
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Utils begin
[/EMC pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EOF
